(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{"2yx4":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return p})),t.d(n,"default",(function(){return s}));var a=t("zLVn"),i=(t("q1tI"),t("7ljp")),l=t("O6H6"),p={},r={_frontmatter:p},o=l.a;function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)(o,Object.assign({},r,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h3",null,"Synopsis"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install (with no args, in package dir)\nnpm install [<@scope>/]<name>\nnpm install [<@scope>/]<name>@<tag>\nnpm install [<@scope>/]<name>@<version>\nnpm install [<@scope>/]<name>@<version range>\nnpm install <alias>@npm:<name>\nnpm install <git-host>:<git-user>/<repo-name>\nnpm install <git repo url>\nnpm install <tarball file>\nnpm install <tarball url>\nnpm install <folder>\n\naliases: npm i, npm add\ncommon options: [-P|--save-prod|-D|--save-dev|-O|--save-optional] [-E|--save-exact] [-B|--save-bundle] [--no-save] [--dry-run]\n")),Object(i.b)("h3",null,"Description"),Object(i.b)("p",null,"This command installs a package, and any packages that it depends on. If the\npackage has a package-lock or shrinkwrap file, the installation of dependencies\nwill be driven by that, with an ",Object(i.b)("inlineCode",{parentName:"p"},"npm-shrinkwrap.json")," taking precedence if both\nfiles exist. See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v7/configuring-npm/package-lock-json"}),"package-lock.json")," and ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v7/commands/npm-shrinkwrap"}),Object(i.b)("inlineCode",{parentName:"a"},"npm shrinkwrap")),"."),Object(i.b)("p",null,"A ",Object(i.b)("inlineCode",{parentName:"p"},"package")," is:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"a) a folder containing a program described by a ",Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/configuring-npm/package-json"}),Object(i.b)("inlineCode",{parentName:"a"},"package.json"))," file"),Object(i.b)("li",{parentName:"ul"},"b) a gzipped tarball containing (a)"),Object(i.b)("li",{parentName:"ul"},"c) a url that resolves to (b)"),Object(i.b)("li",{parentName:"ul"},"d) a ",Object(i.b)("inlineCode",{parentName:"li"},"<name>@<version>")," that is published on the registry (see ",Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/using-npm/registry"}),Object(i.b)("inlineCode",{parentName:"a"},"registry")),") with (c)"),Object(i.b)("li",{parentName:"ul"},"e) a ",Object(i.b)("inlineCode",{parentName:"li"},"<name>@<tag>")," (see ",Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-dist-tag"}),Object(i.b)("inlineCode",{parentName:"a"},"npm dist-tag")),") that points to (d)"),Object(i.b)("li",{parentName:"ul"},"f) a ",Object(i.b)("inlineCode",{parentName:"li"},"<name>"),' that has a "latest" tag satisfying (e)'),Object(i.b)("li",{parentName:"ul"},"g) a ",Object(i.b)("inlineCode",{parentName:"li"},"<git remote url>")," that resolves to (a)")),Object(i.b)("p",null,"Even if you never publish your package, you can still get a lot of\nbenefits of using npm if you just want to write a node program (a), and\nperhaps if you also want to be able to easily install it elsewhere\nafter packing it up into a tarball (b)."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install")," (in package directory, no arguments):"),Object(i.b)("p",{parentName:"li"},"  Install the dependencies in the local node_modules folder."),Object(i.b)("p",{parentName:"li"},"  In global mode (ie, with ",Object(i.b)("inlineCode",{parentName:"p"},"-g")," or ",Object(i.b)("inlineCode",{parentName:"p"},"--global")," appended to the command),\nit installs the current package context (ie, the current working\ndirectory) as a global package."),Object(i.b)("p",{parentName:"li"},"  By default, ",Object(i.b)("inlineCode",{parentName:"p"},"npm install")," will install all modules listed as dependencies\nin ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v7/configuring-npm/package-json"}),Object(i.b)("inlineCode",{parentName:"a"},"package.json")),"."),Object(i.b)("p",{parentName:"li"},"  With the ",Object(i.b)("inlineCode",{parentName:"p"},"--production")," flag (or when the ",Object(i.b)("inlineCode",{parentName:"p"},"NODE_ENV")," environment variable\nis set to ",Object(i.b)("inlineCode",{parentName:"p"},"production"),"), npm will not install modules listed in\n",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies"),". To install all modules listed in both ",Object(i.b)("inlineCode",{parentName:"p"},"dependencies"),"\nand ",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies")," when ",Object(i.b)("inlineCode",{parentName:"p"},"NODE_ENV")," environment variable is set to ",Object(i.b)("inlineCode",{parentName:"p"},"production"),",\nyou can use ",Object(i.b)("inlineCode",{parentName:"p"},"--production=false"),"."),Object(i.b)("blockquote",{parentName:"li"},Object(i.b)("p",{parentName:"blockquote"},"NOTE: The ",Object(i.b)("inlineCode",{parentName:"p"},"--production")," flag has no particular meaning when adding a\ndependency to a project."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install <folder>"),":"),Object(i.b)("p",{parentName:"li"},"  Install the package in the directory as a symlink in the current project.\nIts dependencies will be installed before it's linked. If ",Object(i.b)("inlineCode",{parentName:"p"},"<folder>")," sits\ninside the root of your project, its dependencies may be hoisted to the\ntoplevel ",Object(i.b)("inlineCode",{parentName:"p"},"node_modules")," as they would for other types of dependencies.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install <tarball file>"),":"),Object(i.b)("p",{parentName:"li"},"  Install a package that is sitting on the filesystem.  Note: if you just want\nto link a dev directory into your npm root, you can do this more easily by\nusing ",Object(i.b)("inlineCode",{parentName:"p"},"npm link"),"."),Object(i.b)("p",{parentName:"li"},"  Tarball requirements:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The filename ",Object(i.b)("em",{parentName:"p"},"must")," use ",Object(i.b)("inlineCode",{parentName:"p"},".tar"),", ",Object(i.b)("inlineCode",{parentName:"p"},".tar.gz"),", or ",Object(i.b)("inlineCode",{parentName:"p"},".tgz")," as\nthe extension.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The package contents should reside in a subfolder inside the tarball (usually it is called ",Object(i.b)("inlineCode",{parentName:"p"},"package/"),"). npm strips one directory layer when installing the package (an equivalent of ",Object(i.b)("inlineCode",{parentName:"p"},"tar x --strip-components=1")," is run).")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"The package must contain a ",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," file with ",Object(i.b)("inlineCode",{parentName:"p"},"name")," and ",Object(i.b)("inlineCode",{parentName:"p"},"version")," properties."),Object(i.b)("p",{parentName:"li"},"Example:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{}),"  npm install ./package.tgz\n"))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install <tarball url>"),":"),Object(i.b)("p",{parentName:"li"},'  Fetch the tarball url, and then install it.  In order to distinguish between\nthis and other options, the argument must start with "http://" or "https://"'),Object(i.b)("p",{parentName:"li"},"  Example:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{}),"    npm install https://github.com/indexzero/forever/tarball/v0.5.6\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install [<@scope>/]<name>"),":"),Object(i.b)("p",{parentName:"li"},"  Do a ",Object(i.b)("inlineCode",{parentName:"p"},"<name>@<tag>")," install, where ",Object(i.b)("inlineCode",{parentName:"p"},"<tag>"),' is the "tag" config. (See\n',Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v7/using-npm/config"}),Object(i.b)("inlineCode",{parentName:"a"},"config")),". The config's default value is ",Object(i.b)("inlineCode",{parentName:"p"},"latest"),".)"),Object(i.b)("p",{parentName:"li"},"  In most cases, this will install the version of the modules tagged as\n",Object(i.b)("inlineCode",{parentName:"p"},"latest")," on the npm registry."),Object(i.b)("p",{parentName:"li"},"  Example:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{}),"    npm install sax\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install <alias>@npm:<name>"),":"),Object(i.b)("p",{parentName:"li"},"  Install a package under a custom alias. Allows multiple versions of\na same-name package side-by-side, more convenient import names for\npackages with otherwise long ones and using git forks replacements\nor forked npm packages as replacements. Aliasing works only on your\nproject and does not rename packages in transitive dependencies.\nAliases should follow the naming conventions stated in\n",Object(i.b)("a",Object.assign({parentName:"p"},{href:"https://www.npmjs.com/package/validate-npm-package-name#naming-rules"}),Object(i.b)("inlineCode",{parentName:"a"},"validate-npm-package-name")),"."),Object(i.b)("p",{parentName:"li"},"  Examples:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{}),"    npm install my-react@npm:react\n    npm install jquery2@npm:jquery@2\n    npm install jquery3@npm:jquery@3\n    npm install npa@npm:npm-package-arg\n")))),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"`npm install` saves any specified packages into `dependencies` by default.\nAdditionally, you can control where and how they get saved with some\nadditional flags:\n\n* `-P, --save-prod`: Package will appear in your `dependencies`. This is the\n                     default unless `-D` or `-O` are present.\n\n* `-D, --save-dev`: Package will appear in your `devDependencies`.\n\n* `-O, --save-optional`: Package will appear in your `optionalDependencies`.\n\n* `--no-save`: Prevents saving to `dependencies`.\n\nWhen using any of the above options to save dependencies to your\npackage.json, there are two additional, optional flags:\n\n* `-E, --save-exact`: Saved dependencies will be configured with an\n  exact version rather than using npm's default semver range\n  operator.\n\n* `-B, --save-bundle`: Saved dependencies will also be added to your `bundleDependencies` list.\n\nFurther, if you have an `npm-shrinkwrap.json` or `package-lock.json` then it\nwill be updated as well.\n\n`<scope>` is optional. The package will be downloaded from the registry\nassociated with the specified scope. If no registry is associated with\nthe given scope the default registry is assumed. See [`scope`](/cli/v7/using-npm/scope).\n\nNote: if you do not include the @-symbol on your scope name, npm will\ninterpret this as a GitHub repository instead, see below. Scopes names\nmust also be followed by a slash.\n\nExamples:\n\n```bash\nnpm install sax\nnpm install githubname/reponame\nnpm install @myorg/privatepackage\nnpm install node-tap --save-dev\nnpm install dtrace-provider --save-optional\nnpm install readable-stream --save-exact\nnpm install ansi-regex --save-bundle\n```\n\n**Note**: If there is a file or folder named `<name>` in the current\nworking directory, then it will try to install that, and only try to\nfetch the package by name if it is not valid.\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install [<@scope>/]<name>@<tag>"),":"),Object(i.b)("p",{parentName:"li"},"  Install the version of the package that is referenced by the specified tag.\nIf the tag does not exist in the registry data for that package, then this\nwill fail."),Object(i.b)("p",{parentName:"li"},"  Example:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install sax@latest\nnpm install @myorg/mypackage@latest\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install [<@scope>/]<name>@<version>"),":"),Object(i.b)("p",{parentName:"li"},"  Install the specified version of the package.  This will fail if the\nversion has not been published to the registry."),Object(i.b)("p",{parentName:"li"},"  Example:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install sax@0.1.1\nnpm install @myorg/privatepackage@1.5.0\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install [<@scope>/]<name>@<version range>"),":"),Object(i.b)("p",{parentName:"li"},"  Install a version of the package matching the specified version range.  This\nwill follow the same rules for resolving dependencies described in ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v7/configuring-npm/package-json"}),Object(i.b)("inlineCode",{parentName:"a"},"package.json")),"."),Object(i.b)("p",{parentName:"li"},"  Note that most version ranges must be put in quotes so that your shell will\ntreat it as a single argument."),Object(i.b)("p",{parentName:"li"},"  Example:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),'npm install sax@">=0.1.0 <0.2.0"\nnpm install @myorg/privatepackage@">=0.1.0 <0.2.0"\n'))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install <git remote url>"),":"),Object(i.b)("p",{parentName:"li"},"  Installs the package from the hosted git provider, cloning it with ",Object(i.b)("inlineCode",{parentName:"p"},"git"),".\nFor a full git remote url, only that URL will be attempted."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"  <protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>[#<commit-ish> | #semver:<semver>]\n")),Object(i.b)("p",{parentName:"li"},"  ",Object(i.b)("inlineCode",{parentName:"p"},"<protocol>")," is one of ",Object(i.b)("inlineCode",{parentName:"p"},"git"),", ",Object(i.b)("inlineCode",{parentName:"p"},"git+ssh"),", ",Object(i.b)("inlineCode",{parentName:"p"},"git+http"),", ",Object(i.b)("inlineCode",{parentName:"p"},"git+https"),", or\n",Object(i.b)("inlineCode",{parentName:"p"},"git+file"),"."),Object(i.b)("p",{parentName:"li"},"  If ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>"),", ",Object(i.b)("inlineCode",{parentName:"p"},"<semver>")," can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," or ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>")," is\nspecified, then the default branch of the repository is used."),Object(i.b)("p",{parentName:"li"},"  If the repository makes use of submodules, those submodules will be cloned\nas well."),Object(i.b)("p",{parentName:"li"},"  If the package being installed contains a ",Object(i.b)("inlineCode",{parentName:"p"},"prepare")," script, its\n",Object(i.b)("inlineCode",{parentName:"p"},"dependencies")," and ",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies")," will be installed, and the prepare\nscript will be run, before the package is packaged and installed."),Object(i.b)("p",{parentName:"li"},"  The following git environment variables are recognized by npm and will be\nadded to the environment when running git:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"GIT_ASKPASS"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"GIT_EXEC_PATH"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"GIT_PROXY_COMMAND"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"GIT_SSH"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"GIT_SSH_COMMAND"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"GIT_SSL_CAINFO"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"GIT_SSL_NO_VERIFY")),Object(i.b)("p",{parentName:"li"},"See the git man page for details."),Object(i.b)("p",{parentName:"li"},"Examples:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install git+ssh://git@github.com:npm/cli.git#v1.0.27\nnpm install git+ssh://git@github.com:npm/cli#semver:^5.0\nnpm install git+https://isaacs@github.com/npm/cli.git\nnpm install git://github.com/npm/cli.git#v1.0.27\nGIT_SSH_COMMAND='ssh -i ~/.ssh/custom_ident' npm install git+ssh://git@github.com:npm/cli.git\n"))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install <githubname>/<githubrepo>[#<commit-ish>]"),":")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install github:<githubname>/<githubrepo>[#<commit-ish>]"),":"),Object(i.b)("p",{parentName:"li"},"  Install the package at ",Object(i.b)("inlineCode",{parentName:"p"},"https://github.com/githubname/githubrepo")," by\nattempting to clone it using ",Object(i.b)("inlineCode",{parentName:"p"},"git"),"."),Object(i.b)("p",{parentName:"li"},"  If ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>"),", ",Object(i.b)("inlineCode",{parentName:"p"},"<semver>")," can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," or ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>")," is\nspecified, then ",Object(i.b)("inlineCode",{parentName:"p"},"master")," is used."),Object(i.b)("p",{parentName:"li"},"  As with regular git dependencies, ",Object(i.b)("inlineCode",{parentName:"p"},"dependencies")," and ",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies")," will\nbe installed if the package has a ",Object(i.b)("inlineCode",{parentName:"p"},"prepare")," script, before the package is\ndone installing."),Object(i.b)("p",{parentName:"li"},"  Examples:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install mygithubuser/myproject\nnpm install github:mygithubuser/myproject\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install gist:[<githubname>/]<gistID>[#<commit-ish>|#semver:<semver>]"),":"),Object(i.b)("p",{parentName:"li"},"  Install the package at ",Object(i.b)("inlineCode",{parentName:"p"},"https://gist.github.com/gistID")," by attempting to\nclone it using ",Object(i.b)("inlineCode",{parentName:"p"},"git"),". The GitHub username associated with the gist is\noptional and will not be saved in ",Object(i.b)("inlineCode",{parentName:"p"},"package.json"),"."),Object(i.b)("p",{parentName:"li"},"  As with regular git dependencies, ",Object(i.b)("inlineCode",{parentName:"p"},"dependencies")," and ",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies")," will\nbe installed if the package has a ",Object(i.b)("inlineCode",{parentName:"p"},"prepare")," script, before the package is\ndone installing."),Object(i.b)("p",{parentName:"li"},"  Example:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install gist:101a11beef\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install bitbucket:<bitbucketname>/<bitbucketrepo>[#<commit-ish>]"),":"),Object(i.b)("p",{parentName:"li"},"  Install the package at ",Object(i.b)("inlineCode",{parentName:"p"},"https://bitbucket.org/bitbucketname/bitbucketrepo"),"\nby attempting to clone it using ",Object(i.b)("inlineCode",{parentName:"p"},"git"),"."),Object(i.b)("p",{parentName:"li"},"  If ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>"),", ",Object(i.b)("inlineCode",{parentName:"p"},"<semver>")," can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," or ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>")," is\nspecified, then ",Object(i.b)("inlineCode",{parentName:"p"},"master")," is used."),Object(i.b)("p",{parentName:"li"},"  As with regular git dependencies, ",Object(i.b)("inlineCode",{parentName:"p"},"dependencies")," and ",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies")," will\nbe installed if the package has a ",Object(i.b)("inlineCode",{parentName:"p"},"prepare")," script, before the package is\ndone installing."),Object(i.b)("p",{parentName:"li"},"  Example:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install bitbucket:mybitbucketuser/myproject\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"npm install gitlab:<gitlabname>/<gitlabrepo>[#<commit-ish>]"),":"),Object(i.b)("p",{parentName:"li"},"  Install the package at ",Object(i.b)("inlineCode",{parentName:"p"},"https://gitlab.com/gitlabname/gitlabrepo"),"\nby attempting to clone it using ",Object(i.b)("inlineCode",{parentName:"p"},"git"),"."),Object(i.b)("p",{parentName:"li"},"  If ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>"),", ",Object(i.b)("inlineCode",{parentName:"p"},"<semver>")," can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," or ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>")," is\nspecified, then ",Object(i.b)("inlineCode",{parentName:"p"},"master")," is used."),Object(i.b)("p",{parentName:"li"},"  As with regular git dependencies, ",Object(i.b)("inlineCode",{parentName:"p"},"dependencies")," and ",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies")," will\nbe installed if the package has a ",Object(i.b)("inlineCode",{parentName:"p"},"prepare")," script, before the package is\ndone installing."),Object(i.b)("p",{parentName:"li"},"  Example:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install gitlab:mygitlabuser/myproject\nnpm install gitlab:myusr/myproj#semver:^5.0\n")))),Object(i.b)("p",null,"You may combine multiple arguments, and even multiple types of arguments.\nFor example:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),'npm install sax@">=0.1.0 <0.2.0" bench supervisor\n')),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--tag")," argument will apply to all of the specified install targets. If a\ntag with the given name exists, the tagged version is preferred over newer\nversions."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--dry-run")," argument will report in the usual way what the install would\nhave done without actually installing anything."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--package-lock-only")," argument will only update the ",Object(i.b)("inlineCode",{parentName:"p"},"package-lock.json"),",\ninstead of checking ",Object(i.b)("inlineCode",{parentName:"p"},"node_modules")," and downloading dependencies."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"-f")," or ",Object(i.b)("inlineCode",{parentName:"p"},"--force")," argument will force npm to fetch remote resources even if a\nlocal copy exists on disk."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install sax --force\n")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--no-fund")," argument will hide the message displayed at the end of each\ninstall that acknowledges the number of dependencies looking for funding.\nSee ",Object(i.b)("inlineCode",{parentName:"p"},"npm-fund(1)")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"-g")," or ",Object(i.b)("inlineCode",{parentName:"p"},"--global")," argument will cause npm to install the package globally\nrather than locally.  See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v7/configuring-npm/folders"}),"folders"),"."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--global-style")," argument will cause npm to install the package into\nyour local ",Object(i.b)("inlineCode",{parentName:"p"},"node_modules")," folder with the same layout it uses with the\nglobal ",Object(i.b)("inlineCode",{parentName:"p"},"node_modules")," folder. Only your direct dependencies will show in\n",Object(i.b)("inlineCode",{parentName:"p"},"node_modules")," and everything they depend on will be flattened in their\n",Object(i.b)("inlineCode",{parentName:"p"},"node_modules")," folders. This obviously will eliminate some deduping."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--ignore-scripts")," argument will cause npm to not execute any\nscripts defined in the package.json. See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v7/using-npm/scripts"}),Object(i.b)("inlineCode",{parentName:"a"},"scripts")),"."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--legacy-bundling")," argument will cause npm to install the package such\nthat versions of npm prior to 1.4, such as the one included with node 0.8,\ncan install the package. This eliminates all automatic deduping."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--link")," argument will cause npm to link global installs into the\nlocal space in some cases."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--no-bin-links")," argument will prevent npm from creating symlinks for\nany binaries the package might contain."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--no-optional")," argument will prevent optional dependencies from\nbeing installed."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--no-shrinkwrap")," argument, which will ignore an available\npackage lock or shrinkwrap file and use the package.json instead."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--no-package-lock")," argument will prevent npm from creating a\n",Object(i.b)("inlineCode",{parentName:"p"},"package-lock.json")," file.  When running with package-lock's disabled npm\nwill not automatically prune your node modules when installing."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--nodedir=/path/to/node/source")," argument will allow npm to find the\nnode source code so that npm can compile native modules."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--only={prod[uction]|dev[elopment]}")," argument will cause either only\n",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies")," or only non-",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies")," to be installed regardless of the ",Object(i.b)("inlineCode",{parentName:"p"},"NODE_ENV"),"."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"--no-audit")," argument can be used to disable sending of audit reports to\nthe configured registries.  See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"npm-audit"}),Object(i.b)("inlineCode",{parentName:"a"},"npm-audit"))," for details on what is sent."),Object(i.b)("p",null,"See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v7/using-npm/config"}),Object(i.b)("inlineCode",{parentName:"a"},"config")),".  Many of the configuration params have some\neffect on installation, since that's most of what npm does."),Object(i.b)("h4",null,"Algorithm"),Object(i.b)("p",null,"To install a package, npm uses the following algorithm:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"load the existing node_modules tree from disk\nclone the tree\nfetch the package.json and assorted metadata and add it to the clone\nwalk the clone and add any missing dependencies\n  dependencies will be added as close to the top as is possible\n  without breaking any other modules\ncompare the original tree with the cloned tree and make a list of\nactions to take to convert one to the other\nexecute all of the actions, deepest first\n  kinds of actions are install, update, remove and move\n")),Object(i.b)("p",null,"For this ",Object(i.b)("inlineCode",{parentName:"p"},"package{dep}")," structure: ",Object(i.b)("inlineCode",{parentName:"p"},"A{B,C}, B{C}, C{D}"),",\nthis algorithm produces:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"A\n+-- B\n+-- C\n+-- D\n")),Object(i.b)("p",null,"That is, the dependency from B to C is satisfied by the fact that A\nalready caused C to be installed at a higher level. D is still installed\nat the top level because nothing conflicts with it."),Object(i.b)("p",null,"For ",Object(i.b)("inlineCode",{parentName:"p"},"A{B,C}, B{C,D@1}, C{D@2}"),", this algorithm produces:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"A\n+-- B\n+-- C\n   `-- D@2\n+-- D@1\n")),Object(i.b)("p",null,"Because B's D@1 will be installed in the top level, C now has to install D@2\nprivately for itself. This algorithm is deterministic, but different trees may\nbe produced if two dependencies are requested for installation in a different\norder."),Object(i.b)("p",null,"See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v7/configuring-npm/folders"}),"folders")," for a more detailed description of the specific folder structures that npm creates."),Object(i.b)("h3",null,"Limitations of npm's Install Algorithm"),Object(i.b)("p",null,"npm will refuse to install any package with an identical name to the\ncurrent package. This can be overridden with the ",Object(i.b)("inlineCode",{parentName:"p"},"--force")," flag, but in\nmost cases can simply be addressed by changing the local package name."),Object(i.b)("p",null,"There are some very rare and pathological edge-cases where a cycle can\ncause npm to try to install a never-ending tree of packages.  Here is\nthe simplest case:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"A -> B -> A' -> B' -> A -> B -> A' -> B' -> A -> ...\n")),Object(i.b)("p",null,"where ",Object(i.b)("inlineCode",{parentName:"p"},"A")," is some version of a package, and ",Object(i.b)("inlineCode",{parentName:"p"},"A'")," is a different version\nof the same package.  Because ",Object(i.b)("inlineCode",{parentName:"p"},"B")," depends on a different version of ",Object(i.b)("inlineCode",{parentName:"p"},"A"),"\nthan the one that is already in the tree, it must install a separate\ncopy.  The same is true of ",Object(i.b)("inlineCode",{parentName:"p"},"A'"),", which must install ",Object(i.b)("inlineCode",{parentName:"p"},"B'"),".  Because ",Object(i.b)("inlineCode",{parentName:"p"},"B'"),"\ndepends on the original version of ",Object(i.b)("inlineCode",{parentName:"p"},"A"),", which has been overridden, the\ncycle falls into infinite regress."),Object(i.b)("p",null,"To avoid this situation, npm flat-out refuses to install any\n",Object(i.b)("inlineCode",{parentName:"p"},"name@version")," that is already present anywhere in the tree of package\nfolder ancestors.  A more correct, but more complex, solution would be\nto symlink the existing version into the new location.  If this ever\naffects a real use-case, it will be investigated."),Object(i.b)("h3",null,"See Also"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/configuring-npm/folders"}),"npm folders")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-update"}),"npm update")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-audit"}),"npm audit")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-fund"}),"npm fund")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-link"}),"npm link")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-rebuild"}),"npm rebuild")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/using-npm/scripts"}),"npm scripts")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-build"}),"npm build")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-config"}),"npm config")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/configuring-npm/npmrc"}),"npmrc")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/using-npm/registry"}),"npm registry")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-dist-tag"}),"npm dist-tag")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-uninstall"}),"npm uninstall")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/commands/npm-shrinkwrap"}),"npm shrinkwrap")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v7/configuring-npm/package-json"}),"package.json"))))}s.isMDXComponent=!0},O6H6:function(e,n,t){"use strict";var a=t("vOnD"),i=t("u9kb"),l=t("aOgs"),p=t("q1tI"),r=t.n(p),o=t("7ljp"),s=t("pD55"),c=t("8Aig"),b=t("ReZb"),m=t("GCVy"),d=t("+6vE");var g=function(e){var n=e.children;return r.a.createElement(i.d,{as:"pre",mt:0,mb:3,p:3,border:0,style:{color:"rgb(57, 58, 52)",backgroundColor:"rgb(246, 248, 250)",overflow:"auto"}},r.a.createElement(i.s,{fontFamily:"mono",fontSize:1},n))};var u=function(e){var n=e.children;return r.a.createElement("strong",null,n)},h=t("gnlW"),j=t("mwnC"),O=t("/Rw0"),N=t("dVM4"),f=Object(a.f)(i.e).withConfig({displayName:"table-of-contents___StyledBox",componentId:"eay2b8-0"})({listStyle:"none"});function y(e){var n=e.items,t=e.depth;return r.a.createElement(f,{key:n,as:"ul",m:0,p:0},n.map((function(e){return r.a.createElement(i.e,{as:"li",key:e.url,pl:t>0?3:0},r.a.createElement(i.n,{key:e.title,display:"inline-block",py:1,href:e.url,color:"gray.6"},e.title),e.items?r.a.createElement(y,{items:e.items,depth:t+1}):null)})))}y.defaultProps={depth:0};var v=y,C=t("MfeC");function w(e){var n=C.a.getPath(e.location.pathname),t=C.a.getVariantAndPage(e.root,n);if(!t)return null;var a=C.a.getVariantsForPage(e.root,t.page),l=[],p=a[0];return 0===a.length?null:(a.forEach((function(e){e.page.url===n&&(p=e),l.push(r.a.createElement(i.i.Item,{onClick:function(){window.location.href=e.page.url},key:e.variant.title},e.variant.title))})),r.a.createElement(i.i,{overlay:e.overlay},r.a.createElement(i.i.Button,null,p.variant.title),r.a.createElement(w.Menu,{direction:e.direction,width:e.menuWidth},l)))}w.Menu=Object(a.f)(i.i.Menu).withConfig({displayName:"variant-select__Menu",componentId:"sc-1rmksyl-0"})(["width:",";"],(function(e){return e.width?e.width:"160px"}));var k=w,x=Object(a.f)(i.k).withConfig({displayName:"layout___StyledFlex",componentId:"sc-1xkoyzi-0"})({zIndex:0}),E=Object(a.f)(i.l).withConfig({displayName:"layout___StyledGrid",componentId:"sc-1xkoyzi-1"})({alignItems:"start",alignSelf:"start"}),I=Object(a.f)(i.e).withConfig({displayName:"layout___StyledBox",componentId:"sc-1xkoyzi-2"})({gridArea:"heading"}),T=Object(a.f)(i.e).withConfig({displayName:"layout___StyledBox2",componentId:"sc-1xkoyzi-3"})({"margin-top":"25px"}),_=Object(a.f)(i.o).withConfig({displayName:"layout___StyledPosition",componentId:"sc-1xkoyzi-4"})({gridArea:"table-of-contents",overflow:"auto"}),A=Object(a.f)(i.e).withConfig({displayName:"layout___StyledBox3",componentId:"sc-1xkoyzi-5"})({gridArea:"content"});n.a=function(e){var n=e.children,t=e.pageContext,a=e.location,p=t.frontmatter,f=p.title,y=p.description,w=p.status,D=p.source,S=p.additionalContributors,B=void 0===S?[]:S,P=C.a.getVariantRoot(a.pathname);return r.a.createElement(o.a,{components:{Index:b.a,Note:m.a,Prompt:g,PromptReply:u,Screenshot:h.a}},r.a.createElement(i.k,{flexDirection:"column",minHeight:"100vh"},r.a.createElement(s.a,{title:f,description:y}),r.a.createElement(c.b,{location:a}),r.a.createElement(x,{flex:"1 1 auto",flexDirection:"row"},r.a.createElement(i.e,{display:["none",null,null,"block"]},r.a.createElement(j.a,{location:a})),r.a.createElement(E,{id:"skip-nav",maxWidth:"100%",gridTemplateColumns:["100%",null,"minmax(0, 65ch) 220px"],gridTemplateAreas:['"heading" "content"',null,'"heading table-of-contents" "content table-of-contents"'],gridColumnGap:[null,null,6,7],gridRowGap:3,mx:"auto",p:[5,6,null,7]},r.a.createElement(I,null,r.a.createElement(i.d,{borderWidth:0,borderBottomWidth:1,borderRadius:0,pb:2},r.a.createElement(i.e,null,r.a.createElement(i.e,null,r.a.createElement(i.m,{as:"h1"},f),y))),null!=P?r.a.createElement(T,null,r.a.createElement(k,{overlay:!0,direction:"se",menuWidth:"min(30ch, 500px)",root:P,location:a})):null),t.tableOfContents.items?r.a.createElement(_,{display:["none",null,"block"],position:"sticky",top:c.a+24,mt:"6px",maxHeight:"calc(100vh - "+c.a+"px - 24px)"},r.a.createElement(i.s,{display:"inline-block",fontWeight:"bold",mb:1},"Table of contents"),r.a.createElement(v,{items:t.tableOfContents.items})):null,r.a.createElement(A,null,w||D?r.a.createElement(i.k,{mb:3,alignItems:"center"},w?r.a.createElement(N.a,{status:w}):null,r.a.createElement(i.e,{mx:"auto"}),D?r.a.createElement(O.a,{href:D}):null):null,t.tableOfContents.items?r.a.createElement(i.e,{display:["block",null,"none"],mb:3},r.a.createElement(i.h,null,(function(e){var n=e.open;return r.a.createElement(r.a.Fragment,null,r.a.createElement(i.s,{as:"summary",fontWeight:"bold"},n?r.a.createElement(i.r,{icon:l.b,mr:2}):r.a.createElement(i.r,{icon:l.c,mr:2}),"Table of contents"),r.a.createElement(i.e,{pt:1},r.a.createElement(v,{items:t.tableOfContents.items})))}))):null,n,r.a.createElement(d.a,{editUrl:t.editUrl,contributors:t.contributors.concat(B.map((function(e){return{login:e}})))}))))))}}}]);
//# sourceMappingURL=component---content-cli-v-7-commands-npm-install-md-2a1f40cc174c71fe52c6.js.map