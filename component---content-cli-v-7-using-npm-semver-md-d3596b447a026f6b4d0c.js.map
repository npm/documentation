{"version":3,"sources":["webpack:///./content/cli/v7/using-npm/semver.md","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt-reply.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/table-of-contents.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/variant-select.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","Prompt","children","as","mt","mb","p","border","style","color","backgroundColor","overflow","fontFamily","fontSize","PromptReply","listStyle","TableOfContents","items","depth","key","m","map","item","url","pl","title","display","py","href","defaultProps","VariantSelect","path","NavHierarchy","getPath","location","pathname","vp","getVariantAndPage","root","variantPages","getVariantsForPage","page","selectedItem","length","forEach","match","push","Item","onClick","window","variant","overlay","Button","Menu","direction","width","menuWidth","styled","Dropdown","zIndex","alignItems","alignSelf","gridArea","Layout","pageContext","frontmatter","description","status","source","additionalContributors","variantRoot","getVariantRoot","Index","Note","Screenshot","flexDirection","minHeight","flex","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","borderWidth","borderBottomWidth","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","open","icon","ChevronDownIcon","mr","ChevronRightIcon","pt","editUrl","contributors","concat","login"],"mappings":"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","file":"component---content-cli-v-7-using-npm-semver-md-d3596b447a026f6b4d0c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/documentation/documentation/node_modules/gatsby-theme-doctornpm/src/components/layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install --save semver\n`}</code></pre>\n    <h2>{`Usage`}</h2>\n    <p>{`As a node module:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const semver = require('semver')\n\nsemver.valid('1.2.3') // '1.2.3'\nsemver.valid('a.b.c') // null\nsemver.clean('  =v1.2.3   ') // '1.2.3'\nsemver.satisfies('1.2.3', '1.x || >=2.5.0 || 5.0.0 - 7.2.3') // true\nsemver.gt('1.2.3', '9.8.7') // false\nsemver.lt('1.2.3', '9.8.7') // true\nsemver.minVersion('>=1.0.0') // '1.0.0'\nsemver.valid(semver.coerce('v2')) // '2.0.0'\nsemver.valid(semver.coerce('42.6.7.9.3-alpha')) // '42.6.7'\n`}</code></pre>\n    <p>{`As a command-line utility:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ semver -h\n\nA JavaScript implementation of the https://semver.org/ specification\nCopyright Isaac Z. Schlueter\n\nUsage: semver [options] <version> [<version> [...]]\nPrints valid versions sorted by SemVer precedence\n\nOptions:\n-r --range <range>\n        Print versions that match the specified range.\n\n-i --increment [<level>]\n        Increment a version by the specified level.  Level can\n        be one of: major, minor, patch, premajor, preminor,\n        prepatch, or prerelease.  Default level is 'patch'.\n        Only one version may be specified.\n\n--preid <identifier>\n        Identifier to be used to prefix premajor, preminor,\n        prepatch or prerelease version increments.\n\n-l --loose\n        Interpret versions and ranges loosely\n\n-p --include-prerelease\n        Always include prerelease versions in range matching\n\n-c --coerce\n        Coerce a string into SemVer if possible\n        (does not imply --loose)\n\nProgram exits successfully if any valid version satisfies\nall supplied ranges, and prints all satisfying versions.\n\nIf no satisfying versions are found, then exits failure.\n\nVersions are printed in ascending order, so supplying\nmultiple versions to the utility will just sort them.\n`}</code></pre>\n    <h2>{`Versions`}</h2>\n    <p>{`A \"version\" is described by the `}<inlineCode parentName=\"p\">{`v2.0.0`}</inlineCode>{` specification found at\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://semver.org/\"\n      }}>{`https://semver.org/`}</a>{`.`}</p>\n    <p>{`A leading `}<inlineCode parentName=\"p\">{`\"=\"`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`\"v\"`}</inlineCode>{` character is stripped off and ignored.`}</p>\n    <h2>{`Ranges`}</h2>\n    <p>{`A `}<inlineCode parentName=\"p\">{`version range`}</inlineCode>{` is a set of `}<inlineCode parentName=\"p\">{`comparators`}</inlineCode>{` which specify versions\nthat satisfy the range.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`comparator`}</inlineCode>{` is composed of an `}<inlineCode parentName=\"p\">{`operator`}</inlineCode>{` and a `}<inlineCode parentName=\"p\">{`version`}</inlineCode>{`.  The set\nof primitive `}<inlineCode parentName=\"p\">{`operators`}</inlineCode>{` is:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<`}</inlineCode>{` Less than`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<=`}</inlineCode>{` Less than or equal to`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`>`}</inlineCode>{` Greater than`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`>=`}</inlineCode>{` Greater than or equal to`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`=`}</inlineCode>{` Equal.  If no operator is specified, then equality is assumed,\nso this operator is optional, but MAY be included.`}</li>\n    </ul>\n    <p>{`For example, the comparator `}<inlineCode parentName=\"p\">{`>=1.2.7`}</inlineCode>{` would match the versions\n`}<inlineCode parentName=\"p\">{`1.2.7`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`1.2.8`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`2.5.3`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`1.3.9`}</inlineCode>{`, but not the versions `}<inlineCode parentName=\"p\">{`1.2.6`}</inlineCode>{`\nor `}<inlineCode parentName=\"p\">{`1.1.0`}</inlineCode>{`.`}</p>\n    <p>{`Comparators can be joined by whitespace to form a `}<inlineCode parentName=\"p\">{`comparator set`}</inlineCode>{`,\nwhich is satisfied by the `}<strong parentName=\"p\">{`intersection`}</strong>{` of all of the comparators\nit includes.`}</p>\n    <p>{`A range is composed of one or more comparator sets, joined by `}<inlineCode parentName=\"p\">{`||`}</inlineCode>{`.  A\nversion matches a range if and only if every comparator in at least\none of the `}<inlineCode parentName=\"p\">{`||`}</inlineCode>{`-separated comparator sets is satisfied by the version.`}</p>\n    <p>{`For example, the range `}<inlineCode parentName=\"p\">{`>=1.2.7 <1.3.0`}</inlineCode>{` would match the versions\n`}<inlineCode parentName=\"p\">{`1.2.7`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`1.2.8`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`1.2.99`}</inlineCode>{`, but not the versions `}<inlineCode parentName=\"p\">{`1.2.6`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`1.3.0`}</inlineCode>{`,\nor `}<inlineCode parentName=\"p\">{`1.1.0`}</inlineCode>{`.`}</p>\n    <p>{`The range `}<inlineCode parentName=\"p\">{`1.2.7 || >=1.2.9 <2.0.0`}</inlineCode>{` would match the versions `}<inlineCode parentName=\"p\">{`1.2.7`}</inlineCode>{`,\n`}<inlineCode parentName=\"p\">{`1.2.9`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`1.4.6`}</inlineCode>{`, but not the versions `}<inlineCode parentName=\"p\">{`1.2.8`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`2.0.0`}</inlineCode>{`.`}</p>\n    <h3>{`Prerelease Tags`}</h3>\n    <p>{`If a version has a prerelease tag (for example, `}<inlineCode parentName=\"p\">{`1.2.3-alpha.3`}</inlineCode>{`) then\nit will only be allowed to satisfy comparator sets if at least one\ncomparator with the same `}<inlineCode parentName=\"p\">{`[major, minor, patch]`}</inlineCode>{` tuple also has a\nprerelease tag.`}</p>\n    <p>{`For example, the range `}<inlineCode parentName=\"p\">{`>1.2.3-alpha.3`}</inlineCode>{` would be allowed to match the\nversion `}<inlineCode parentName=\"p\">{`1.2.3-alpha.7`}</inlineCode>{`, but it would `}<em parentName=\"p\">{`not`}</em>{` be satisfied by\n`}<inlineCode parentName=\"p\">{`3.4.5-alpha.9`}</inlineCode>{`, even though `}<inlineCode parentName=\"p\">{`3.4.5-alpha.9`}</inlineCode>{` is technically \"greater\nthan\" `}<inlineCode parentName=\"p\">{`1.2.3-alpha.3`}</inlineCode>{` according to the SemVer sort rules.  The version\nrange only accepts prerelease tags on the `}<inlineCode parentName=\"p\">{`1.2.3`}</inlineCode>{` version.  The\nversion `}<inlineCode parentName=\"p\">{`3.4.5`}</inlineCode>{` `}<em parentName=\"p\">{`would`}</em>{` satisfy the range, because it does not have a\nprerelease flag, and `}<inlineCode parentName=\"p\">{`3.4.5`}</inlineCode>{` is greater than `}<inlineCode parentName=\"p\">{`1.2.3-alpha.7`}</inlineCode>{`.`}</p>\n    <p>{`The purpose for this behavior is twofold.  First, prerelease versions\nfrequently are updated very quickly, and contain many breaking changes\nthat are (by the author's design) not yet fit for public consumption.\nTherefore, by default, they are excluded from range matching\nsemantics.`}</p>\n    <p>{`Second, a user who has opted into using a prerelease version has\nclearly indicated the intent to use `}<em parentName=\"p\">{`that specific`}</em>{` set of\nalpha/beta/rc versions.  By including a prerelease tag in the range,\nthe user is indicating that they are aware of the risk.  However, it\nis still not appropriate to assume that they have opted into taking a\nsimilar risk on the `}<em parentName=\"p\">{`next`}</em>{` set of prerelease versions.`}</p>\n    <p>{`Note that this behavior can be suppressed (treating all prerelease\nversions as if they were normal versions, for the purpose of range\nmatching) by setting the `}<inlineCode parentName=\"p\">{`includePrerelease`}</inlineCode>{` flag on the options\nobject to any\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/npm/node-semver#functions\"\n      }}>{`functions`}</a>{` that do\nrange matching.`}</p>\n    <h4>{`Prerelease Identifiers`}</h4>\n    <p>{`The method `}<inlineCode parentName=\"p\">{`.inc`}</inlineCode>{` takes an additional `}<inlineCode parentName=\"p\">{`identifier`}</inlineCode>{` string argument that\nwill append the value of the string as a prerelease identifier:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`semver.inc('1.2.3', 'prerelease', 'beta')\n// '1.2.4-beta.0'\n`}</code></pre>\n    <p>{`command-line example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ semver 1.2.3 -i prerelease --preid beta\n1.2.4-beta.0\n`}</code></pre>\n    <p>{`Which then can be used to increment further:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ semver 1.2.4-beta.0 -i prerelease\n1.2.4-beta.1\n`}</code></pre>\n    <h3>{`Advanced Range Syntax`}</h3>\n    <p>{`Advanced range syntax desugars to primitive comparators in\ndeterministic ways.`}</p>\n    <p>{`Advanced ranges may be combined in the same way as primitive\ncomparators using white space or `}<inlineCode parentName=\"p\">{`||`}</inlineCode>{`.`}</p>\n    <h4>{`Hyphen Ranges `}<inlineCode parentName=\"h4\">{`X.Y.Z - A.B.C`}</inlineCode></h4>\n    <p>{`Specifies an inclusive set.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1.2.3 - 2.3.4`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.3 <=2.3.4`}</inlineCode></li>\n    </ul>\n    <p>{`If a partial version is provided as the first version in the inclusive\nrange, then the missing pieces are replaced with zeroes.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1.2 - 2.3.4`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.0 <=2.3.4`}</inlineCode></li>\n    </ul>\n    <p>{`If a partial version is provided as the second version in the\ninclusive range, then all versions that start with the supplied parts\nof the tuple are accepted, but nothing that would be greater than the\nprovided tuple parts.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1.2.3 - 2.3`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.3 <2.4.0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1.2.3 - 2`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.3 <3.0.0`}</inlineCode></li>\n    </ul>\n    <h4>{`X-Ranges `}<inlineCode parentName=\"h4\">{`1.2.x`}</inlineCode>{` `}<inlineCode parentName=\"h4\">{`1.X`}</inlineCode>{` `}<inlineCode parentName=\"h4\">{`1.2.*`}</inlineCode>{` `}<inlineCode parentName=\"h4\">{`*`}</inlineCode></h4>\n    <p>{`Any of `}<inlineCode parentName=\"p\">{`X`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{` may be used to \"stand in\" for one of the\nnumeric values in the `}<inlineCode parentName=\"p\">{`[major, minor, patch]`}</inlineCode>{` tuple.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`*`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.0.0`}</inlineCode>{` (Any version satisfies)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1.x`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.0.0 <2.0.0`}</inlineCode>{` (Matching major version)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1.2.x`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.0 <1.3.0`}</inlineCode>{` (Matching major and minor versions)`}</li>\n    </ul>\n    <p>{`A partial version range is treated as an X-Range, so the special\ncharacter is in fact optional.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`\"\"`}</inlineCode>{` (empty string) := `}<inlineCode parentName=\"li\">{`*`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.0.0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`1.x.x`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.0.0 <2.0.0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1.2`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`1.2.x`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.0 <1.3.0`}</inlineCode></li>\n    </ul>\n    <h4>{`Tilde Ranges `}<inlineCode parentName=\"h4\">{`~1.2.3`}</inlineCode>{` `}<inlineCode parentName=\"h4\">{`~1.2`}</inlineCode>{` `}<inlineCode parentName=\"h4\">{`~1`}</inlineCode></h4>\n    <p>{`Allows patch-level changes if a minor version is specified on the\ncomparator.  Allows minor-level changes if not.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`~1.2.3`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.3 <1.(2+1).0`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.3 <1.3.0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`~1.2`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.0 <1.(2+1).0`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.0 <1.3.0`}</inlineCode>{` (Same as `}<inlineCode parentName=\"li\">{`1.2.x`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`~1`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.0.0 <(1+1).0.0`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.0.0 <2.0.0`}</inlineCode>{` (Same as `}<inlineCode parentName=\"li\">{`1.x`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`~0.2.3`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.2.3 <0.(2+1).0`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.2.3 <0.3.0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`~0.2`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.2.0 <0.(2+1).0`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.2.0 <0.3.0`}</inlineCode>{` (Same as `}<inlineCode parentName=\"li\">{`0.2.x`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`~0`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.0.0 <(0+1).0.0`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.0.0 <1.0.0`}</inlineCode>{` (Same as `}<inlineCode parentName=\"li\">{`0.x`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`~1.2.3-beta.2`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.3-beta.2 <1.3.0`}</inlineCode>{` Note that prereleases in\nthe `}<inlineCode parentName=\"li\">{`1.2.3`}</inlineCode>{` version will be allowed, if they are greater than or\nequal to `}<inlineCode parentName=\"li\">{`beta.2`}</inlineCode>{`.  So, `}<inlineCode parentName=\"li\">{`1.2.3-beta.4`}</inlineCode>{` would be allowed, but\n`}<inlineCode parentName=\"li\">{`1.2.4-beta.2`}</inlineCode>{` would not, because it is a prerelease of a\ndifferent `}<inlineCode parentName=\"li\">{`[major, minor, patch]`}</inlineCode>{` tuple.`}</li>\n    </ul>\n    <h4>{`Caret Ranges `}<inlineCode parentName=\"h4\">{`^1.2.3`}</inlineCode>{` `}<inlineCode parentName=\"h4\">{`^0.2.5`}</inlineCode>{` `}<inlineCode parentName=\"h4\">{`^0.0.4`}</inlineCode></h4>\n    <p>{`Allows changes that do not modify the left-most non-zero digit in the\n`}<inlineCode parentName=\"p\">{`[major, minor, patch]`}</inlineCode>{` tuple.  In other words, this allows patch and\nminor updates for versions `}<inlineCode parentName=\"p\">{`1.0.0`}</inlineCode>{` and above, patch updates for\nversions `}<inlineCode parentName=\"p\">{`0.X >=0.1.0`}</inlineCode>{`, and `}<em parentName=\"p\">{`no`}</em>{` updates for versions `}<inlineCode parentName=\"p\">{`0.0.X`}</inlineCode>{`.`}</p>\n    <p>{`Many authors treat a `}<inlineCode parentName=\"p\">{`0.x`}</inlineCode>{` version as if the `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{` were the major\n\"breaking-change\" indicator.`}</p>\n    <p>{`Caret ranges are ideal when an author may make breaking changes\nbetween `}<inlineCode parentName=\"p\">{`0.2.4`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`0.3.0`}</inlineCode>{` releases, which is a common practice.\nHowever, it presumes that there will `}<em parentName=\"p\">{`not`}</em>{` be breaking changes between\n`}<inlineCode parentName=\"p\">{`0.2.4`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`0.2.5`}</inlineCode>{`.  It allows for changes that are presumed to be\nadditive (but non-breaking), according to commonly observed practices.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^1.2.3`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.3 <2.0.0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^0.2.3`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.2.3 <0.3.0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^0.0.3`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.0.3 <0.0.4`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^1.2.3-beta.2`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.3-beta.2 <2.0.0`}</inlineCode>{` Note that prereleases in\nthe `}<inlineCode parentName=\"li\">{`1.2.3`}</inlineCode>{` version will be allowed, if they are greater than or\nequal to `}<inlineCode parentName=\"li\">{`beta.2`}</inlineCode>{`.  So, `}<inlineCode parentName=\"li\">{`1.2.3-beta.4`}</inlineCode>{` would be allowed, but\n`}<inlineCode parentName=\"li\">{`1.2.4-beta.2`}</inlineCode>{` would not, because it is a prerelease of a\ndifferent `}<inlineCode parentName=\"li\">{`[major, minor, patch]`}</inlineCode>{` tuple.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^0.0.3-beta`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.0.3-beta <0.0.4`}</inlineCode>{`  Note that prereleases in the\n`}<inlineCode parentName=\"li\">{`0.0.3`}</inlineCode>{` version `}<em parentName=\"li\">{`only`}</em>{` will be allowed, if they are greater than or\nequal to `}<inlineCode parentName=\"li\">{`beta`}</inlineCode>{`.  So, `}<inlineCode parentName=\"li\">{`0.0.3-pr.2`}</inlineCode>{` would be allowed.`}</li>\n    </ul>\n    <p>{`When parsing caret ranges, a missing `}<inlineCode parentName=\"p\">{`patch`}</inlineCode>{` value desugars to the\nnumber `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`, but will allow flexibility within that value, even if the\nmajor and minor versions are both `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^1.2.x`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.2.0 <2.0.0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^0.0.x`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.0.0 <0.1.0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^0.0`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.0.0 <0.1.0`}</inlineCode></li>\n    </ul>\n    <p>{`A missing `}<inlineCode parentName=\"p\">{`minor`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`patch`}</inlineCode>{` values will desugar to zero, but also\nallow flexibility within those values, even if the major version is\nzero.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^1.x`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=1.0.0 <2.0.0`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^0.x`}</inlineCode>{` := `}<inlineCode parentName=\"li\">{`>=0.0.0 <1.0.0`}</inlineCode></li>\n    </ul>\n    <h3>{`Range Grammar`}</h3>\n    <p>{`Putting all this together, here is a Backus-Naur grammar for ranges,\nfor the benefit of parser authors:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bnf\"\n      }}>{`range-set  ::= range ( logical-or range ) *\nlogical-or ::= ( ' ' ) * '||' ( ' ' ) *\nrange      ::= hyphen | simple ( ' ' simple ) * | ''\nhyphen     ::= partial ' - ' partial\nsimple     ::= primitive | partial | tilde | caret\nprimitive  ::= ( '<' | '>' | '>=' | '<=' | '=' ) partial\npartial    ::= xr ( '.' xr ( '.' xr qualifier ? )? )?\nxr         ::= 'x' | 'X' | '*' | nr\nnr         ::= '0' | ['1'-'9'] ( ['0'-'9'] ) *\ntilde      ::= '~' partial\ncaret      ::= '^' partial\nqualifier  ::= ( '-' pre )? ( '+' build )?\npre        ::= parts\nbuild      ::= parts\nparts      ::= part ( '.' part ) *\npart       ::= nr | [-0-9A-Za-z]+\n`}</code></pre>\n    <h2>{`Functions`}</h2>\n    <p>{`All methods and classes take a final `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` object argument.  All\noptions in this object are `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` by default.  The options supported\nare:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`loose`}</inlineCode>{`  Be more forgiving about not-quite-valid semver strings.\n(Any resulting output will always be 100% strict compliant, of\ncourse.)  For backwards compatibility reasons, if the `}<inlineCode parentName=\"li\">{`options`}</inlineCode>{`\nargument is a boolean value instead of an object, it is interpreted\nto be the `}<inlineCode parentName=\"li\">{`loose`}</inlineCode>{` param.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`includePrerelease`}</inlineCode>{`  Set to suppress the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/npm/node-semver#prerelease-tags\"\n        }}>{`default\nbehavior`}</a>{` of\nexcluding prerelease tagged versions from ranges unless they are\nexplicitly opted into.`}</li>\n    </ul>\n    <p>{`Strict-mode Comparators and Ranges will be strict about the SemVer\nstrings that they parse.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`valid(v)`}</inlineCode>{`: Return the parsed version, or null if it's not valid.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`inc(v, release)`}</inlineCode>{`: Return the version incremented by the release\ntype (`}<inlineCode parentName=\"li\">{`major`}</inlineCode>{`,   `}<inlineCode parentName=\"li\">{`premajor`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`minor`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`preminor`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`patch`}</inlineCode>{`,\n`}<inlineCode parentName=\"li\">{`prepatch`}</inlineCode>{`, or `}<inlineCode parentName=\"li\">{`prerelease`}</inlineCode>{`), or null if it's not valid`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`premajor`}</inlineCode>{` in one call will bump the version up to the next major\nversion and down to a prerelease of that major version.\n`}<inlineCode parentName=\"li\">{`preminor`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`prepatch`}</inlineCode>{` work the same way.`}</li>\n          <li parentName=\"ul\">{`If called from a non-prerelease version, the `}<inlineCode parentName=\"li\">{`prerelease`}</inlineCode>{` will work the\nsame as `}<inlineCode parentName=\"li\">{`prepatch`}</inlineCode>{`. It increments the patch version, then makes a\nprerelease. If the input version is already a prerelease it simply\nincrements it.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`prerelease(v)`}</inlineCode>{`: Returns an array of prerelease components, or null\nif none exist. Example: `}<inlineCode parentName=\"li\">{`prerelease('1.2.3-alpha.1') -> ['alpha', 1]`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`major(v)`}</inlineCode>{`: Return the major version number.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`minor(v)`}</inlineCode>{`: Return the minor version number.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`patch(v)`}</inlineCode>{`: Return the patch version number.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`intersects(r1, r2, loose)`}</inlineCode>{`: Return true if the two supplied ranges\nor comparators intersect.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`parse(v)`}</inlineCode>{`: Attempt to parse a string as a semantic version, returning either\na `}<inlineCode parentName=\"li\">{`SemVer`}</inlineCode>{` object or `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3>{`Comparison`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`gt(v1, v2)`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`v1 > v2`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`gte(v1, v2)`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`v1 >= v2`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`lt(v1, v2)`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`v1 < v2`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`lte(v1, v2)`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`v1 <= v2`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`eq(v1, v2)`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`v1 == v2`}</inlineCode>{` This is true if they're logically equivalent,\neven if they're not the exact same string.  You already know how to\ncompare strings.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`neq(v1, v2)`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`v1 != v2`}</inlineCode>{` The opposite of `}<inlineCode parentName=\"li\">{`eq`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cmp(v1, comparator, v2)`}</inlineCode>{`: Pass in a comparison string, and it'll call\nthe corresponding function above.  `}<inlineCode parentName=\"li\">{`\"===\"`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`\"!==\"`}</inlineCode>{` do simple\nstring comparison, but are included for completeness.  Throws if an\ninvalid comparison string is provided.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`compare(v1, v2)`}</inlineCode>{`: Return `}<inlineCode parentName=\"li\">{`0`}</inlineCode>{` if `}<inlineCode parentName=\"li\">{`v1 == v2`}</inlineCode>{`, or `}<inlineCode parentName=\"li\">{`1`}</inlineCode>{` if `}<inlineCode parentName=\"li\">{`v1`}</inlineCode>{` is greater, or `}<inlineCode parentName=\"li\">{`-1`}</inlineCode>{` if\n`}<inlineCode parentName=\"li\">{`v2`}</inlineCode>{` is greater.  Sorts in ascending order if passed to `}<inlineCode parentName=\"li\">{`Array.sort()`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rcompare(v1, v2)`}</inlineCode>{`: The reverse of compare.  Sorts an array of versions\nin descending order when passed to `}<inlineCode parentName=\"li\">{`Array.sort()`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`diff(v1, v2)`}</inlineCode>{`: Returns difference between two versions by the release type\n(`}<inlineCode parentName=\"li\">{`major`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`premajor`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`minor`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`preminor`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`patch`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`prepatch`}</inlineCode>{`, or `}<inlineCode parentName=\"li\">{`prerelease`}</inlineCode>{`),\nor null if the versions are the same.`}</li>\n    </ul>\n    <h3>{`Comparators`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`intersects(comparator)`}</inlineCode>{`: Return true if the comparators intersect`}</li>\n    </ul>\n    <h3>{`Ranges`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`validRange(range)`}</inlineCode>{`: Return the valid range or null if it's not valid`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`satisfies(version, range)`}</inlineCode>{`: Return true if the version satisfies the\nrange.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`maxSatisfying(versions, range)`}</inlineCode>{`: Return the highest version in the list\nthat satisfies the range, or `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{` if none of them do.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`minSatisfying(versions, range)`}</inlineCode>{`: Return the lowest version in the list\nthat satisfies the range, or `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{` if none of them do.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`minVersion(range)`}</inlineCode>{`: Return the lowest version that can possibly match\nthe given range.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`gtr(version, range)`}</inlineCode>{`: Return `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` if version is greater than all the\nversions possible in the range.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ltr(version, range)`}</inlineCode>{`: Return `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` if version is less than all the\nversions possible in the range.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`outside(version, range, hilo)`}</inlineCode>{`: Return true if the version is outside\nthe bounds of the range in either the high or low direction.  The\n`}<inlineCode parentName=\"li\">{`hilo`}</inlineCode>{` argument must be either the string `}<inlineCode parentName=\"li\">{`'>'`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`'<'`}</inlineCode>{`.  (This is\nthe function called by `}<inlineCode parentName=\"li\">{`gtr`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`ltr`}</inlineCode>{`.)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`intersects(range)`}</inlineCode>{`: Return true if any of the ranges comparators intersect`}</li>\n    </ul>\n    <p>{`Note that, since ranges may be non-contiguous, a version might not be\ngreater than a range, less than a range, `}<em parentName=\"p\">{`or`}</em>{` satisfy a range!  For\nexample, the range `}<inlineCode parentName=\"p\">{`1.2 <1.2.9 || >2.0.0`}</inlineCode>{` would have a hole from `}<inlineCode parentName=\"p\">{`1.2.9`}</inlineCode>{`\nuntil `}<inlineCode parentName=\"p\">{`2.0.0`}</inlineCode>{`, so the version `}<inlineCode parentName=\"p\">{`1.2.10`}</inlineCode>{` would not be greater than the\nrange (because `}<inlineCode parentName=\"p\">{`2.0.1`}</inlineCode>{` satisfies, which is higher), nor less than the\nrange (since `}<inlineCode parentName=\"p\">{`1.2.8`}</inlineCode>{` satisfies, which is lower), and it also does not\nsatisfy the range.`}</p>\n    <p>{`If you want to know if a version satisfies or does not satisfy a\nrange, use the `}<inlineCode parentName=\"p\">{`satisfies(version, range)`}</inlineCode>{` function.`}</p>\n    <h3>{`Coercion`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`coerce(version)`}</inlineCode>{`: Coerces a string to semver if possible`}</li>\n    </ul>\n    <p>{`This aims to provide a very forgiving translation of a non-semver string to\nsemver. It looks for the first digit in a string, and consumes all\nremaining characters which satisfy at least a partial semver (e.g., `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{`,\n`}<inlineCode parentName=\"p\">{`1.2`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`1.2.3`}</inlineCode>{`) up to the max permitted length (256 characters).  Longer\nversions are simply truncated (`}<inlineCode parentName=\"p\">{`4.6.3.9.2-alpha2`}</inlineCode>{` becomes `}<inlineCode parentName=\"p\">{`4.6.3`}</inlineCode>{`).  All\nsurrounding text is simply ignored (`}<inlineCode parentName=\"p\">{`v3.4 replaces v3.3.1`}</inlineCode>{` becomes\n`}<inlineCode parentName=\"p\">{`3.4.0`}</inlineCode>{`).  Only text which lacks digits will fail coercion (`}<inlineCode parentName=\"p\">{`version one`}</inlineCode>{`\nis not valid).  The maximum  length for any semver component considered for\ncoercion is 16 characters; longer components will be ignored\n(`}<inlineCode parentName=\"p\">{`10000000000000000.4.7.4`}</inlineCode>{` becomes `}<inlineCode parentName=\"p\">{`4.7.4`}</inlineCode>{`).  The maximum value for any\nsemver component is `}<inlineCode parentName=\"p\">{`Number.MAX_SAFE_INTEGER || (2**53 - 1)`}</inlineCode>{`; higher value\ncomponents are invalid (`}<inlineCode parentName=\"p\">{`9999999999999999.4.7.4`}</inlineCode>{` is likely invalid).`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\nimport {BorderBox, Text} from '@primer/components'\n\nfunction Prompt({children}) {\n  return (\n      <BorderBox\n       as=\"pre\"\n       mt={0}\n       mb={3}\n       p={3}\n       border={0}\n       style={{color: 'rgb(57, 58, 52)', backgroundColor: 'rgb(246, 248, 250)', overflow: 'auto'}}\n      >\n          <Text fontFamily=\"mono\" fontSize={1}>{children}</Text>\n      </BorderBox>\n  )\n}\n\nexport default Prompt\n","import React from 'react';\n\nfunction PromptReply({children}) {\n    return (<strong>{children}</strong>);\n}\n\nexport default PromptReply;\n","import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box key={items} as=\"ul\" m={0} p={0} css={{listStyle: 'none'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link key={item.title} display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","// VariantSelect: allows a variant to be set up within a document hierarchy\n//\n// For example, given two paths `/docs/v1.0/foo` and `/docs/v2.0/foo`, the\n// second folder acts as a variant.  If you use <VariantSelect root=\"/docs\">\n// then you'll get a selection for the different variants (v1.0, v2.0).\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Dropdown } from '@primer/components';\nimport NavHierarchy from '../nav-hierarchy'\n\nVariantSelect.Menu = styled(Dropdown.Menu)`\n  width: ${props => props.width ? props.width : '160px'};\n`\n\nfunction VariantSelect(props) {\n  const path = NavHierarchy.getPath(props.location.pathname);\n  const vp = NavHierarchy.getVariantAndPage(props.root, path);\n\n  if (!vp) {\n      return null;\n  }\n\n  const variantPages = NavHierarchy.getVariantsForPage(props.root, vp.page);\n  const items = [];\n  let selectedItem = variantPages[0];\n\n  if (variantPages.length === 0) {\n      return null;\n  }\n\n  variantPages.forEach((match) => {\n      if (match.page.url === path) {\n          selectedItem = match;\n      }\n\n      items.push(<Dropdown.Item onClick={() => { window.location.href = match.page.url; }} key={match.variant.title}>{match.variant.title}</Dropdown.Item>);\n  });\n\n  return (\n      <Dropdown overlay={props.overlay}>\n          <Dropdown.Button>{selectedItem.variant.title}</Dropdown.Button>\n          <VariantSelect.Menu direction={props.direction} width={props.menuWidth}>\n              {items}\n          </VariantSelect.Menu>\n      </Dropdown>\n  );\n}\n\nexport default VariantSelect\n","import {\n  BorderBox,\n  Box,\n  Details,\n  Flex,\n  Grid,\n  Heading,\n  Position,\n  StyledOcticon,\n  Text,\n} from '@primer/components'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/octicons-react'\nimport React from 'react'\nimport {MDXProvider} from \"@mdx-js/react\"\nimport Head from './head'\nimport Header, {HEADER_HEIGHT} from './header'\nimport Index from './index'\nimport Note from './note'\nimport PageFooter from './page-footer'\nimport Prompt from './prompt'\nimport PromptReply from './prompt-reply'\nimport Screenshot from './screenshot'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\nimport VariantSelect from './variant-select'\nimport NavHierarchy from '../nav-hierarchy'\n\nfunction Layout({children, pageContext, location}) {\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  const variantRoot = NavHierarchy.getVariantRoot(location.pathname);\n\n  return (\n    <MDXProvider components={{\n      Index,\n      Note,\n      Prompt,\n      PromptReply,\n      Screenshot\n    }}>\n\n      <Flex flexDirection=\"column\" minHeight=\"100vh\">\n        <Head title={title} description={description} />\n        <Header location={location} />\n        <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n          <Box display={['none', null, null, 'block']}>\n            <Sidebar location={location} />\n          </Box>\n          <Grid\n            id=\"skip-nav\"\n            maxWidth=\"100%\"\n            gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n            gridTemplateAreas={[\n              '\"heading\" \"content\"',\n              null,\n              '\"heading table-of-contents\" \"content table-of-contents\"',\n            ]}\n            gridColumnGap={[null, null, 6, 7]}\n            gridRowGap={3}\n            mx=\"auto\"\n            p={[5, 6, null, 7]}\n            css={{alignItems: 'start', alignSelf: 'start'}}\n          >\n            <Box css={{gridArea: 'heading'}}>\n              <BorderBox\n                borderWidth={0}\n                borderBottomWidth={1}\n                borderRadius={0}\n                pb={2}\n              >\n                <Box>\n                  <Box>\n                    <Heading as=\"h1\">{title}</Heading>\n                    {description}\n                  </Box>\n                </Box>\n              </BorderBox>\n              {variantRoot != null ? (\n                <Box css={{'margin-top': '25px'}}>\n                  <VariantSelect overlay={true} direction=\"se\" menuWidth=\"min(30ch, 500px)\" root={variantRoot} location={location} />\n                </Box>\n              ) : null}\n            </Box>\n            {pageContext.tableOfContents.items ? (\n              <Position\n                display={['none', null, 'block']}\n                css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n                position=\"sticky\"\n                top={HEADER_HEIGHT + 24}\n                mt=\"6px\"\n                maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n              >\n                <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                  Table of contents\n                </Text>\n                <TableOfContents items={pageContext.tableOfContents.items} />\n              </Position>\n            ) : null}\n            <Box css={{gridArea: 'content'}}>\n              {status || source ? (\n                <Flex mb={3} alignItems=\"center\">\n                  {status ? <StatusLabel status={status} /> : null}\n                  <Box mx=\"auto\" />\n                  {source ? <SourceLink href={source} /> : null}\n                </Flex>\n              ) : null}\n              {pageContext.tableOfContents.items ? (\n                <Box display={['block', null, 'none']} mb={3}>\n                  <Details>\n                    {({open}) => (\n                      <>\n                        <Text as=\"summary\" fontWeight=\"bold\">\n                          {open ? (\n                            <StyledOcticon icon={ChevronDownIcon} mr={2} />\n                          ) : (\n                            <StyledOcticon icon={ChevronRightIcon} mr={2} />\n                          )}\n                          Table of contents\n                        </Text>\n                        <Box pt={1}>\n                          <TableOfContents\n                            items={pageContext.tableOfContents.items}\n                          />\n                        </Box>\n                      </>\n                    )}\n                  </Details>\n                </Box>\n              ) : null}\n              {children}\n              <PageFooter\n                editUrl={pageContext.editUrl}\n                contributors={pageContext.contributors.concat(\n                  additionalContributors.map((login) => ({login})),\n                )}\n              />\n            </Box>\n          </Grid>\n        </Flex>\n      </Flex>\n    </MDXProvider>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}