{"version":3,"sources":["webpack:///./content/cli/v7/commands/npm-install.md","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt-reply.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/table-of-contents.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/variant-select.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","Prompt","children","as","mt","mb","p","border","style","color","backgroundColor","overflow","fontFamily","fontSize","PromptReply","listStyle","lineHeight","TableOfContents","items","depth","key","m","map","item","url","pl","title","display","py","href","defaultProps","VariantSelect","path","NavHierarchy","getPath","location","pathname","vp","getVariantAndPage","root","variantPages","getVariantsForPage","page","selectedItem","length","forEach","match","push","Item","onClick","window","variant","overlay","Button","Menu","direction","width","menuWidth","styled","Dropdown","zIndex","alignItems","alignSelf","gridArea","Layout","pageContext","frontmatter","description","status","source","additionalContributors","variantRoot","getVariantRoot","Index","Note","Screenshot","flexDirection","minHeight","flex","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","borderWidth","borderBottomWidth","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","open","icon","ChevronDownIcon","mr","ChevronRightIcon","pt","editUrl","contributors","concat","login"],"mappings":"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","file":"component---content-cli-v-7-commands-npm-install-md-e69363a0c006e3a13e08.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/documentation/documentation/node_modules/gatsby-theme-doctornpm/src/components/layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`Synopsis`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install (with no args, in package dir)\nnpm install [<@scope>/]<name>\nnpm install [<@scope>/]<name>@<tag>\nnpm install [<@scope>/]<name>@<version>\nnpm install [<@scope>/]<name>@<version range>\nnpm install <alias>@npm:<name>\nnpm install <git-host>:<git-user>/<repo-name>\nnpm install <git repo url>\nnpm install <tarball file>\nnpm install <tarball url>\nnpm install <folder>\n\naliases: npm i, npm add\ncommon options: [-P|--save-prod|-D|--save-dev|-O|--save-optional|--save-peer] [-E|--save-exact] [-B|--save-bundle] [--no-save] [--dry-run]\n`}</code></pre>\n    <h3>{`Description`}</h3>\n    <p>{`This command installs a package and any packages that it depends on. If the\npackage has a package-lock, or an npm shrinkwrap file, or a yarn lock file,\nthe installation of dependencies will be driven by that, respecting the\nfollowing order of precedence:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`npm-shrinkwrap.json`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`package-lock.json`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`yarn.lock`}</inlineCode></li>\n    </ul>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v7/configuring-npm/package-lock-json\"\n      }}>{`package-lock.json`}</a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v7/commands/npm-shrinkwrap\"\n      }}><inlineCode parentName=\"a\">{`npm shrinkwrap`}</inlineCode></a>{`.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`package`}</inlineCode>{` is:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`a) a folder containing a program described by a\n`}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/configuring-npm/package-json\"\n        }}><inlineCode parentName=\"a\">{`package.json`}</inlineCode></a>{` file`}</li>\n      <li parentName=\"ul\">{`b) a gzipped tarball containing (a)`}</li>\n      <li parentName=\"ul\">{`c) a url that resolves to (b)`}</li>\n      <li parentName=\"ul\">{`d) a `}<inlineCode parentName=\"li\">{`<name>@<version>`}</inlineCode>{` that is published on the registry (see\n`}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/using-npm/registry\"\n        }}><inlineCode parentName=\"a\">{`registry`}</inlineCode></a>{`) with (c)`}</li>\n      <li parentName=\"ul\">{`e) a `}<inlineCode parentName=\"li\">{`<name>@<tag>`}</inlineCode>{` (see `}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-dist-tag\"\n        }}><inlineCode parentName=\"a\">{`npm dist-tag`}</inlineCode></a>{`) that\npoints to (d)`}</li>\n      <li parentName=\"ul\">{`f) a `}<inlineCode parentName=\"li\">{`<name>`}</inlineCode>{` that has a \"latest\" tag satisfying (e)`}</li>\n      <li parentName=\"ul\">{`g) a `}<inlineCode parentName=\"li\">{`<git remote url>`}</inlineCode>{` that resolves to (a)`}</li>\n    </ul>\n    <p>{`Even if you never publish your package, you can still get a lot of benefits\nof using npm if you just want to write a node program (a), and perhaps if\nyou also want to be able to easily install it elsewhere after packing it up\ninto a tarball (b).`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` (in a package directory, no arguments):`}</p>\n        <p parentName=\"li\">{`  Install the dependencies in the local `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` folder.`}</p>\n        <p parentName=\"li\">{`  In global mode (ie, with `}<inlineCode parentName=\"p\">{`-g`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--global`}</inlineCode>{` appended to the command),\nit installs the current package context (ie, the current working\ndirectory) as a global package.`}</p>\n        <p parentName=\"li\">{`  By default, `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` will install all modules listed as\ndependencies in `}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v7/configuring-npm/package-json\"\n          }}><inlineCode parentName=\"a\">{`package.json`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  With the `}<inlineCode parentName=\"p\">{`--production`}</inlineCode>{` flag (or when the `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{` environment\nvariable is set to `}<inlineCode parentName=\"p\">{`production`}</inlineCode>{`), npm will not install modules listed\nin `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{`. To install all modules listed in both\n`}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` when `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{` environment\nvariable is set to `}<inlineCode parentName=\"p\">{`production`}</inlineCode>{`, you can use `}<inlineCode parentName=\"p\">{`--production=false`}</inlineCode>{`.`}</p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`NOTE: The `}<inlineCode parentName=\"p\">{`--production`}</inlineCode>{` flag has no particular meaning when adding a\ndependency to a project.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <folder>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package in the directory as a symlink in the current\nproject.  Its dependencies will be installed before it's linked. If\n`}<inlineCode parentName=\"p\">{`<folder>`}</inlineCode>{` sits inside the root of your project, its dependencies may\nbe hoisted to the top-level `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` as they would for other\ntypes of dependencies.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <tarball file>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install a package that is sitting on the filesystem.  Note: if you just\nwant to link a dev directory into your npm root, you can do this more\neasily by using `}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v7/commands/npm-link\"\n          }}><inlineCode parentName=\"a\">{`npm link`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  Tarball requirements:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`The filename `}<em parentName=\"p\">{`must`}</em>{` use `}<inlineCode parentName=\"p\">{`.tar`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`.tar.gz`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`.tgz`}</inlineCode>{` as the\nextension.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`The package contents should reside in a subfolder inside the tarball\n(usually it is called `}<inlineCode parentName=\"p\">{`package/`}</inlineCode>{`). npm strips one directory layer\nwhen installing the package (an equivalent of `}<inlineCode parentName=\"p\">{`tar x\n--strip-components=1`}</inlineCode>{` is run).`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`The package must contain a `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file with `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`version`}</inlineCode>{` properties.`}</p>\n            <p parentName=\"li\">{`Example:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`npm install ./package.tgz\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <tarball url>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Fetch the tarball url, and then install it.  In order to distinguish between\nthis and other options, the argument must start with \"http://\" or \"https://\"`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install https://github.com/indexzero/forever/tarball/v0.5.6\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Do a `}<inlineCode parentName=\"p\">{`<name>@<tag>`}</inlineCode>{` install, where `}<inlineCode parentName=\"p\">{`<tag>`}</inlineCode>{` is the \"tag\" config. (See\n`}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v7/using-npm/config\"\n          }}><inlineCode parentName=\"a\">{`config`}</inlineCode></a>{`. The config's default value is `}<inlineCode parentName=\"p\">{`latest`}</inlineCode>{`.)`}</p>\n        <p parentName=\"li\">{`  In most cases, this will install the version of the modules tagged as\n`}<inlineCode parentName=\"p\">{`latest`}</inlineCode>{` on the npm registry.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax\n`}</code></pre>\n        <p parentName=\"li\">{`  `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` saves any specified packages into `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` by default.\nAdditionally, you can control where and how they get saved with some\nadditional flags:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`-P, --save-prod`}</inlineCode>{`: Package will appear in your `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{`. This\nis the default unless `}<inlineCode parentName=\"p\">{`-D`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`-O`}</inlineCode>{` are present.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`-D, --save-dev`}</inlineCode>{`: Package will appear in your `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{`.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`-O, --save-optional`}</inlineCode>{`: Package will appear in your\n`}<inlineCode parentName=\"p\">{`optionalDependencies`}</inlineCode>{`.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`--no-save`}</inlineCode>{`: Prevents saving to `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{`.`}</p>\n            <p parentName=\"li\">{`When using any of the above options to save dependencies to your\npackage.json, there are two additional, optional flags:`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`-E, --save-exact`}</inlineCode>{`: Saved dependencies will be configured with an\nexact version rather than using npm's default semver range operator.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`-B, --save-bundle`}</inlineCode>{`: Saved dependencies will also be added to your\n`}<inlineCode parentName=\"p\">{`bundleDependencies`}</inlineCode>{` list.`}</p>\n            <p parentName=\"li\">{`Further, if you have an `}<inlineCode parentName=\"p\">{`npm-shrinkwrap.json`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{`\nthen it will be updated as well.`}</p>\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`<scope>`}</inlineCode>{` is optional. The package will be downloaded from the registry\nassociated with the specified scope. If no registry is associated with\nthe given scope the default registry is assumed. See\n`}<a parentName=\"p\" {...{\n                \"href\": \"/cli/v7/using-npm/scope\"\n              }}><inlineCode parentName=\"a\">{`scope`}</inlineCode></a>{`.`}</p>\n            <p parentName=\"li\">{`Note: if you do not include the @-symbol on your scope name, npm will\ninterpret this as a GitHub repository instead, see below. Scopes names\nmust also be followed by a slash.`}</p>\n            <p parentName=\"li\">{`Examples:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`npm install sax\nnpm install githubname/reponame\nnpm install @myorg/privatepackage\nnpm install node-tap --save-dev\nnpm install dtrace-provider --save-optional\nnpm install readable-stream --save-exact\nnpm install ansi-regex --save-bundle\n`}</code></pre>\n            <p parentName=\"li\"><strong parentName=\"p\">{`Note`}</strong>{`: If there is a file or folder named `}<inlineCode parentName=\"p\">{`<name>`}</inlineCode>{` in the current\nworking directory, then it will try to install that, and only try to\nfetch the package by name if it is not valid.`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <alias>@npm:<name>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install a package under a custom alias. Allows multiple versions of\na same-name package side-by-side, more convenient import names for\npackages with otherwise long ones, and using git forks replacements\nor forked npm packages as replacements. Aliasing works only on your\nproject and does not rename packages in transitive dependencies.\nAliases should follow the naming conventions stated in\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://www.npmjs.com/package/validate-npm-package-name#naming-rules\"\n          }}><inlineCode parentName=\"a\">{`validate-npm-package-name`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  Examples:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install my-react@npm:react\nnpm install jquery2@npm:jquery@2\nnpm install jquery3@npm:jquery@3\nnpm install npa@npm:npm-package-arg\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>@<tag>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the version of the package that is referenced by the specified tag.\nIf the tag does not exist in the registry data for that package, then this\nwill fail.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax@latest\nnpm install @myorg/mypackage@latest\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>@<version>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the specified version of the package.  This will fail if the\nversion has not been published to the registry.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax@0.1.1\nnpm install @myorg/privatepackage@1.5.0\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>@<version range>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install a version of the package matching the specified version range.\nThis will follow the same rules for resolving dependencies described in\n`}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v7/configuring-npm/package-json\"\n          }}><inlineCode parentName=\"a\">{`package.json`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  Note that most version ranges must be put in quotes so that your shell\nwill treat it as a single argument.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax@\">=0.1.0 <0.2.0\"\nnpm install @myorg/privatepackage@\"16 - 17\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <git remote url>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Installs the package from the hosted git provider, cloning it with\n`}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.  For a full git remote url, only that URL will be attempted.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>[#<commit-ish> | #semver:<semver>]\n`}</code></pre>\n        <p parentName=\"li\">{`  `}<inlineCode parentName=\"p\">{`<protocol>`}</inlineCode>{` is one of `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+ssh`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+http`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+https`}</inlineCode>{`, or\n`}<inlineCode parentName=\"p\">{`git+file`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{`\ncan be any valid semver range or exact version, and npm will look for\nany tags or refs matching that range in the remote repository, much as\nit would for a registry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is specified, then the default branch of the\nrepository is used.`}</p>\n        <p parentName=\"li\">{`  If the repository makes use of submodules, those submodules will be\ncloned as well.`}</p>\n        <p parentName=\"li\">{`  If the package being installed contains a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script, its\n`}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will be installed, and the prepare\nscript will be run, before the package is packaged and installed.`}</p>\n        <p parentName=\"li\">{`  The following git environment variables are recognized by npm and will\nbe added to the environment when running git:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_ASKPASS`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_EXEC_PATH`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_PROXY_COMMAND`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSH`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSH_COMMAND`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSL_CAINFO`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSL_NO_VERIFY`}</inlineCode></p>\n            <p parentName=\"li\">{`See the git man page for details.`}</p>\n            <p parentName=\"li\">{`Examples:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`npm install git+ssh://git@github.com:npm/cli.git#v1.0.27\nnpm install git+ssh://git@github.com:npm/cli#pull/273\nnpm install git+ssh://git@github.com:npm/cli#semver:^5.0\nnpm install git+https://isaacs@github.com/npm/cli.git\nnpm install git://github.com/npm/cli.git#v1.0.27\nGIT_SSH_COMMAND='ssh -i ~/.ssh/custom_ident' npm install git+ssh://git@github.com:npm/cli.git\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <githubname>/<githubrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install github:<githubname>/<githubrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://github.com/githubname/githubrepo`}</inlineCode>{` by\nattempting to clone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{`\ncan be any valid semver range or exact version, and npm will look for\nany tags or refs matching that range in the remote repository, much as\nit would for a registry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is specified, then `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` is used.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{`\nwill be installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script before the\npackage is done installing.`}</p>\n        <p parentName=\"li\">{`  Examples:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install mygithubuser/myproject\nnpm install github:mygithubuser/myproject\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install gist:[<githubname>/]<gistID>[#<commit-ish>|#semver:<semver>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://gist.github.com/gistID`}</inlineCode>{` by attempting to\nclone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`. The GitHub username associated with the gist is\noptional and will not be saved in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will\nbe installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script before the package is\ndone installing.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install gist:101a11beef\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install bitbucket:<bitbucketname>/<bitbucketrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://bitbucket.org/bitbucketname/bitbucketrepo`}</inlineCode>{`\nby attempting to clone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{` can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is\nspecified, then `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` is used.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will\nbe installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script before the package is\ndone installing.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install bitbucket:mybitbucketuser/myproject\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install gitlab:<gitlabname>/<gitlabrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://gitlab.com/gitlabname/gitlabrepo`}</inlineCode>{`\nby attempting to clone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{` can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is\nspecified, then `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` is used.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will\nbe installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script before the package is\ndone installing.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install gitlab:mygitlabuser/myproject\nnpm install gitlab:myusr/myproj#semver:^5.0\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`You may combine multiple arguments and even multiple types of arguments.\nFor example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install sax@\">=0.1.0 <0.2.0\" bench supervisor\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--tag`}</inlineCode>{` argument will apply to all of the specified install targets. If\na tag with the given name exists, the tagged version is preferred over\nnewer versions.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--dry-run`}</inlineCode>{` argument will report in the usual way what the install\nwould have done without actually installing anything.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--package-lock-only`}</inlineCode>{` argument will only update the\n`}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{`, instead of checking `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` and downloading\ndependencies.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`-f`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--force`}</inlineCode>{` argument will force npm to fetch remote resources\neven if a local copy exists on disk.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install sax --force\n`}</code></pre>\n    <h3>{`Configuration`}</h3>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v7/using-npm/config\"\n      }}><inlineCode parentName=\"a\">{`config`}</inlineCode></a>{` help doc.  Many of the configuration\nparams have some effect on installation, since that's most of what npm\ndoes.`}</p>\n    <p>{`These are some of the most common options related to installation.`}</p>\n    <h4>{`Configuration Options Affecting Dependency Resolution And Tree Design`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`-g`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--global`}</inlineCode>{`: install the package globally rather than locally.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v7/configuring-npm/folders\"\n          }}>{`folders`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--global-style`}</inlineCode>{`: install the package into your local `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{`\nfolder with the same layout it uses with the global `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{`\nfolder. Only your direct dependencies will show in `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` and\neverything they depend on will be flattened in their `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{`\nfolders. This obviously will eliminate some deduping.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--legacy-bundling`}</inlineCode>{`: install the package in the style of versions of npm\nprior to 1.4, where dependencies are not automatically deduped up to the\nshallowest level in the tree possible.  This is extremely\ndisk-inefficient.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--legacy-peer-deps`}</inlineCode>{`: ignore all `}<inlineCode parentName=\"p\">{`peerDependencies`}</inlineCode>{` when installing, in\nthe style of npm version 4 through version 6.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--strict-peer-deps`}</inlineCode>{`: fail and abort the install process for any\nconflicting peerDependencies when encountered.  By default, npm will only\ncrash for peerDependencies conflicts caused by the direct dependencies of\nthe root project.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--no-package-lock`}</inlineCode>{` (alias: `}<inlineCode parentName=\"p\">{`--no-shrinkwrap`}</inlineCode>{`): do not read the\nlockfile (`}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`npm-shrinkwrap.json`}</inlineCode>{`) for the intended\npackage tree, and do not save the resulting package tree back to a\nlockfile.`}</p>\n      </li>\n    </ul>\n    <h4>{`Omitting Dependency Types`}</h4>\n    <p>{`You may omit certain types of dependencies by using the `}<inlineCode parentName=\"p\">{`--omit=<type>`}</inlineCode>{`\nconfig option.  This may be specified multiple types on the command line.\nTo enter `}<inlineCode parentName=\"p\">{`omit`}</inlineCode>{` options in `}<inlineCode parentName=\"p\">{`.npmrc`}</inlineCode>{` files, use the following syntax:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ini\"\n      }}>{`omit[] = dev\nomit[] = optional\n; etc...\n`}</code></pre>\n    <p>{`The dependency types that may be omitted or included are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`peer`}</inlineCode>{`: any `}<inlineCode parentName=\"li\">{`peerDependencies`}</inlineCode>{`, including those with a\n`}<inlineCode parentName=\"li\">{`peerDependenciesMeta`}</inlineCode>{` entry specifying `}<inlineCode parentName=\"li\">{`optional: true`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`optional`}</inlineCode>{`: dependencies listed in `}<inlineCode parentName=\"li\">{`optionalDependencies`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dev`}</inlineCode>{`: dependencies listed in `}<inlineCode parentName=\"li\">{`devDependencies`}</inlineCode></li>\n    </ul>\n    <p>{`To re-include dependency, use the `}<inlineCode parentName=\"p\">{`--include`}</inlineCode>{` option, which may also be\nspecified multiple times.`}</p>\n    <p>{`Legacy shorthands for `}<inlineCode parentName=\"p\">{`omit`}</inlineCode>{` settings are:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--no-optional`}</inlineCode>{`: prevent optionalDependencies from being installed.  Note\nthat their presence is still entered in the `}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{` file, and\nthe tree is designed such that they `}<em parentName=\"p\">{`can`}</em>{` be installed in the future.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--prod`}</inlineCode>{`: prevent devDependencies from being installed.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--only=prod`}</inlineCode>{`: omit `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--also=dev`}</inlineCode>{`: include `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode></p>\n      </li>\n    </ul>\n    <h4>{`Configuration Options Affecting Build Process`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--ignore-scripts`}</inlineCode>{`: do not execute any scripts defined in the\npackage.json. See `}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v7/using-npm/scripts\"\n          }}><inlineCode parentName=\"a\">{`scripts`}</inlineCode></a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--no-audit`}</inlineCode>{`: disable sending audit reports to the configured registries.\nSee `}<a parentName=\"p\" {...{\n            \"href\": \"npm-audit\"\n          }}><inlineCode parentName=\"a\">{`npm-audit`}</inlineCode></a>{` for details on what is sent.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--no-bin-links`}</inlineCode>{`: prevent npm from creating symlinks for any binaries the\npackage might contain.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--no-fund`}</inlineCode>{`: suppress the message displayed at the end of each install\nthat acknowledges the number of dependencies looking for funding.  See\n`}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v7/commands/npm-fund\"\n          }}><inlineCode parentName=\"a\">{`npm-fund`}</inlineCode></a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--dry-run`}</inlineCode>{`: Do not actually install anything into the `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{`\nfolder.  Just build the intended tree in memory, and report on it.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`--no-save`}</inlineCode>{`: Do not save installed dependencies to `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{`.`}</p>\n      </li>\n    </ul>\n    <h3>{`Algorithm`}</h3>\n    <p>{`Given a `}<inlineCode parentName=\"p\">{`package{dep}`}</inlineCode>{` structure: `}<inlineCode parentName=\"p\">{`A{B,C}, B{C}, C{D}`}</inlineCode>{`,\nthe npm install algorithm produces:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`A\n+-- B\n+-- C\n+-- D\n`}</code></pre>\n    <p>{`That is, the dependency from B to C is satisfied by the fact that A already\ncaused C to be installed at a higher level. D is still installed at the top\nlevel because nothing conflicts with it.`}</p>\n    <p>{`For `}<inlineCode parentName=\"p\">{`A{B,C}, B{C,D@1}, C{D@2}`}</inlineCode>{`, this algorithm produces:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`A\n+-- B\n+-- C\n   \\`-- D@2\n+-- D@1\n`}</code></pre>\n    <p>{`Because B's D@1 will be installed in the top-level, C now has to install\nD@2 privately for itself. This algorithm is deterministic, but different\ntrees may be produced if two dependencies are requested for installation in\na different order.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v7/configuring-npm/folders\"\n      }}>{`folders`}</a>{` for a more detailed description of\nthe specific folder structures that npm creates.`}</p>\n    <h3>{`See Also`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/configuring-npm/folders\"\n        }}>{`npm folders`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-update\"\n        }}>{`npm update`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-audit\"\n        }}>{`npm audit`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-fund\"\n        }}>{`npm fund`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-link\"\n        }}>{`npm link`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-rebuild\"\n        }}>{`npm rebuild`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/using-npm/scripts\"\n        }}>{`npm scripts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-build\"\n        }}>{`npm build`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-config\"\n        }}>{`npm config`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/configuring-npm/npmrc\"\n        }}>{`npmrc`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/using-npm/registry\"\n        }}>{`npm registry`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-dist-tag\"\n        }}>{`npm dist-tag`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-uninstall\"\n        }}>{`npm uninstall`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/commands/npm-shrinkwrap\"\n        }}>{`npm shrinkwrap`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/configuring-npm/package-json\"\n        }}>{`package.json`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v7/using-npm/workspaces\"\n        }}>{`workspaces`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\nimport {BorderBox, Text} from '@primer/components'\n\nfunction Prompt({children}) {\n  return (\n      <BorderBox\n       as=\"pre\"\n       mt={0}\n       mb={3}\n       p={3}\n       border={0}\n       style={{color: 'rgb(57, 58, 52)', backgroundColor: 'rgb(246, 248, 250)', overflow: 'auto'}}\n      >\n          <Text fontFamily=\"mono\" fontSize={1}>{children}</Text>\n      </BorderBox>\n  )\n}\n\nexport default Prompt\n","import React from 'react';\n\nfunction PromptReply({children}) {\n    return (<strong>{children}</strong>);\n}\n\nexport default PromptReply;\n","import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box key={items} as=\"ul\" m={0} p={0} css={{listStyle: 'none', lineHeight: '1.4em'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link key={item.title} display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","// VariantSelect: allows a variant to be set up within a document hierarchy\n//\n// For example, given two paths `/docs/v1.0/foo` and `/docs/v2.0/foo`, the\n// second folder acts as a variant.  If you use <VariantSelect root=\"/docs\">\n// then you'll get a selection for the different variants (v1.0, v2.0).\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Dropdown } from '@primer/components';\nimport NavHierarchy from '../nav-hierarchy'\n\nVariantSelect.Menu = styled(Dropdown.Menu)`\n  width: ${props => props.width ? props.width : '160px'};\n`\n\nfunction VariantSelect(props) {\n  const path = NavHierarchy.getPath(props.location.pathname);\n  const vp = NavHierarchy.getVariantAndPage(props.root, path);\n\n  if (!vp) {\n      return null;\n  }\n\n  const variantPages = NavHierarchy.getVariantsForPage(props.root, vp.page);\n  const items = [];\n  let selectedItem = variantPages[0];\n\n  if (variantPages.length === 0) {\n      return null;\n  }\n\n  variantPages.forEach((match) => {\n      if (match.page.url === path) {\n          selectedItem = match;\n      }\n\n      items.push(<Dropdown.Item onClick={() => { window.location.href = match.page.url; }} key={match.variant.title}>{match.variant.title}</Dropdown.Item>);\n  });\n\n  return (\n      <Dropdown overlay={props.overlay}>\n          <Dropdown.Button>{selectedItem.variant.title}</Dropdown.Button>\n          <VariantSelect.Menu direction={props.direction} width={props.menuWidth}>\n              {items}\n          </VariantSelect.Menu>\n      </Dropdown>\n  );\n}\n\nexport default VariantSelect\n","import {\n  BorderBox,\n  Box,\n  Details,\n  Flex,\n  Grid,\n  Heading,\n  Position,\n  StyledOcticon,\n  Text,\n} from '@primer/components'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/octicons-react'\nimport React from 'react'\nimport {MDXProvider} from \"@mdx-js/react\"\nimport Head from './head'\nimport Header, {HEADER_HEIGHT} from './header'\nimport Index from './index'\nimport Note from './note'\nimport PageFooter from './page-footer'\nimport Prompt from './prompt'\nimport PromptReply from './prompt-reply'\nimport Screenshot from './screenshot'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\nimport VariantSelect from './variant-select'\nimport NavHierarchy from '../nav-hierarchy'\n\nfunction Layout({children, pageContext, location}) {\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  const variantRoot = NavHierarchy.getVariantRoot(location.pathname);\n\n  return (\n    <MDXProvider components={{\n      Index,\n      Note,\n      Prompt,\n      PromptReply,\n      Screenshot\n    }}>\n\n      <Flex flexDirection=\"column\" minHeight=\"100vh\">\n        <Head title={title} description={description} />\n        <Header location={location} />\n        <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n          <Box display={['none', null, null, 'block']}>\n            <Sidebar location={location} />\n          </Box>\n          <Grid\n            id=\"skip-nav\"\n            maxWidth=\"100%\"\n            gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n            gridTemplateAreas={[\n              '\"heading\" \"content\"',\n              null,\n              '\"heading table-of-contents\" \"content table-of-contents\"',\n            ]}\n            gridColumnGap={[null, null, 6, 7]}\n            gridRowGap={3}\n            mx=\"auto\"\n            p={[5, 6, null, 7]}\n            css={{alignItems: 'start', alignSelf: 'start'}}\n          >\n            <Box css={{gridArea: 'heading'}}>\n              <BorderBox\n                borderWidth={0}\n                borderBottomWidth={1}\n                borderRadius={0}\n                pb={2}\n              >\n                <Box>\n                  <Box>\n                    <Heading as=\"h1\">{title}</Heading>\n                    {description}\n                  </Box>\n                </Box>\n              </BorderBox>\n              {variantRoot != null ? (\n                <Box css={{'margin-top': '25px'}}>\n                  <VariantSelect overlay={true} direction=\"se\" menuWidth=\"min(30ch, 500px)\" root={variantRoot} location={location} />\n                </Box>\n              ) : null}\n            </Box>\n            {pageContext.tableOfContents.items ? (\n              <Position\n                display={['none', null, 'block']}\n                css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n                position=\"sticky\"\n                top={HEADER_HEIGHT + 24}\n                mt=\"6px\"\n                maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n              >\n                <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                  Table of contents\n                </Text>\n                <TableOfContents items={pageContext.tableOfContents.items} />\n              </Position>\n            ) : null}\n            <Box css={{gridArea: 'content'}}>\n              {status || source ? (\n                <Flex mb={3} alignItems=\"center\">\n                  {status ? <StatusLabel status={status} /> : null}\n                  <Box mx=\"auto\" />\n                  {source ? <SourceLink href={source} /> : null}\n                </Flex>\n              ) : null}\n              {pageContext.tableOfContents.items ? (\n                <Box display={['block', null, 'none']} mb={3}>\n                  <Details>\n                    {({open}) => (\n                      <>\n                        <Text as=\"summary\" fontWeight=\"bold\">\n                          {open ? (\n                            <StyledOcticon icon={ChevronDownIcon} mr={2} />\n                          ) : (\n                            <StyledOcticon icon={ChevronRightIcon} mr={2} />\n                          )}\n                          Table of contents\n                        </Text>\n                        <Box pt={1}>\n                          <TableOfContents\n                            items={pageContext.tableOfContents.items}\n                          />\n                        </Box>\n                      </>\n                    )}\n                  </Details>\n                </Box>\n              ) : null}\n              {children}\n              <PageFooter\n                editUrl={pageContext.editUrl}\n                contributors={pageContext.contributors.concat(\n                  additionalContributors.map((login) => ({login})),\n                )}\n              />\n            </Box>\n          </Grid>\n        </Flex>\n      </Flex>\n    </MDXProvider>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}