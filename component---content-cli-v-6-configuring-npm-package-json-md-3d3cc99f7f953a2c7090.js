(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{O6H6:function(e,n,t){"use strict";var a=t("vOnD"),i=t("u9kb"),l=t("aOgs"),o=t("q1tI"),r=t.n(o),s=t("7ljp"),c=t("pD55"),b=t("8Aig"),p=t("ReZb"),m=t("GCVy"),u=t("+6vE");var d=function(e){var n=e.children;return r.a.createElement(i.d,{as:"pre",mt:0,mb:3,p:3,border:0,style:{color:"rgb(57, 58, 52)",backgroundColor:"rgb(246, 248, 250)",overflow:"auto"}},r.a.createElement(i.s,{fontFamily:"mono",fontSize:1},n))};var h=function(e){var n=e.children;return r.a.createElement("strong",null,n)},j=t("gnlW"),O=t("mwnC"),g=t("/Rw0"),f=t("dVM4"),y=Object(a.f)(i.e).withConfig({displayName:"table-of-contents___StyledBox",componentId:"eay2b8-0"})({listStyle:"none"});function N(e){var n=e.items,t=e.depth;return r.a.createElement(y,{key:n,as:"ul",m:0,p:0},n.map((function(e){return r.a.createElement(i.e,{as:"li",key:e.url,pl:t>0?3:0},r.a.createElement(i.n,{key:e.title,display:"inline-block",py:1,href:e.url,color:"gray.6"},e.title),e.items?r.a.createElement(N,{items:e.items,depth:t+1}):null)})))}N.defaultProps={depth:0};var w=N,v=t("MfeC");function C(e){var n=v.a.getPath(e.location.pathname),t=v.a.getVariantAndPage(e.root,n);if(!t)return null;var a=v.a.getVariantsForPage(e.root,t.page),l=[],o=a[0];return 0===a.length?null:(a.forEach((function(e){e.page.url===n&&(o=e),l.push(r.a.createElement(i.i.Item,{onClick:function(){window.location.href=e.page.url},key:e.variant.title},e.variant.title))})),r.a.createElement(i.i,{overlay:e.overlay},r.a.createElement(i.i.Button,null,o.variant.title),r.a.createElement(C.Menu,{direction:e.direction,width:e.menuWidth},l)))}C.Menu=Object(a.f)(i.i.Menu).withConfig({displayName:"variant-select__Menu",componentId:"sc-1rmksyl-0"})(["width:",";"],(function(e){return e.width?e.width:"160px"}));var k=C,x=Object(a.f)(i.k).withConfig({displayName:"layout___StyledFlex",componentId:"sc-1xkoyzi-0"})({zIndex:0}),I=Object(a.f)(i.l).withConfig({displayName:"layout___StyledGrid",componentId:"sc-1xkoyzi-1"})({alignItems:"start",alignSelf:"start"}),E=Object(a.f)(i.e).withConfig({displayName:"layout___StyledBox",componentId:"sc-1xkoyzi-2"})({gridArea:"heading"}),S=Object(a.f)(i.e).withConfig({displayName:"layout___StyledBox2",componentId:"sc-1xkoyzi-3"})({"margin-top":"25px"}),T=Object(a.f)(i.o).withConfig({displayName:"layout___StyledPosition",componentId:"sc-1xkoyzi-4"})({gridArea:"table-of-contents",overflow:"auto"}),D=Object(a.f)(i.e).withConfig({displayName:"layout___StyledBox3",componentId:"sc-1xkoyzi-5"})({gridArea:"content"});n.a=function(e){var n=e.children,t=e.pageContext,a=e.location,o=t.frontmatter,y=o.title,N=o.description,C=o.status,A=o.source,L=o.additionalContributors,R=void 0===L?[]:L,_=v.a.getVariantRoot(a.pathname);return r.a.createElement(s.a,{components:{Index:p.a,Note:m.a,Prompt:d,PromptReply:h,Screenshot:j.a}},r.a.createElement(i.k,{flexDirection:"column",minHeight:"100vh"},r.a.createElement(c.a,{title:y,description:N}),r.a.createElement(b.b,{location:a}),r.a.createElement(x,{flex:"1 1 auto",flexDirection:"row"},r.a.createElement(i.e,{display:["none",null,null,"block"]},r.a.createElement(O.a,{location:a})),r.a.createElement(I,{id:"skip-nav",maxWidth:"100%",gridTemplateColumns:["100%",null,"minmax(0, 65ch) 220px"],gridTemplateAreas:['"heading" "content"',null,'"heading table-of-contents" "content table-of-contents"'],gridColumnGap:[null,null,6,7],gridRowGap:3,mx:"auto",p:[5,6,null,7]},r.a.createElement(E,null,r.a.createElement(i.d,{borderWidth:0,borderBottomWidth:1,borderRadius:0,pb:2},r.a.createElement(i.e,null,r.a.createElement(i.e,null,r.a.createElement(i.m,{as:"h1"},y),N))),null!=_?r.a.createElement(S,null,r.a.createElement(k,{overlay:!0,direction:"se",menuWidth:"min(30ch, 500px)",root:_,location:a})):null),t.tableOfContents.items?r.a.createElement(T,{display:["none",null,"block"],position:"sticky",top:b.a+24,mt:"6px",maxHeight:"calc(100vh - "+b.a+"px - 24px)"},r.a.createElement(i.s,{display:"inline-block",fontWeight:"bold",mb:1},"Table of contents"),r.a.createElement(w,{items:t.tableOfContents.items})):null,r.a.createElement(D,null,C||A?r.a.createElement(i.k,{mb:3,alignItems:"center"},C?r.a.createElement(f.a,{status:C}):null,r.a.createElement(i.e,{mx:"auto"}),A?r.a.createElement(g.a,{href:A}):null):null,t.tableOfContents.items?r.a.createElement(i.e,{display:["block",null,"none"],mb:3},r.a.createElement(i.h,null,(function(e){var n=e.open;return r.a.createElement(r.a.Fragment,null,r.a.createElement(i.s,{as:"summary",fontWeight:"bold"},n?r.a.createElement(i.r,{icon:l.b,mr:2}):r.a.createElement(i.r,{icon:l.c,mr:2}),"Table of contents"),r.a.createElement(i.e,{pt:1},r.a.createElement(w,{items:t.tableOfContents.items})))}))):null,n,r.a.createElement(u.a,{editUrl:t.editUrl,contributors:t.contributors.concat(R.map((function(e){return{login:e}})))}))))))}},T92P:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return o})),t.d(n,"default",(function(){return c}));var a=t("zLVn"),i=(t("q1tI"),t("7ljp")),l=t("O6H6"),o={},r={_frontmatter:o},s=l.a;function c(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)(s,Object.assign({},r,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h3",null,"Description"),Object(i.b)("p",null,"This document is all you need to know about what's required in your package.json\nfile.  It must be actual JSON, not just a JavaScript object literal."),Object(i.b)("p",null,"A lot of the behavior described in this document is affected by the config\nsettings described in ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v6/using-npm/config"}),Object(i.b)("inlineCode",{parentName:"a"},"config")),"."),Object(i.b)("h3",null,"name"),Object(i.b)("p",null,"If you plan to publish your package, the ",Object(i.b)("em",{parentName:"p"},"most")," important things in your\npackage.json are the name and version fields as they will be required. The name\nand version together form an identifier that is assumed to be completely unique.\nChanges to the package should come along with changes to the version. If you don't\nplan to publish your package, the name and version fields are optional."),Object(i.b)("p",null,"The name is what your thing is called."),Object(i.b)("p",null,"Some rules:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The name must be less than or equal to 214 characters. This includes the scope for\nscoped packages."),Object(i.b)("li",{parentName:"ul"},"The names of scoped packages can begin with a dot or an underscore. This is not permitted without a scope."),Object(i.b)("li",{parentName:"ul"},"New packages must not have uppercase letters in the name."),Object(i.b)("li",{parentName:"ul"},"The name ends up being part of a URL, an argument on the command line, and a\nfolder name. Therefore, the name can't contain any non-URL-safe characters.")),Object(i.b)("p",null,"Some tips:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Don't use the same name as a core Node module."),Object(i.b)("li",{parentName:"ul"},'Don\'t put "js" or "node" in the name.  It\'s assumed that it\'s js, since you\'re\nwriting a package.json file, and you can specify the engine using the "engines"\nfield.  (See below.)'),Object(i.b)("li",{parentName:"ul"},"The name will probably be passed as an argument to require(), so it should\nbe something short, but also reasonably descriptive."),Object(i.b)("li",{parentName:"ul"},"You may want to check the npm registry to see if there's something by that name\nalready, before you get too attached to it. ",Object(i.b)("a",Object.assign({parentName:"li"},{href:"https://www.npmjs.com/"}),"https://www.npmjs.com/"))),Object(i.b)("p",null,"A name can be optionally prefixed by a scope, e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"@myorg/mypackage"),". See\n",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v6/using-npm/scope"}),Object(i.b)("inlineCode",{parentName:"a"},"scope"))," for more detail."),Object(i.b)("h3",null,"version"),Object(i.b)("p",null,"If you plan to publish your package, the ",Object(i.b)("em",{parentName:"p"},"most")," important things in your\npackage.json are the name and version fields as they will be required. The name\nand version together form an identifier that is assumed to be completely unique.\nChanges to the package should come along with changes to the version. If you don't\nplan to publish your package, the name and version fields are optional."),Object(i.b)("p",null,"Version must be parseable by\n",Object(i.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/isaacs/node-semver"}),"node-semver"),", which is bundled\nwith npm as a dependency.  (",Object(i.b)("inlineCode",{parentName:"p"},"npm install semver")," to use it yourself.)"),Object(i.b)("p",null,"More on version numbers and ranges at ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v6/using-npm/semver"}),"semver"),"."),Object(i.b)("h3",null,"description"),Object(i.b)("p",null,"Put a description in it.  It's a string.  This helps people discover your\npackage, as it's listed in ",Object(i.b)("inlineCode",{parentName:"p"},"npm search"),"."),Object(i.b)("h3",null,"keywords"),Object(i.b)("p",null,"Put keywords in it.  It's an array of strings.  This helps people\ndiscover your package as it's listed in ",Object(i.b)("inlineCode",{parentName:"p"},"npm search"),"."),Object(i.b)("h3",null,"homepage"),Object(i.b)("p",null,"The url to the project homepage."),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'"homepage": "https://github.com/owner/project#readme"\n')),Object(i.b)("h3",null,"bugs"),Object(i.b)("p",null,"The url to your project's issue tracker and / or the email address to which\nissues should be reported. These are helpful for people who encounter issues\nwith your package."),Object(i.b)("p",null,"It should look like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "url" : "https://github.com/owner/project/issues"\n, "email" : "project@hostname.com"\n}\n')),Object(i.b)("p",null,'You can specify either one or both values. If you want to provide only a url,\nyou can specify the value for "bugs" as a simple string instead of an object.'),Object(i.b)("p",null,"If a url is provided, it will be used by the ",Object(i.b)("inlineCode",{parentName:"p"},"npm bugs")," command."),Object(i.b)("h3",null,"license"),Object(i.b)("p",null,"You should specify a license for your package so that people know how they are\npermitted to use it, and any restrictions you're placing on it."),Object(i.b)("p",null,"If you're using a common license such as BSD-2-Clause or MIT, add a\ncurrent SPDX license identifier for the license you're using, like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "license" : "BSD-3-Clause" }\n')),Object(i.b)("p",null,"You can check ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"https://spdx.org/licenses/"}),"the full list of SPDX license IDs"),".\nIdeally you should pick one that is\n",Object(i.b)("a",Object.assign({parentName:"p"},{href:"https://opensource.org/licenses/alphabetical"}),"OSI")," approved."),Object(i.b)("p",null,"If your package is licensed under multiple common licenses, use an ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"https://www.npmjs.com/package/spdx"}),"SPDX license\nexpression syntax version 2.0 string"),", like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "license" : "(ISC OR GPL-3.0)" }\n')),Object(i.b)("p",null,"If you are using a license that hasn't been assigned an SPDX identifier, or if\nyou are using a custom license, use a string value like this one:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "license" : "SEE LICENSE IN <filename>" }\n')),Object(i.b)("p",null,"Then include a file named ",Object(i.b)("inlineCode",{parentName:"p"},"<filename>")," at the top level of the package."),Object(i.b)("p",null,'Some old packages used license objects or a "licenses" property containing an\narray of license objects:'),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'// Not valid metadata\n{ "license" :\n  { "type" : "ISC"\n  , "url" : "https://opensource.org/licenses/ISC"\n  }\n}\n\n// Not valid metadata\n{ "licenses" :\n  [\n    { "type": "MIT"\n    , "url": "https://www.opensource.org/licenses/mit-license.php"\n    }\n  , { "type": "Apache-2.0"\n    , "url": "https://opensource.org/licenses/apache2.0.php"\n    }\n  ]\n}\n')),Object(i.b)("p",null,"Those styles are now deprecated. Instead, use SPDX expressions, like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "license": "ISC" }\n\n{ "license": "(MIT OR Apache-2.0)" }\n')),Object(i.b)("p",null,"Finally, if you do not wish to grant others the right to use a private or\nunpublished package under any terms:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "license": "UNLICENSED" }\n')),Object(i.b)("p",null,"Consider also setting ",Object(i.b)("inlineCode",{parentName:"p"},'"private": true')," to prevent accidental publication."),Object(i.b)("h3",null,"people fields: author, contributors"),Object(i.b)("p",null,'The "author" is one person.  "contributors" is an array of people.  A "person"\nis an object with a "name" field and optionally "url" and "email", like this:'),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "name" : "Barney Rubble"\n, "email" : "b@rubble.com"\n, "url" : "http://barnyrubble.tumblr.com/"\n}\n')),Object(i.b)("p",null,"Or you can shorten that all into a single string, and npm will parse it for you:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'"Barney Rubble <b@rubble.com> (http://barnyrubble.tumblr.com/)"\n')),Object(i.b)("p",null,"Both email and url are optional either way."),Object(i.b)("p",null,'npm also sets a top-level "maintainers" field with your npm user info.'),Object(i.b)("h3",null,"funding"),Object(i.b)("p",null,"You can specify an object containing an URL that provides up-to-date\ninformation about ways to help fund development of your package, or\na string URL, or an array of these:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),'"funding": {\n  "type" : "individual",\n  "url" : "http://example.com/donate"\n}\n\n"funding": {\n  "type" : "patreon",\n  "url" : "https://www.patreon.com/my-account"\n}\n\n"funding": "http://example.com/donate"\n\n"funding": [\n  {\n    "type" : "individual",\n    "url" : "http://example.com/donate"\n  },\n  "http://example.com/donateAlso",\n  {\n    "type" : "patreon",\n    "url" : "https://www.patreon.com/my-account"\n  }\n]\n')),Object(i.b)("p",null,"Users can use the ",Object(i.b)("inlineCode",{parentName:"p"},"npm fund")," subcommand to list the ",Object(i.b)("inlineCode",{parentName:"p"},"funding")," URLs of all\ndependencies of their project, direct and indirect. A shortcut to visit each\nfunding url is also available when providing the project name such as:\n",Object(i.b)("inlineCode",{parentName:"p"},"npm fund <projectname>")," (when there are multiple URLs, the first one will be\nvisited)"),Object(i.b)("h3",null,"files"),Object(i.b)("p",null,"The optional ",Object(i.b)("inlineCode",{parentName:"p"},"files")," field is an array of file patterns that describes\nthe entries to be included when your package is installed as a\ndependency. File patterns follow a similar syntax to ",Object(i.b)("inlineCode",{parentName:"p"},".gitignore"),", but\nreversed: including a file, directory, or glob pattern (",Object(i.b)("inlineCode",{parentName:"p"},"*"),", ",Object(i.b)("inlineCode",{parentName:"p"},"**/*"),", and such)\nwill make it so that file is included in the tarball when it's packed. Omitting\nthe field will make it default to ",Object(i.b)("inlineCode",{parentName:"p"},'["*"]'),", which means it will include all files."),Object(i.b)("p",null,"Some special files and directories are also included or excluded regardless of\nwhether they exist in the ",Object(i.b)("inlineCode",{parentName:"p"},"files")," array (see below)."),Object(i.b)("p",null,"You can also provide a ",Object(i.b)("inlineCode",{parentName:"p"},".npmignore"),' file in the root of your package or\nin subdirectories, which will keep files from being included. At the\nroot of your package it will not override the "files" field, but in\nsubdirectories it will. The ',Object(i.b)("inlineCode",{parentName:"p"},".npmignore")," file works just like a\n",Object(i.b)("inlineCode",{parentName:"p"},".gitignore"),". If there is a ",Object(i.b)("inlineCode",{parentName:"p"},".gitignore")," file, and ",Object(i.b)("inlineCode",{parentName:"p"},".npmignore")," is\nmissing, ",Object(i.b)("inlineCode",{parentName:"p"},".gitignore"),"'s contents will be used instead."),Object(i.b)("p",null,'Files included with the "package.json#files" field ',Object(i.b)("em",{parentName:"p"},"cannot")," be excluded\nthrough ",Object(i.b)("inlineCode",{parentName:"p"},".npmignore")," or ",Object(i.b)("inlineCode",{parentName:"p"},".gitignore"),"."),Object(i.b)("p",null,"Certain files are always included, regardless of settings:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"package.json")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"README")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"CHANGES")," / ",Object(i.b)("inlineCode",{parentName:"li"},"CHANGELOG")," / ",Object(i.b)("inlineCode",{parentName:"li"},"HISTORY")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"LICENSE")," / ",Object(i.b)("inlineCode",{parentName:"li"},"LICENCE")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"NOTICE")),Object(i.b)("li",{parentName:"ul"},'The file in the "main" field')),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"README"),", ",Object(i.b)("inlineCode",{parentName:"p"},"CHANGES"),", ",Object(i.b)("inlineCode",{parentName:"p"},"LICENSE")," & ",Object(i.b)("inlineCode",{parentName:"p"},"NOTICE")," can have any case and extension."),Object(i.b)("p",null,"Conversely, some files are always ignored:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".git")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"CVS")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".svn")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".hg")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".lock-wscript")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".wafpickle-N")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".DS_Store")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"npm-debug.log")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".npmrc")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"node_modules")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"config.gypi")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"package-lock.json")," (use shrinkwrap instead)"),Object(i.b)("li",{parentName:"ul"},"All files containing a ",Object(i.b)("inlineCode",{parentName:"li"},"*")," character (incompatible with Windows) ")),Object(i.b)("h3",null,"main"),Object(i.b)("p",null,"The main field is a module ID that is the primary entry point to your program.\nThat is, if your package is named ",Object(i.b)("inlineCode",{parentName:"p"},"foo"),", and a user installs it, and then does\n",Object(i.b)("inlineCode",{parentName:"p"},'require("foo")'),", then your main module's exports object will be returned."),Object(i.b)("p",null,"This should be a module ID relative to the root of your package folder."),Object(i.b)("p",null,"For most modules, it makes the most sense to have a main script and often not\nmuch else."),Object(i.b)("h3",null,"browser"),Object(i.b)("p",null,"If your module is meant to be used client-side the browser field should be\nused instead of the main field. This is helpful to hint users that it might\nrely on primitives that aren't available in Node.js modules. (e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"window"),")"),Object(i.b)("h3",null,"bin"),Object(i.b)("p",null,'A lot of packages have one or more executable files that they\'d like to\ninstall into the PATH. npm makes this pretty easy (in fact, it uses this\nfeature to install the "npm" executable.)'),Object(i.b)("p",null,"To use this, supply a ",Object(i.b)("inlineCode",{parentName:"p"},"bin")," field in your package.json which is a map of\ncommand name to local file name. On install, npm will symlink that file into\n",Object(i.b)("inlineCode",{parentName:"p"},"prefix/bin")," for global installs, or ",Object(i.b)("inlineCode",{parentName:"p"},"./node_modules/.bin/")," for local\ninstalls."),Object(i.b)("p",null,"For example, myapp could have this:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "bin" : { "myapp" : "./cli.js" } }\n')),Object(i.b)("p",null,"So, when you install myapp, it'll create a symlink from the ",Object(i.b)("inlineCode",{parentName:"p"},"cli.js")," script to\n",Object(i.b)("inlineCode",{parentName:"p"},"/usr/local/bin/myapp"),"."),Object(i.b)("p",null,"If you have a single executable, and its name should be the name\nof the package, then you can just supply it as a string.  For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "name": "my-program"\n, "version": "1.2.5"\n, "bin": "./path/to/program" }\n')),Object(i.b)("p",null,"would be the same as this:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "name": "my-program"\n, "version": "1.2.5"\n, "bin" : { "my-program" : "./path/to/program" } }\n')),Object(i.b)("p",null,"Please make sure that your file(s) referenced in ",Object(i.b)("inlineCode",{parentName:"p"},"bin")," starts with\n",Object(i.b)("inlineCode",{parentName:"p"},"#!/usr/bin/env node"),", otherwise the scripts are started without the node\nexecutable!"),Object(i.b)("h3",null,"man"),Object(i.b)("p",null,"Specify either a single file or an array of filenames to put in place for the\n",Object(i.b)("inlineCode",{parentName:"p"},"man")," program to find."),Object(i.b)("p",null,"If only a single file is provided, then it's installed such that it is the\nresult from ",Object(i.b)("inlineCode",{parentName:"p"},"man <pkgname>"),", regardless of its actual filename.  For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "name" : "foo"\n, "version" : "1.2.3"\n, "description" : "A packaged foo fooer for fooing foos"\n, "main" : "foo.js"\n, "man" : "./man/doc.1"\n}\n')),Object(i.b)("p",null,"would link the ",Object(i.b)("inlineCode",{parentName:"p"},"./man/doc.1")," file in such that it is the target for ",Object(i.b)("inlineCode",{parentName:"p"},"man foo")),Object(i.b)("p",null,"If the filename doesn't start with the package name, then it's prefixed.\nSo, this:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "name" : "foo"\n, "version" : "1.2.3"\n, "description" : "A packaged foo fooer for fooing foos"\n, "main" : "foo.js"\n, "man" : [ "./man/foo.1", "./man/bar.1" ]\n}\n')),Object(i.b)("p",null,"will create files to do ",Object(i.b)("inlineCode",{parentName:"p"},"man foo")," and ",Object(i.b)("inlineCode",{parentName:"p"},"man foo-bar"),"."),Object(i.b)("p",null,"Man files must end with a number, and optionally a ",Object(i.b)("inlineCode",{parentName:"p"},".gz")," suffix if they are\ncompressed.  The number dictates which man section the file is installed into."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "name" : "foo"\n, "version" : "1.2.3"\n, "description" : "A packaged foo fooer for fooing foos"\n, "main" : "foo.js"\n, "man" : [ "./man/foo.1", "./man/foo.2" ]\n}\n')),Object(i.b)("p",null,"will create entries for ",Object(i.b)("inlineCode",{parentName:"p"},"man foo")," and ",Object(i.b)("inlineCode",{parentName:"p"},"man 2 foo")),Object(i.b)("h3",null,"directories"),Object(i.b)("p",null,"The CommonJS ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"http://wiki.commonjs.org/wiki/Packages/1.0"}),"Packages")," spec details a\nfew ways that you can indicate the structure of your package using a ",Object(i.b)("inlineCode",{parentName:"p"},"directories"),"\nobject. If you look at ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"https://registry.npmjs.org/npm/latest"}),"npm's package.json"),",\nyou'll see that it has directories for doc, lib, and man."),Object(i.b)("p",null,"In the future, this information may be used in other creative ways."),Object(i.b)("h4",null,"directories.lib"),Object(i.b)("p",null,"Tell people where the bulk of your library is.  Nothing special is done\nwith the lib folder in any way, but it's useful meta info."),Object(i.b)("h4",null,"directories.bin"),Object(i.b)("p",null,"If you specify a ",Object(i.b)("inlineCode",{parentName:"p"},"bin")," directory in ",Object(i.b)("inlineCode",{parentName:"p"},"directories.bin"),", all the files in\nthat folder will be added."),Object(i.b)("p",null,"Because of the way the ",Object(i.b)("inlineCode",{parentName:"p"},"bin")," directive works, specifying both a\n",Object(i.b)("inlineCode",{parentName:"p"},"bin")," path and setting ",Object(i.b)("inlineCode",{parentName:"p"},"directories.bin")," is an error. If you want to\nspecify individual files, use ",Object(i.b)("inlineCode",{parentName:"p"},"bin"),", and for all the files in an\nexisting ",Object(i.b)("inlineCode",{parentName:"p"},"bin")," directory, use ",Object(i.b)("inlineCode",{parentName:"p"},"directories.bin"),"."),Object(i.b)("h4",null,"directories.man"),Object(i.b)("p",null,'A folder that is full of man pages.  Sugar to generate a "man" array by\nwalking the folder.'),Object(i.b)("h4",null,"directories.doc"),Object(i.b)("p",null,"Put markdown files in here.  Eventually, these will be displayed nicely,\nmaybe, someday."),Object(i.b)("h4",null,"directories.example"),Object(i.b)("p",null,"Put example scripts in here.  Someday, it might be exposed in some clever way."),Object(i.b)("h4",null,"directories.test"),Object(i.b)("p",null,"Put your tests in here. It is currently not exposed, but it might be in the\nfuture."),Object(i.b)("h3",null,"repository"),Object(i.b)("p",null,"Specify the place where your code lives. This is helpful for people who\nwant to contribute.  If the git repo is on GitHub, then the ",Object(i.b)("inlineCode",{parentName:"p"},"npm docs"),"\ncommand will be able to find you."),Object(i.b)("p",null,"Do it like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'"repository": {\n  "type" : "git",\n  "url" : "https://github.com/npm/cli.git"\n}\n\n"repository": {\n  "type" : "svn",\n  "url" : "https://v8.googlecode.com/svn/trunk/"\n}\n')),Object(i.b)("p",null,"The URL should be a publicly available (perhaps read-only) url that can be handed\ndirectly to a VCS program without any modification.  It should not be a url to an\nhtml project page that you put in your browser.  It's for computers."),Object(i.b)("p",null,"For GitHub, GitHub gist, Bitbucket, or GitLab repositories you can use the same\nshortcut syntax you use for ",Object(i.b)("inlineCode",{parentName:"p"},"npm install"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'"repository": "npm/npm"\n\n"repository": "github:user/repo"\n\n"repository": "gist:11081aaa281"\n\n"repository": "bitbucket:user/repo"\n\n"repository": "gitlab:user/repo"\n')),Object(i.b)("p",null,"If the ",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," for your package is not in the root directory (for example\nif it is part of a monorepo), you can specify the directory in which it lives:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'"repository": {\n  "type" : "git",\n  "url" : "https://github.com/facebook/react.git",\n  "directory": "packages/react-dom"\n}\n')),Object(i.b)("h3",null,"scripts"),Object(i.b)("p",null,'The "scripts" property is a dictionary containing script commands that are run\nat various times in the lifecycle of your package.  The key is the lifecycle\nevent, and the value is the command to run at that point.'),Object(i.b)("p",null,"See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v6/using-npm/scripts"}),Object(i.b)("inlineCode",{parentName:"a"},"scripts"))," to find out more about writing package scripts."),Object(i.b)("h3",null,"config"),Object(i.b)("p",null,'A "config" object can be used to set configuration parameters used in package\nscripts that persist across upgrades.  For instance, if a package had the\nfollowing:'),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "name" : "foo"\n, "config" : { "port" : "8080" } }\n')),Object(i.b)("p",null,'and then had a "start" command that then referenced the\n',Object(i.b)("inlineCode",{parentName:"p"},"npm_package_config_port")," environment variable, then the user could\noverride that by doing ",Object(i.b)("inlineCode",{parentName:"p"},"npm config set foo:port 8001"),"."),Object(i.b)("p",null,"See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v6/using-npm/config"}),Object(i.b)("inlineCode",{parentName:"a"},"config"))," and ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v6/using-npm/scripts"}),Object(i.b)("inlineCode",{parentName:"a"},"scripts"))," for more on package\nconfigs."),Object(i.b)("h3",null,"dependencies"),Object(i.b)("p",null,"Dependencies are specified in a simple object that maps a package name to a\nversion range. The version range is a string which has one or more\nspace-separated descriptors.  Dependencies can also be identified with a\ntarball or git URL."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Please do not put test harnesses or transpilers in your\n",Object(i.b)("inlineCode",{parentName:"strong"},"dependencies")," object."),"  See ",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies"),", below."),Object(i.b)("p",null,"See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v6/using-npm/semver"}),"semver")," for more details about specifying version ranges."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"version")," Must match ",Object(i.b)("inlineCode",{parentName:"li"},"version")," exactly"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},">version")," Must be greater than ",Object(i.b)("inlineCode",{parentName:"li"},"version")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},">=version")," etc"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"<version")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"<=version")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"~version"),' "Approximately equivalent to version"  See ',Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/using-npm/semver"}),"semver")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"^version"),' "Compatible with version"  See ',Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/using-npm/semver"}),"semver")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"1.2.x")," 1.2.0, 1.2.1, etc., but not 1.3.0"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"http://...")," See 'URLs as Dependencies' below"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"*")," Matches any version"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'""')," (just an empty string) Same as ",Object(i.b)("inlineCode",{parentName:"li"},"*")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"version1 - version2")," Same as ",Object(i.b)("inlineCode",{parentName:"li"},">=version1 <=version2"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"range1 || range2")," Passes if either range1 or range2 are satisfied."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"git...")," See 'Git URLs as Dependencies' below"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"user/repo")," See 'GitHub URLs' below"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"tag")," A specific version tagged and published as ",Object(i.b)("inlineCode",{parentName:"li"},"tag"),"  See ",Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/commands/npm-dist-tag"}),Object(i.b)("inlineCode",{parentName:"a"},"npm dist-tag"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"path/path/path")," See ",Object(i.b)("a",Object.assign({parentName:"li"},{href:"#local-paths"}),"Local Paths")," below")),Object(i.b)("p",null,"For example, these are all valid:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "dependencies" :\n  { "foo" : "1.0.0 - 2.9999.9999"\n  , "bar" : ">=1.0.2 <2.1.2"\n  , "baz" : ">1.0.2 <=2.3.4"\n  , "boo" : "2.0.1"\n  , "qux" : "<1.0.0 || >=2.3.1 <2.4.5 || >=2.5.2 <3.0.0"\n  , "asd" : "http://asdf.com/asdf.tar.gz"\n  , "til" : "~1.2"\n  , "elf" : "~1.2.3"\n  , "two" : "2.x"\n  , "thr" : "3.3.x"\n  , "lat" : "latest"\n  , "dyl" : "file:../dyl"\n  }\n}\n')),Object(i.b)("h4",null,"URLs as Dependencies"),Object(i.b)("p",null,"You may specify a tarball URL in place of a version range."),Object(i.b)("p",null,"This tarball will be downloaded and installed locally to your package at\ninstall time."),Object(i.b)("h4",null,"Git URLs as Dependencies"),Object(i.b)("p",null,"Git urls are of the form:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>[#<commit-ish> | #semver:<semver>]\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"<protocol>")," is one of ",Object(i.b)("inlineCode",{parentName:"p"},"git"),", ",Object(i.b)("inlineCode",{parentName:"p"},"git+ssh"),", ",Object(i.b)("inlineCode",{parentName:"p"},"git+http"),", ",Object(i.b)("inlineCode",{parentName:"p"},"git+https"),", or\n",Object(i.b)("inlineCode",{parentName:"p"},"git+file"),"."),Object(i.b)("p",null,"If ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>"),", ",Object(i.b)("inlineCode",{parentName:"p"},"<semver>")," can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither ",Object(i.b)("inlineCode",{parentName:"p"},"#<commit-ish>")," or ",Object(i.b)("inlineCode",{parentName:"p"},"#semver:<semver>")," is\nspecified, then ",Object(i.b)("inlineCode",{parentName:"p"},"master")," is used."),Object(i.b)("p",null,"Examples:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"git+ssh://git@github.com:npm/cli.git#v1.0.27\ngit+ssh://git@github.com:npm/cli#semver:^5.0\ngit+https://isaacs@github.com/npm/cli.git\ngit://github.com/npm/cli.git#v1.0.27\n")),Object(i.b)("h4",null,"GitHub URLs"),Object(i.b)("p",null,'As of version 1.1.65, you can refer to GitHub urls as just "foo":\n"user/foo-project".  Just as with git URLs, a ',Object(i.b)("inlineCode",{parentName:"p"},"commit-ish")," suffix can be\nincluded.  For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "name": "foo",\n  "version": "0.0.0",\n  "dependencies": {\n    "express": "expressjs/express",\n    "mocha": "mochajs/mocha#4727d357ea",\n    "module": "user/repo#feature\\/branch"\n  }\n}\n')),Object(i.b)("h4",null,"Local Paths"),Object(i.b)("p",null,"As of version 2.0.0 you can provide a path to a local directory that contains a\npackage. Local paths can be saved using ",Object(i.b)("inlineCode",{parentName:"p"},"npm install -S")," or\n",Object(i.b)("inlineCode",{parentName:"p"},"npm install --save"),", using any of these forms:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"../foo/bar\n~/foo/bar\n./foo/bar\n/foo/bar\n")),Object(i.b)("p",null,"in which case they will be normalized to a relative path and added to your\n",Object(i.b)("inlineCode",{parentName:"p"},"package.json"),". For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "name": "baz",\n  "dependencies": {\n    "bar": "file:../foo/bar"\n  }\n}\n')),Object(i.b)("p",null,"This feature is helpful for local offline development and creating\ntests that require npm installing where you don't want to hit an\nexternal server, but should not be used when publishing packages\nto the public registry."),Object(i.b)("h3",null,"devDependencies"),Object(i.b)("p",null,"If someone is planning on downloading and using your module in their\nprogram, then they probably don't want or need to download and build\nthe external test or documentation framework that you use."),Object(i.b)("p",null,"In this case, it's best to map these additional items in a ",Object(i.b)("inlineCode",{parentName:"p"},"devDependencies"),"\nobject."),Object(i.b)("p",null,"These things will be installed when doing ",Object(i.b)("inlineCode",{parentName:"p"},"npm link")," or ",Object(i.b)("inlineCode",{parentName:"p"},"npm install"),"\nfrom the root of a package, and can be managed like any other npm\nconfiguration param.  See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v6/using-npm/config"}),Object(i.b)("inlineCode",{parentName:"a"},"config"))," for more on the topic."),Object(i.b)("p",null,"For build steps that are not platform-specific, such as compiling\nCoffeeScript or other languages to JavaScript, use the ",Object(i.b)("inlineCode",{parentName:"p"},"prepare"),"\nscript to do this, and make the required package a devDependency."),Object(i.b)("p",null,"For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "name": "ethopia-waza",\n  "description": "a delightfully fruity coffee varietal",\n  "version": "1.2.3",\n  "devDependencies": {\n    "coffee-script": "~1.6.3"\n  },\n  "scripts": {\n    "prepare": "coffee -o lib/ -c src/waza.coffee"\n  },\n  "main": "lib/waza.js"\n}\n')),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"prepare")," script will be run before publishing, so that users\ncan consume the functionality without requiring them to compile it\nthemselves.  In dev mode (ie, locally running ",Object(i.b)("inlineCode",{parentName:"p"},"npm install"),"), it'll\nrun this script as well, so that you can test it easily."),Object(i.b)("h3",null,"peerDependencies"),Object(i.b)("p",null,"In some cases, you want to express the compatibility of your package with a\nhost tool or library, while not necessarily doing a ",Object(i.b)("inlineCode",{parentName:"p"},"require")," of this host.\nThis is usually referred to as a ",Object(i.b)("em",{parentName:"p"},"plugin"),". Notably, your module may be exposing\na specific interface, expected and specified by the host documentation."),Object(i.b)("p",null,"For example:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "name": "tea-latte",\n  "version": "1.3.5",\n  "peerDependencies": {\n    "tea": "2.x"\n  }\n}\n')),Object(i.b)("p",null,"This ensures your package ",Object(i.b)("inlineCode",{parentName:"p"},"tea-latte")," can be installed ",Object(i.b)("em",{parentName:"p"},"along")," with the second\nmajor version of the host package ",Object(i.b)("inlineCode",{parentName:"p"},"tea")," only. ",Object(i.b)("inlineCode",{parentName:"p"},"npm install tea-latte")," could\npossibly yield the following dependency graph:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"├── tea-latte@1.3.5\n└── tea@2.2.0\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"NOTE: npm versions 1 and 2 will automatically install ",Object(i.b)("inlineCode",{parentName:"strong"},"peerDependencies")," if\nthey are not explicitly depended upon higher in the dependency tree. In the\nnext major version of npm (npm@3), this will no longer be the case. You will\nreceive a warning that the peerDependency is not installed instead.")," The\nbehavior in npms 1 & 2 was frequently confusing and could easily put you into\ndependency hell, a situation that npm is designed to avoid as much as possible."),Object(i.b)("p",null,"Trying to install another plugin with a conflicting requirement will cause an\nerror. For this reason, make sure your plugin requirement is as broad as\npossible, and not to lock it down to specific patch versions."),Object(i.b)("p",null,"Assuming the host complies with ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"https://semver.org/"}),"semver"),", only changes in\nthe host package's major version will break your plugin. Thus, if you've worked\nwith every 1.x version of the host package, use ",Object(i.b)("inlineCode",{parentName:"p"},'"^1.0"')," or ",Object(i.b)("inlineCode",{parentName:"p"},'"1.x"')," to express\nthis. If you depend on features introduced in 1.5.2, use ",Object(i.b)("inlineCode",{parentName:"p"},'">= 1.5.2 < 2"'),"."),Object(i.b)("h3",null,"bundledDependencies"),Object(i.b)("p",null,"This defines an array of package names that will be bundled when publishing\nthe package."),Object(i.b)("p",null,"In cases where you need to preserve npm packages locally or have them\navailable through a single file download, you can bundle the packages in a\ntarball file by specifying the package names in the ",Object(i.b)("inlineCode",{parentName:"p"},"bundledDependencies"),"\narray and executing ",Object(i.b)("inlineCode",{parentName:"p"},"npm pack"),"."),Object(i.b)("p",null,"For example:"),Object(i.b)("p",null,"If we define a package.json like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "name": "awesome-web-framework",\n  "version": "1.0.0",\n  "bundledDependencies": [\n    "renderized", "super-streams"\n  ]\n}\n')),Object(i.b)("p",null,"we can obtain ",Object(i.b)("inlineCode",{parentName:"p"},"awesome-web-framework-1.0.0.tgz")," file by running ",Object(i.b)("inlineCode",{parentName:"p"},"npm pack"),".\nThis file contains the dependencies ",Object(i.b)("inlineCode",{parentName:"p"},"renderized")," and ",Object(i.b)("inlineCode",{parentName:"p"},"super-streams")," which\ncan be installed in a new project by executing ",Object(i.b)("inlineCode",{parentName:"p"},"npm install\nawesome-web-framework-1.0.0.tgz"),".  Note that the package names do not include\nany versions, as that information is specified in ",Object(i.b)("inlineCode",{parentName:"p"},"dependencies"),"."),Object(i.b)("p",null,"If this is spelled ",Object(i.b)("inlineCode",{parentName:"p"},'"bundleDependencies"'),", then that is also honored."),Object(i.b)("h3",null,"optionalDependencies"),Object(i.b)("p",null,"If a dependency can be used, but you would like npm to proceed if it cannot be\nfound or fails to install, then you may put it in the ",Object(i.b)("inlineCode",{parentName:"p"},"optionalDependencies"),"\nobject.  This is a map of package name to version or url, just like the\n",Object(i.b)("inlineCode",{parentName:"p"},"dependencies")," object.  The difference is that build failures do not cause\ninstallation to fail.  Running ",Object(i.b)("inlineCode",{parentName:"p"},"npm install --no-optional")," will prevent these\ndependencies from being installed."),Object(i.b)("p",null,"It is still your program's responsibility to handle the lack of the\ndependency.  For example, something like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"try {\n  var foo = require('foo')\n  var fooVersion = require('foo/package.json').version\n} catch (er) {\n  foo = null\n}\nif ( notGoodFooVersion(fooVersion) ) {\n  foo = null\n}\n\n// .. then later in your program ..\n\nif (foo) {\n  foo.doFooThings()\n}\n")),Object(i.b)("p",null,"Entries in ",Object(i.b)("inlineCode",{parentName:"p"},"optionalDependencies")," will override entries of the same name in\n",Object(i.b)("inlineCode",{parentName:"p"},"dependencies"),", so it's usually best to only put in one place."),Object(i.b)("h3",null,"engines"),Object(i.b)("p",null,"You can specify the version of node that your stuff works on:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "engines" : { "node" : ">=0.10.3 <0.12" } }\n')),Object(i.b)("p",null,"And, like with dependencies, if you don't specify the version (or if you\nspecify \"","*",'" as the version), then any version of node will do.'),Object(i.b)("p",null,'If you specify an "engines" field, then npm will require that "node" be\nsomewhere on that list. If "engines" is omitted, then npm will just assume\nthat it works on node.'),Object(i.b)("p",null,'You can also use the "engines" field to specify which versions of npm\nare capable of properly installing your program.  For example:'),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{ "engines" : { "npm" : "~1.0.20" } }\n')),Object(i.b)("p",null,"Unless the user has set the ",Object(i.b)("inlineCode",{parentName:"p"},"engine-strict")," config flag, this\nfield is advisory only and will only produce warnings when your package is installed as a dependency."),Object(i.b)("h3",null,"engineStrict"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"This feature was removed in npm 3.0.0")),Object(i.b)("p",null,"Prior to npm 3.0.0, this feature was used to treat this package as if the\nuser had set ",Object(i.b)("inlineCode",{parentName:"p"},"engine-strict"),". It is no longer used."),Object(i.b)("h3",null,"os"),Object(i.b)("p",null,"You can specify which operating systems your\nmodule will run on:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'"os" : [ "darwin", "linux" ]\n')),Object(i.b)("p",null,"You can also blacklist instead of whitelist operating systems,\njust prepend the blacklisted os with a '!':"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'"os" : [ "!win32" ]\n')),Object(i.b)("p",null,"The host operating system is determined by ",Object(i.b)("inlineCode",{parentName:"p"},"process.platform")),Object(i.b)("p",null,"It is allowed to both blacklist, and whitelist, although there isn't any\ngood reason to do this."),Object(i.b)("h3",null,"cpu"),Object(i.b)("p",null,"If your code only runs on certain cpu architectures,\nyou can specify which ones."),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'"cpu" : [ "x64", "ia32" ]\n')),Object(i.b)("p",null,"Like the ",Object(i.b)("inlineCode",{parentName:"p"},"os")," option, you can also blacklist architectures:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'"cpu" : [ "!arm", "!mips" ]\n')),Object(i.b)("p",null,"The host architecture is determined by ",Object(i.b)("inlineCode",{parentName:"p"},"process.arch")),Object(i.b)("h3",null,"preferGlobal"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"DEPRECATED")),Object(i.b)("p",null,"This option used to trigger an npm warning, but it will no longer warn. It is\npurely there for informational purposes. It is now recommended that you install\nany binaries as local devDependencies wherever possible."),Object(i.b)("h3",null,"private"),Object(i.b)("p",null,"If you set ",Object(i.b)("inlineCode",{parentName:"p"},'"private": true')," in your package.json, then npm will refuse\nto publish it."),Object(i.b)("p",null,"This is a way to prevent accidental publication of private repositories.  If\nyou would like to ensure that a given package is only ever published to a\nspecific registry (for example, an internal registry), then use the\n",Object(i.b)("inlineCode",{parentName:"p"},"publishConfig")," dictionary described below to override the ",Object(i.b)("inlineCode",{parentName:"p"},"registry")," config\nparam at publish-time."),Object(i.b)("h3",null,"publishConfig"),Object(i.b)("p",null,'This is a set of config values that will be used at publish-time. It\'s\nespecially handy if you want to set the tag, registry or access, so that\nyou can ensure that a given package is not tagged with "latest", published\nto the global public registry or that a scoped module is private by default.'),Object(i.b)("p",null,'Any config values can be overridden, but only "tag", "registry" and "access"\nprobably matter for the purposes of publishing.'),Object(i.b)("p",null,"See ",Object(i.b)("a",Object.assign({parentName:"p"},{href:"/cli/v6/using-npm/config"}),Object(i.b)("inlineCode",{parentName:"a"},"config"))," to see the list of config options that can be\noverridden."),Object(i.b)("h3",null,"DEFAULT VALUES"),Object(i.b)("p",null,"npm will default some values based on package contents."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},'"scripts": {"start": "node server.js"}')),Object(i.b)("p",{parentName:"li"},"If there is a ",Object(i.b)("inlineCode",{parentName:"p"},"server.js")," file in the root of your package, then npm\nwill default the ",Object(i.b)("inlineCode",{parentName:"p"},"start")," command to ",Object(i.b)("inlineCode",{parentName:"p"},"node server.js"),".")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},'"scripts":{"install": "node-gyp rebuild"}')),Object(i.b)("p",{parentName:"li"},"If there is a ",Object(i.b)("inlineCode",{parentName:"p"},"binding.gyp")," file in the root of your package and you have not defined an ",Object(i.b)("inlineCode",{parentName:"p"},"install")," or ",Object(i.b)("inlineCode",{parentName:"p"},"preinstall")," script, npm will\ndefault the ",Object(i.b)("inlineCode",{parentName:"p"},"install")," command to compile using node-gyp.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},'"contributors": [...]')),Object(i.b)("p",{parentName:"li"},"If there is an ",Object(i.b)("inlineCode",{parentName:"p"},"AUTHORS")," file in the root of your package, npm will\ntreat each line as a ",Object(i.b)("inlineCode",{parentName:"p"},"Name <email> (url)")," format, where email and url\nare optional.  Lines which start with a ",Object(i.b)("inlineCode",{parentName:"p"},"#")," or are blank, will be\nignored."))),Object(i.b)("h3",null,"SEE ALSO"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/using-npm/semver"}),"semver")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/commands/npm-init"}),"npm init")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/commands/npm-version"}),"npm version")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/commands/npm-config"}),"npm config")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/commands/npm-help"}),"npm help")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/commands/npm-install"}),"npm install")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/commands/npm-publish"}),"npm publish")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"/cli/v6/commands/npm-uninstall"}),"npm uninstall"))))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---content-cli-v-6-configuring-npm-package-json-md-3d3cc99f7f953a2c7090.js.map