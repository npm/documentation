{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt-reply.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/table-of-contents.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/variant-select.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/layout.js","webpack:///./content/cli/v6/configuring-npm/package-json.md"],"names":["Prompt","children","as","mt","mb","p","border","style","color","backgroundColor","overflow","fontFamily","fontSize","PromptReply","listStyle","TableOfContents","items","depth","key","m","map","item","url","pl","title","display","py","href","defaultProps","VariantSelect","props","path","NavHierarchy","getPath","location","pathname","vp","getVariantAndPage","root","variantPages","getVariantsForPage","page","selectedItem","length","forEach","match","push","Item","onClick","window","variant","overlay","Button","Menu","direction","width","menuWidth","styled","Dropdown","zIndex","alignItems","alignSelf","gridArea","Layout","pageContext","frontmatter","description","status","source","additionalContributors","variantRoot","getVariantRoot","components","Index","Note","Screenshot","flexDirection","minHeight","flex","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","borderWidth","borderBottomWidth","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","open","icon","ChevronDownIcon","mr","ChevronRightIcon","pt","editUrl","contributors","concat","login","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---content-cli-v-6-configuring-npm-package-json-md-0cc7dd6fb65a5fc86f5f.js","sourcesContent":["import React from 'react'\nimport {BorderBox, Text} from '@primer/components'\n\nfunction Prompt({children}) {\n  return (\n      <BorderBox\n       as=\"pre\"\n       mt={0}\n       mb={3}\n       p={3}\n       border={0}\n       style={{color: 'rgb(57, 58, 52)', backgroundColor: 'rgb(246, 248, 250)', overflow: 'auto'}}\n      >\n          <Text fontFamily=\"mono\" fontSize={1}>{children}</Text>\n      </BorderBox>\n  )\n}\n\nexport default Prompt\n","import React from 'react';\n\nfunction PromptReply({children}) {\n    return (<strong>{children}</strong>);\n}\n\nexport default PromptReply;\n","import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box key={items} as=\"ul\" m={0} p={0} css={{listStyle: 'none'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link key={item.title} display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","// VariantSelect: allows a variant to be set up within a document hierarchy\n//\n// For example, given two paths `/docs/v1.0/foo` and `/docs/v2.0/foo`, the\n// second folder acts as a variant.  If you use <VariantSelect root=\"/docs\">\n// then you'll get a selection for the different variants (v1.0, v2.0).\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Dropdown } from '@primer/components';\nimport NavHierarchy from '../nav-hierarchy'\n\nVariantSelect.Menu = styled(Dropdown.Menu)`\n  width: ${props => props.width ? props.width : '160px'};\n`\n\nfunction VariantSelect(props) {\n  const path = NavHierarchy.getPath(props.location.pathname);\n  const vp = NavHierarchy.getVariantAndPage(props.root, path);\n\n  if (!vp) {\n      return null;\n  }\n\n  const variantPages = NavHierarchy.getVariantsForPage(props.root, vp.page);\n  const items = [];\n  let selectedItem = variantPages[0];\n\n  if (variantPages.length === 0) {\n      return null;\n  }\n\n  variantPages.forEach((match) => {\n      if (match.page.url === path) {\n          selectedItem = match;\n      }\n\n      items.push(<Dropdown.Item onClick={() => { window.location.href = match.page.url; }} key={match.variant.title}>{match.variant.title}</Dropdown.Item>);\n  });\n\n  return (\n      <Dropdown overlay={props.overlay}>\n          <Dropdown.Button>{selectedItem.variant.title}</Dropdown.Button>\n          <VariantSelect.Menu direction={props.direction} width={props.menuWidth}>\n              {items}\n          </VariantSelect.Menu>\n      </Dropdown>\n  );\n}\n\nexport default VariantSelect\n","import {\n  BorderBox,\n  Box,\n  Details,\n  Flex,\n  Grid,\n  Heading,\n  Position,\n  StyledOcticon,\n  Text,\n} from '@primer/components'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/octicons-react'\nimport React from 'react'\nimport {MDXProvider} from \"@mdx-js/react\"\nimport Head from './head'\nimport Header, {HEADER_HEIGHT} from './header'\nimport Index from './index'\nimport Note from './note'\nimport PageFooter from './page-footer'\nimport Prompt from './prompt'\nimport PromptReply from './prompt-reply'\nimport Screenshot from './screenshot'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\nimport VariantSelect from './variant-select'\nimport NavHierarchy from '../nav-hierarchy'\n\nfunction Layout({children, pageContext, location}) {\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  const variantRoot = NavHierarchy.getVariantRoot(location.pathname);\n\n  return (\n    <MDXProvider components={{\n      Index,\n      Note,\n      Prompt,\n      PromptReply,\n      Screenshot\n    }}>\n\n      <Flex flexDirection=\"column\" minHeight=\"100vh\">\n        <Head title={title} description={description} />\n        <Header location={location} />\n        <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n          <Box display={['none', null, null, 'block']}>\n            <Sidebar location={location} />\n          </Box>\n          <Grid\n            id=\"skip-nav\"\n            maxWidth=\"100%\"\n            gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n            gridTemplateAreas={[\n              '\"heading\" \"content\"',\n              null,\n              '\"heading table-of-contents\" \"content table-of-contents\"',\n            ]}\n            gridColumnGap={[null, null, 6, 7]}\n            gridRowGap={3}\n            mx=\"auto\"\n            p={[5, 6, null, 7]}\n            css={{alignItems: 'start', alignSelf: 'start'}}\n          >\n            <Box css={{gridArea: 'heading'}}>\n              <BorderBox\n                borderWidth={0}\n                borderBottomWidth={1}\n                borderRadius={0}\n                pb={2}\n              >\n                <Box>\n                  <Box>\n                    <Heading as=\"h1\">{title}</Heading>\n                    {description}\n                  </Box>\n                </Box>\n              </BorderBox>\n              {variantRoot != null ? (\n                <Box css={{'margin-top': '25px'}}>\n                  <VariantSelect overlay={true} direction=\"se\" menuWidth=\"min(30ch, 500px)\" root={variantRoot} location={location} />\n                </Box>\n              ) : null}\n            </Box>\n            {pageContext.tableOfContents.items ? (\n              <Position\n                display={['none', null, 'block']}\n                css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n                position=\"sticky\"\n                top={HEADER_HEIGHT + 24}\n                mt=\"6px\"\n                maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n              >\n                <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                  Table of contents\n                </Text>\n                <TableOfContents items={pageContext.tableOfContents.items} />\n              </Position>\n            ) : null}\n            <Box css={{gridArea: 'content'}}>\n              {status || source ? (\n                <Flex mb={3} alignItems=\"center\">\n                  {status ? <StatusLabel status={status} /> : null}\n                  <Box mx=\"auto\" />\n                  {source ? <SourceLink href={source} /> : null}\n                </Flex>\n              ) : null}\n              {pageContext.tableOfContents.items ? (\n                <Box display={['block', null, 'none']} mb={3}>\n                  <Details>\n                    {({open}) => (\n                      <>\n                        <Text as=\"summary\" fontWeight=\"bold\">\n                          {open ? (\n                            <StyledOcticon icon={ChevronDownIcon} mr={2} />\n                          ) : (\n                            <StyledOcticon icon={ChevronRightIcon} mr={2} />\n                          )}\n                          Table of contents\n                        </Text>\n                        <Box pt={1}>\n                          <TableOfContents\n                            items={pageContext.tableOfContents.items}\n                          />\n                        </Box>\n                      </>\n                    )}\n                  </Details>\n                </Box>\n              ) : null}\n              {children}\n              <PageFooter\n                editUrl={pageContext.editUrl}\n                contributors={pageContext.contributors.concat(\n                  additionalContributors.map((login) => ({login})),\n                )}\n              />\n            </Box>\n          </Grid>\n        </Flex>\n      </Flex>\n    </MDXProvider>\n  )\n}\n\nexport default Layout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/documentation/documentation/node_modules/gatsby-theme-doctornpm/src/components/layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`Description`}</h3>\n    <p>{`This document is all you need to know about what's required in your package.json\nfile.  It must be actual JSON, not just a JavaScript object literal.`}</p>\n    <p>{`A lot of the behavior described in this document is affected by the config\nsettings described in `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/config\"\n      }}><inlineCode parentName=\"a\">{`config`}</inlineCode></a>{`.`}</p>\n    <h3>{`name`}</h3>\n    <p>{`If you plan to publish your package, the `}<em parentName=\"p\">{`most`}</em>{` important things in your\npackage.json are the name and version fields as they will be required. The name\nand version together form an identifier that is assumed to be completely unique.\nChanges to the package should come along with changes to the version. If you don't\nplan to publish your package, the name and version fields are optional.`}</p>\n    <p>{`The name is what your thing is called.`}</p>\n    <p>{`Some rules:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The name must be less than or equal to 214 characters. This includes the scope for\nscoped packages.`}</li>\n      <li parentName=\"ul\">{`The names of scoped packages can begin with a dot or an underscore. This is not permitted without a scope.`}</li>\n      <li parentName=\"ul\">{`New packages must not have uppercase letters in the name.`}</li>\n      <li parentName=\"ul\">{`The name ends up being part of a URL, an argument on the command line, and a\nfolder name. Therefore, the name can't contain any non-URL-safe characters.`}</li>\n    </ul>\n    <p>{`Some tips:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Don't use the same name as a core Node module.`}</li>\n      <li parentName=\"ul\">{`Don't put \"js\" or \"node\" in the name.  It's assumed that it's js, since you're\nwriting a package.json file, and you can specify the engine using the \"engines\"\nfield.  (See below.)`}</li>\n      <li parentName=\"ul\">{`The name will probably be passed as an argument to require(), so it should\nbe something short, but also reasonably descriptive.`}</li>\n      <li parentName=\"ul\">{`You may want to check the npm registry to see if there's something by that name\nalready, before you get too attached to it. `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.npmjs.com/\"\n        }}>{`https://www.npmjs.com/`}</a></li>\n    </ul>\n    <p>{`A name can be optionally prefixed by a scope, e.g. `}<inlineCode parentName=\"p\">{`@myorg/mypackage`}</inlineCode>{`. See\n`}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/scope\"\n      }}><inlineCode parentName=\"a\">{`scope`}</inlineCode></a>{` for more detail.`}</p>\n    <h3>{`version`}</h3>\n    <p>{`If you plan to publish your package, the `}<em parentName=\"p\">{`most`}</em>{` important things in your\npackage.json are the name and version fields as they will be required. The name\nand version together form an identifier that is assumed to be completely unique.\nChanges to the package should come along with changes to the version. If you don't\nplan to publish your package, the name and version fields are optional.`}</p>\n    <p>{`Version must be parseable by\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/isaacs/node-semver\"\n      }}>{`node-semver`}</a>{`, which is bundled\nwith npm as a dependency.  (`}<inlineCode parentName=\"p\">{`npm install semver`}</inlineCode>{` to use it yourself.)`}</p>\n    <p>{`More on version numbers and ranges at `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/semver\"\n      }}>{`semver`}</a>{`.`}</p>\n    <h3>{`description`}</h3>\n    <p>{`Put a description in it.  It's a string.  This helps people discover your\npackage, as it's listed in `}<inlineCode parentName=\"p\">{`npm search`}</inlineCode>{`.`}</p>\n    <h3>{`keywords`}</h3>\n    <p>{`Put keywords in it.  It's an array of strings.  This helps people\ndiscover your package as it's listed in `}<inlineCode parentName=\"p\">{`npm search`}</inlineCode>{`.`}</p>\n    <h3>{`homepage`}</h3>\n    <p>{`The url to the project homepage.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"homepage\": \"https://github.com/owner/project#readme\"\n`}</code></pre>\n    <h3>{`bugs`}</h3>\n    <p>{`The url to your project's issue tracker and / or the email address to which\nissues should be reported. These are helpful for people who encounter issues\nwith your package.`}</p>\n    <p>{`It should look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"url\" : \"https://github.com/owner/project/issues\"\n, \"email\" : \"project@hostname.com\"\n}\n`}</code></pre>\n    <p>{`You can specify either one or both values. If you want to provide only a url,\nyou can specify the value for \"bugs\" as a simple string instead of an object.`}</p>\n    <p>{`If a url is provided, it will be used by the `}<inlineCode parentName=\"p\">{`npm bugs`}</inlineCode>{` command.`}</p>\n    <h3>{`license`}</h3>\n    <p>{`You should specify a license for your package so that people know how they are\npermitted to use it, and any restrictions you're placing on it.`}</p>\n    <p>{`If you're using a common license such as BSD-2-Clause or MIT, add a\ncurrent SPDX license identifier for the license you're using, like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"license\" : \"BSD-3-Clause\" }\n`}</code></pre>\n    <p>{`You can check `}<a parentName=\"p\" {...{\n        \"href\": \"https://spdx.org/licenses/\"\n      }}>{`the full list of SPDX license IDs`}</a>{`.\nIdeally you should pick one that is\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://opensource.org/licenses/alphabetical\"\n      }}>{`OSI`}</a>{` approved.`}</p>\n    <p>{`If your package is licensed under multiple common licenses, use an `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/spdx\"\n      }}>{`SPDX license\nexpression syntax version 2.0 string`}</a>{`, like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"license\" : \"(ISC OR GPL-3.0)\" }\n`}</code></pre>\n    <p>{`If you are using a license that hasn't been assigned an SPDX identifier, or if\nyou are using a custom license, use a string value like this one:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"license\" : \"SEE LICENSE IN <filename>\" }\n`}</code></pre>\n    <p>{`Then include a file named `}<inlineCode parentName=\"p\">{`<filename>`}</inlineCode>{` at the top level of the package.`}</p>\n    <p>{`Some old packages used license objects or a \"licenses\" property containing an\narray of license objects:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`// Not valid metadata\n{ \"license\" :\n  { \"type\" : \"ISC\"\n  , \"url\" : \"https://opensource.org/licenses/ISC\"\n  }\n}\n\n// Not valid metadata\n{ \"licenses\" :\n  [\n    { \"type\": \"MIT\"\n    , \"url\": \"https://www.opensource.org/licenses/mit-license.php\"\n    }\n  , { \"type\": \"Apache-2.0\"\n    , \"url\": \"https://opensource.org/licenses/apache2.0.php\"\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`Those styles are now deprecated. Instead, use SPDX expressions, like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"license\": \"ISC\" }\n\n{ \"license\": \"(MIT OR Apache-2.0)\" }\n`}</code></pre>\n    <p>{`Finally, if you do not wish to grant others the right to use a private or\nunpublished package under any terms:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"license\": \"UNLICENSED\" }\n`}</code></pre>\n    <p>{`Consider also setting `}<inlineCode parentName=\"p\">{`\"private\": true`}</inlineCode>{` to prevent accidental publication.`}</p>\n    <h3>{`people fields: author, contributors`}</h3>\n    <p>{`The \"author\" is one person.  \"contributors\" is an array of people.  A \"person\"\nis an object with a \"name\" field and optionally \"url\" and \"email\", like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"name\" : \"Barney Rubble\"\n, \"email\" : \"b@rubble.com\"\n, \"url\" : \"http://barnyrubble.tumblr.com/\"\n}\n`}</code></pre>\n    <p>{`Or you can shorten that all into a single string, and npm will parse it for you:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"Barney Rubble <b@rubble.com> (http://barnyrubble.tumblr.com/)\"\n`}</code></pre>\n    <p>{`Both email and url are optional either way.`}</p>\n    <p>{`npm also sets a top-level \"maintainers\" field with your npm user info.`}</p>\n    <h3>{`funding`}</h3>\n    <p>{`You can specify an object containing an URL that provides up-to-date\ninformation about ways to help fund development of your package, or\na string URL, or an array of these:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"funding\": {\n  \"type\" : \"individual\",\n  \"url\" : \"http://example.com/donate\"\n}\n\n\"funding\": {\n  \"type\" : \"patreon\",\n  \"url\" : \"https://www.patreon.com/my-account\"\n}\n\n\"funding\": \"http://example.com/donate\"\n\n\"funding\": [\n  {\n    \"type\" : \"individual\",\n    \"url\" : \"http://example.com/donate\"\n  },\n  \"http://example.com/donateAlso\",\n  {\n    \"type\" : \"patreon\",\n    \"url\" : \"https://www.patreon.com/my-account\"\n  }\n]\n`}</code></pre>\n    <p>{`Users can use the `}<inlineCode parentName=\"p\">{`npm fund`}</inlineCode>{` subcommand to list the `}<inlineCode parentName=\"p\">{`funding`}</inlineCode>{` URLs of all\ndependencies of their project, direct and indirect. A shortcut to visit each\nfunding url is also available when providing the project name such as:\n`}<inlineCode parentName=\"p\">{`npm fund <projectname>`}</inlineCode>{` (when there are multiple URLs, the first one will be\nvisited)`}</p>\n    <h3>{`files`}</h3>\n    <p>{`The optional `}<inlineCode parentName=\"p\">{`files`}</inlineCode>{` field is an array of file patterns that describes\nthe entries to be included when your package is installed as a\ndependency. File patterns follow a similar syntax to `}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{`, but\nreversed: including a file, directory, or glob pattern (`}<inlineCode parentName=\"p\">{`*`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`**/*`}</inlineCode>{`, and such)\nwill make it so that file is included in the tarball when it's packed. Omitting\nthe field will make it default to `}<inlineCode parentName=\"p\">{`[\"*\"]`}</inlineCode>{`, which means it will include all files.`}</p>\n    <p>{`Some special files and directories are also included or excluded regardless of\nwhether they exist in the `}<inlineCode parentName=\"p\">{`files`}</inlineCode>{` array (see below).`}</p>\n    <p>{`You can also provide a `}<inlineCode parentName=\"p\">{`.npmignore`}</inlineCode>{` file in the root of your package or\nin subdirectories, which will keep files from being included. At the\nroot of your package it will not override the \"files\" field, but in\nsubdirectories it will. The `}<inlineCode parentName=\"p\">{`.npmignore`}</inlineCode>{` file works just like a\n`}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{`. If there is a `}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{` file, and `}<inlineCode parentName=\"p\">{`.npmignore`}</inlineCode>{` is\nmissing, `}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{`'s contents will be used instead.`}</p>\n    <p>{`Files included with the \"package.json#files\" field `}<em parentName=\"p\">{`cannot`}</em>{` be excluded\nthrough `}<inlineCode parentName=\"p\">{`.npmignore`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{`.`}</p>\n    <p>{`Certain files are always included, regardless of settings:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`package.json`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`README`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CHANGES`}</inlineCode>{` / `}<inlineCode parentName=\"li\">{`CHANGELOG`}</inlineCode>{` / `}<inlineCode parentName=\"li\">{`HISTORY`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`LICENSE`}</inlineCode>{` / `}<inlineCode parentName=\"li\">{`LICENCE`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`NOTICE`}</inlineCode></li>\n      <li parentName=\"ul\">{`The file in the \"main\" field`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`README`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`CHANGES`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`LICENSE`}</inlineCode>{` & `}<inlineCode parentName=\"p\">{`NOTICE`}</inlineCode>{` can have any case and extension.`}</p>\n    <p>{`Conversely, some files are always ignored:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.git`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CVS`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.svn`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.hg`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.lock-wscript`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.wafpickle-N`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.DS_Store`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`npm-debug.log`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`.npmrc`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`node_modules`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`config.gypi`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`package-lock.json`}</inlineCode>{` (use shrinkwrap instead)`}</li>\n      <li parentName=\"ul\">{`All files containing a `}<inlineCode parentName=\"li\">{`*`}</inlineCode>{` character (incompatible with Windows) `}</li>\n    </ul>\n    <h3>{`main`}</h3>\n    <p>{`The main field is a module ID that is the primary entry point to your program.\nThat is, if your package is named `}<inlineCode parentName=\"p\">{`foo`}</inlineCode>{`, and a user installs it, and then does\n`}<inlineCode parentName=\"p\">{`require(\"foo\")`}</inlineCode>{`, then your main module's exports object will be returned.`}</p>\n    <p>{`This should be a module ID relative to the root of your package folder.`}</p>\n    <p>{`For most modules, it makes the most sense to have a main script and often not\nmuch else.`}</p>\n    <h3>{`browser`}</h3>\n    <p>{`If your module is meant to be used client-side the browser field should be\nused instead of the main field. This is helpful to hint users that it might\nrely on primitives that aren't available in Node.js modules. (e.g. `}<inlineCode parentName=\"p\">{`window`}</inlineCode>{`)`}</p>\n    <h3>{`bin`}</h3>\n    <p>{`A lot of packages have one or more executable files that they'd like to\ninstall into the PATH. npm makes this pretty easy (in fact, it uses this\nfeature to install the \"npm\" executable.)`}</p>\n    <p>{`To use this, supply a `}<inlineCode parentName=\"p\">{`bin`}</inlineCode>{` field in your package.json which is a map of\ncommand name to local file name. On install, npm will symlink that file into\n`}<inlineCode parentName=\"p\">{`prefix/bin`}</inlineCode>{` for global installs, or `}<inlineCode parentName=\"p\">{`./node_modules/.bin/`}</inlineCode>{` for local\ninstalls.`}</p>\n    <p>{`For example, myapp could have this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"bin\" : { \"myapp\" : \"./cli.js\" } }\n`}</code></pre>\n    <p>{`So, when you install myapp, it'll create a symlink from the `}<inlineCode parentName=\"p\">{`cli.js`}</inlineCode>{` script to\n`}<inlineCode parentName=\"p\">{`/usr/local/bin/myapp`}</inlineCode>{`.`}</p>\n    <p>{`If you have a single executable, and its name should be the name\nof the package, then you can just supply it as a string.  For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"name\": \"my-program\"\n, \"version\": \"1.2.5\"\n, \"bin\": \"./path/to/program\" }\n`}</code></pre>\n    <p>{`would be the same as this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"name\": \"my-program\"\n, \"version\": \"1.2.5\"\n, \"bin\" : { \"my-program\" : \"./path/to/program\" } }\n`}</code></pre>\n    <p>{`Please make sure that your file(s) referenced in `}<inlineCode parentName=\"p\">{`bin`}</inlineCode>{` starts with\n`}<inlineCode parentName=\"p\">{`#!/usr/bin/env node`}</inlineCode>{`, otherwise the scripts are started without the node\nexecutable!`}</p>\n    <h3>{`man`}</h3>\n    <p>{`Specify either a single file or an array of filenames to put in place for the\n`}<inlineCode parentName=\"p\">{`man`}</inlineCode>{` program to find.`}</p>\n    <p>{`If only a single file is provided, then it's installed such that it is the\nresult from `}<inlineCode parentName=\"p\">{`man <pkgname>`}</inlineCode>{`, regardless of its actual filename.  For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"name\" : \"foo\"\n, \"version\" : \"1.2.3\"\n, \"description\" : \"A packaged foo fooer for fooing foos\"\n, \"main\" : \"foo.js\"\n, \"man\" : \"./man/doc.1\"\n}\n`}</code></pre>\n    <p>{`would link the `}<inlineCode parentName=\"p\">{`./man/doc.1`}</inlineCode>{` file in such that it is the target for `}<inlineCode parentName=\"p\">{`man foo`}</inlineCode></p>\n    <p>{`If the filename doesn't start with the package name, then it's prefixed.\nSo, this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"name\" : \"foo\"\n, \"version\" : \"1.2.3\"\n, \"description\" : \"A packaged foo fooer for fooing foos\"\n, \"main\" : \"foo.js\"\n, \"man\" : [ \"./man/foo.1\", \"./man/bar.1\" ]\n}\n`}</code></pre>\n    <p>{`will create files to do `}<inlineCode parentName=\"p\">{`man foo`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`man foo-bar`}</inlineCode>{`.`}</p>\n    <p>{`Man files must end with a number, and optionally a `}<inlineCode parentName=\"p\">{`.gz`}</inlineCode>{` suffix if they are\ncompressed.  The number dictates which man section the file is installed into.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"name\" : \"foo\"\n, \"version\" : \"1.2.3\"\n, \"description\" : \"A packaged foo fooer for fooing foos\"\n, \"main\" : \"foo.js\"\n, \"man\" : [ \"./man/foo.1\", \"./man/foo.2\" ]\n}\n`}</code></pre>\n    <p>{`will create entries for `}<inlineCode parentName=\"p\">{`man foo`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`man 2 foo`}</inlineCode></p>\n    <h3>{`directories`}</h3>\n    <p>{`The CommonJS `}<a parentName=\"p\" {...{\n        \"href\": \"http://wiki.commonjs.org/wiki/Packages/1.0\"\n      }}>{`Packages`}</a>{` spec details a\nfew ways that you can indicate the structure of your package using a `}<inlineCode parentName=\"p\">{`directories`}</inlineCode>{`\nobject. If you look at `}<a parentName=\"p\" {...{\n        \"href\": \"https://registry.npmjs.org/npm/latest\"\n      }}>{`npm's package.json`}</a>{`,\nyou'll see that it has directories for doc, lib, and man.`}</p>\n    <p>{`In the future, this information may be used in other creative ways.`}</p>\n    <h4>{`directories.lib`}</h4>\n    <p>{`Tell people where the bulk of your library is.  Nothing special is done\nwith the lib folder in any way, but it's useful meta info.`}</p>\n    <h4>{`directories.bin`}</h4>\n    <p>{`If you specify a `}<inlineCode parentName=\"p\">{`bin`}</inlineCode>{` directory in `}<inlineCode parentName=\"p\">{`directories.bin`}</inlineCode>{`, all the files in\nthat folder will be added.`}</p>\n    <p>{`Because of the way the `}<inlineCode parentName=\"p\">{`bin`}</inlineCode>{` directive works, specifying both a\n`}<inlineCode parentName=\"p\">{`bin`}</inlineCode>{` path and setting `}<inlineCode parentName=\"p\">{`directories.bin`}</inlineCode>{` is an error. If you want to\nspecify individual files, use `}<inlineCode parentName=\"p\">{`bin`}</inlineCode>{`, and for all the files in an\nexisting `}<inlineCode parentName=\"p\">{`bin`}</inlineCode>{` directory, use `}<inlineCode parentName=\"p\">{`directories.bin`}</inlineCode>{`.`}</p>\n    <h4>{`directories.man`}</h4>\n    <p>{`A folder that is full of man pages.  Sugar to generate a \"man\" array by\nwalking the folder.`}</p>\n    <h4>{`directories.doc`}</h4>\n    <p>{`Put markdown files in here.  Eventually, these will be displayed nicely,\nmaybe, someday.`}</p>\n    <h4>{`directories.example`}</h4>\n    <p>{`Put example scripts in here.  Someday, it might be exposed in some clever way.`}</p>\n    <h4>{`directories.test`}</h4>\n    <p>{`Put your tests in here. It is currently not exposed, but it might be in the\nfuture.`}</p>\n    <h3>{`repository`}</h3>\n    <p>{`Specify the place where your code lives. This is helpful for people who\nwant to contribute.  If the git repo is on GitHub, then the `}<inlineCode parentName=\"p\">{`npm docs`}</inlineCode>{`\ncommand will be able to find you.`}</p>\n    <p>{`Do it like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"repository\": {\n  \"type\" : \"git\",\n  \"url\" : \"https://github.com/npm/cli.git\"\n}\n\n\"repository\": {\n  \"type\" : \"svn\",\n  \"url\" : \"https://v8.googlecode.com/svn/trunk/\"\n}\n`}</code></pre>\n    <p>{`The URL should be a publicly available (perhaps read-only) url that can be handed\ndirectly to a VCS program without any modification.  It should not be a url to an\nhtml project page that you put in your browser.  It's for computers.`}</p>\n    <p>{`For GitHub, GitHub gist, Bitbucket, or GitLab repositories you can use the same\nshortcut syntax you use for `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"repository\": \"npm/npm\"\n\n\"repository\": \"github:user/repo\"\n\n\"repository\": \"gist:11081aaa281\"\n\n\"repository\": \"bitbucket:user/repo\"\n\n\"repository\": \"gitlab:user/repo\"\n`}</code></pre>\n    <p>{`If the `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` for your package is not in the root directory (for example\nif it is part of a monorepo), you can specify the directory in which it lives:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"repository\": {\n  \"type\" : \"git\",\n  \"url\" : \"https://github.com/facebook/react.git\",\n  \"directory\": \"packages/react-dom\"\n}\n`}</code></pre>\n    <h3>{`scripts`}</h3>\n    <p>{`The \"scripts\" property is a dictionary containing script commands that are run\nat various times in the lifecycle of your package.  The key is the lifecycle\nevent, and the value is the command to run at that point.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/scripts\"\n      }}><inlineCode parentName=\"a\">{`scripts`}</inlineCode></a>{` to find out more about writing package scripts.`}</p>\n    <h3>{`config`}</h3>\n    <p>{`A \"config\" object can be used to set configuration parameters used in package\nscripts that persist across upgrades.  For instance, if a package had the\nfollowing:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"name\" : \"foo\"\n, \"config\" : { \"port\" : \"8080\" } }\n`}</code></pre>\n    <p>{`and then had a \"start\" command that then referenced the\n`}<inlineCode parentName=\"p\">{`npm_package_config_port`}</inlineCode>{` environment variable, then the user could\noverride that by doing `}<inlineCode parentName=\"p\">{`npm config set foo:port 8001`}</inlineCode>{`.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/config\"\n      }}><inlineCode parentName=\"a\">{`config`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/scripts\"\n      }}><inlineCode parentName=\"a\">{`scripts`}</inlineCode></a>{` for more on package\nconfigs.`}</p>\n    <h3>{`dependencies`}</h3>\n    <p>{`Dependencies are specified in a simple object that maps a package name to a\nversion range. The version range is a string which has one or more\nspace-separated descriptors.  Dependencies can also be identified with a\ntarball or git URL.`}</p>\n    <p><strong parentName=\"p\">{`Please do not put test harnesses or transpilers in your\n`}<inlineCode parentName=\"strong\">{`dependencies`}</inlineCode>{` object.`}</strong>{`  See `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{`, below.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/semver\"\n      }}>{`semver`}</a>{` for more details about specifying version ranges.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`version`}</inlineCode>{` Must match `}<inlineCode parentName=\"li\">{`version`}</inlineCode>{` exactly`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`>version`}</inlineCode>{` Must be greater than `}<inlineCode parentName=\"li\">{`version`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`>=version`}</inlineCode>{` etc`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<version`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<=version`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`~version`}</inlineCode>{` \"Approximately equivalent to version\"  See `}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/using-npm/semver\"\n        }}>{`semver`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`^version`}</inlineCode>{` \"Compatible with version\"  See `}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/using-npm/semver\"\n        }}>{`semver`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1.2.x`}</inlineCode>{` 1.2.0, 1.2.1, etc., but not 1.3.0`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`http://...`}</inlineCode>{` See 'URLs as Dependencies' below`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`*`}</inlineCode>{` Matches any version`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`\"\"`}</inlineCode>{` (just an empty string) Same as `}<inlineCode parentName=\"li\">{`*`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`version1 - version2`}</inlineCode>{` Same as `}<inlineCode parentName=\"li\">{`>=version1 <=version2`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`range1 || range2`}</inlineCode>{` Passes if either range1 or range2 are satisfied.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`git...`}</inlineCode>{` See 'Git URLs as Dependencies' below`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`user/repo`}</inlineCode>{` See 'GitHub URLs' below`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tag`}</inlineCode>{` A specific version tagged and published as `}<inlineCode parentName=\"li\">{`tag`}</inlineCode>{`  See `}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-dist-tag\"\n        }}><inlineCode parentName=\"a\">{`npm dist-tag`}</inlineCode></a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`path/path/path`}</inlineCode>{` See `}<a parentName=\"li\" {...{\n          \"href\": \"#local-paths\"\n        }}>{`Local Paths`}</a>{` below`}</li>\n    </ul>\n    <p>{`For example, these are all valid:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"dependencies\" :\n  { \"foo\" : \"1.0.0 - 2.9999.9999\"\n  , \"bar\" : \">=1.0.2 <2.1.2\"\n  , \"baz\" : \">1.0.2 <=2.3.4\"\n  , \"boo\" : \"2.0.1\"\n  , \"qux\" : \"<1.0.0 || >=2.3.1 <2.4.5 || >=2.5.2 <3.0.0\"\n  , \"asd\" : \"http://asdf.com/asdf.tar.gz\"\n  , \"til\" : \"~1.2\"\n  , \"elf\" : \"~1.2.3\"\n  , \"two\" : \"2.x\"\n  , \"thr\" : \"3.3.x\"\n  , \"lat\" : \"latest\"\n  , \"dyl\" : \"file:../dyl\"\n  }\n}\n`}</code></pre>\n    <h4>{`URLs as Dependencies`}</h4>\n    <p>{`You may specify a tarball URL in place of a version range.`}</p>\n    <p>{`This tarball will be downloaded and installed locally to your package at\ninstall time.`}</p>\n    <h4>{`Git URLs as Dependencies`}</h4>\n    <p>{`Git urls are of the form:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>[#<commit-ish> | #semver:<semver>]\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`<protocol>`}</inlineCode>{` is one of `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+ssh`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+http`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+https`}</inlineCode>{`, or\n`}<inlineCode parentName=\"p\">{`git+file`}</inlineCode>{`.`}</p>\n    <p>{`If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{` can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is\nspecified, then `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` is used.`}</p>\n    <p>{`Examples:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`git+ssh://git@github.com:npm/cli.git#v1.0.27\ngit+ssh://git@github.com:npm/cli#semver:^5.0\ngit+https://isaacs@github.com/npm/cli.git\ngit://github.com/npm/cli.git#v1.0.27\n`}</code></pre>\n    <h4>{`GitHub URLs`}</h4>\n    <p>{`As of version 1.1.65, you can refer to GitHub urls as just \"foo\":\n\"user/foo-project\".  Just as with git URLs, a `}<inlineCode parentName=\"p\">{`commit-ish`}</inlineCode>{` suffix can be\nincluded.  For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"foo\",\n  \"version\": \"0.0.0\",\n  \"dependencies\": {\n    \"express\": \"expressjs/express\",\n    \"mocha\": \"mochajs/mocha#4727d357ea\",\n    \"module\": \"user/repo#feature\\\\/branch\"\n  }\n}\n`}</code></pre>\n    <h4>{`Local Paths`}</h4>\n    <p>{`As of version 2.0.0 you can provide a path to a local directory that contains a\npackage. Local paths can be saved using `}<inlineCode parentName=\"p\">{`npm install -S`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`npm install --save`}</inlineCode>{`, using any of these forms:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`../foo/bar\n~/foo/bar\n./foo/bar\n/foo/bar\n`}</code></pre>\n    <p>{`in which case they will be normalized to a relative path and added to your\n`}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"baz\",\n  \"dependencies\": {\n    \"bar\": \"file:../foo/bar\"\n  }\n}\n`}</code></pre>\n    <p>{`This feature is helpful for local offline development and creating\ntests that require npm installing where you don't want to hit an\nexternal server, but should not be used when publishing packages\nto the public registry.`}</p>\n    <h3>{`devDependencies`}</h3>\n    <p>{`If someone is planning on downloading and using your module in their\nprogram, then they probably don't want or need to download and build\nthe external test or documentation framework that you use.`}</p>\n    <p>{`In this case, it's best to map these additional items in a `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{`\nobject.`}</p>\n    <p>{`These things will be installed when doing `}<inlineCode parentName=\"p\">{`npm link`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{`\nfrom the root of a package, and can be managed like any other npm\nconfiguration param.  See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/config\"\n      }}><inlineCode parentName=\"a\">{`config`}</inlineCode></a>{` for more on the topic.`}</p>\n    <p>{`For build steps that are not platform-specific, such as compiling\nCoffeeScript or other languages to JavaScript, use the `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{`\nscript to do this, and make the required package a devDependency.`}</p>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"name\": \"ethopia-waza\",\n  \"description\": \"a delightfully fruity coffee varietal\",\n  \"version\": \"1.2.3\",\n  \"devDependencies\": {\n    \"coffee-script\": \"~1.6.3\"\n  },\n  \"scripts\": {\n    \"prepare\": \"coffee -o lib/ -c src/waza.coffee\"\n  },\n  \"main\": \"lib/waza.js\"\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script will be run before publishing, so that users\ncan consume the functionality without requiring them to compile it\nthemselves.  In dev mode (ie, locally running `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{`), it'll\nrun this script as well, so that you can test it easily.`}</p>\n    <h3>{`peerDependencies`}</h3>\n    <p>{`In some cases, you want to express the compatibility of your package with a\nhost tool or library, while not necessarily doing a `}<inlineCode parentName=\"p\">{`require`}</inlineCode>{` of this host.\nThis is usually referred to as a `}<em parentName=\"p\">{`plugin`}</em>{`. Notably, your module may be exposing\na specific interface, expected and specified by the host documentation.`}</p>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"tea-latte\",\n  \"version\": \"1.3.5\",\n  \"peerDependencies\": {\n    \"tea\": \"2.x\"\n  }\n}\n`}</code></pre>\n    <p>{`This ensures your package `}<inlineCode parentName=\"p\">{`tea-latte`}</inlineCode>{` can be installed `}<em parentName=\"p\">{`along`}</em>{` with the second\nmajor version of the host package `}<inlineCode parentName=\"p\">{`tea`}</inlineCode>{` only. `}<inlineCode parentName=\"p\">{`npm install tea-latte`}</inlineCode>{` could\npossibly yield the following dependency graph:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`├── tea-latte@1.3.5\n└── tea@2.2.0\n`}</code></pre>\n    <p><strong parentName=\"p\">{`NOTE: npm versions 1 and 2 will automatically install `}<inlineCode parentName=\"strong\">{`peerDependencies`}</inlineCode>{` if\nthey are not explicitly depended upon higher in the dependency tree. In the\nnext major version of npm (npm@3), this will no longer be the case. You will\nreceive a warning that the peerDependency is not installed instead.`}</strong>{` The\nbehavior in npms 1 & 2 was frequently confusing and could easily put you into\ndependency hell, a situation that npm is designed to avoid as much as possible.`}</p>\n    <p>{`Trying to install another plugin with a conflicting requirement will cause an\nerror. For this reason, make sure your plugin requirement is as broad as\npossible, and not to lock it down to specific patch versions.`}</p>\n    <p>{`Assuming the host complies with `}<a parentName=\"p\" {...{\n        \"href\": \"https://semver.org/\"\n      }}>{`semver`}</a>{`, only changes in\nthe host package's major version will break your plugin. Thus, if you've worked\nwith every 1.x version of the host package, use `}<inlineCode parentName=\"p\">{`\"^1.0\"`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`\"1.x\"`}</inlineCode>{` to express\nthis. If you depend on features introduced in 1.5.2, use `}<inlineCode parentName=\"p\">{`\">= 1.5.2 < 2\"`}</inlineCode>{`.`}</p>\n    <h3>{`bundledDependencies`}</h3>\n    <p>{`This defines an array of package names that will be bundled when publishing\nthe package.`}</p>\n    <p>{`In cases where you need to preserve npm packages locally or have them\navailable through a single file download, you can bundle the packages in a\ntarball file by specifying the package names in the `}<inlineCode parentName=\"p\">{`bundledDependencies`}</inlineCode>{`\narray and executing `}<inlineCode parentName=\"p\">{`npm pack`}</inlineCode>{`.`}</p>\n    <p>{`For example:`}</p>\n    <p>{`If we define a package.json like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"awesome-web-framework\",\n  \"version\": \"1.0.0\",\n  \"bundledDependencies\": [\n    \"renderized\", \"super-streams\"\n  ]\n}\n`}</code></pre>\n    <p>{`we can obtain `}<inlineCode parentName=\"p\">{`awesome-web-framework-1.0.0.tgz`}</inlineCode>{` file by running `}<inlineCode parentName=\"p\">{`npm pack`}</inlineCode>{`.\nThis file contains the dependencies `}<inlineCode parentName=\"p\">{`renderized`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`super-streams`}</inlineCode>{` which\ncan be installed in a new project by executing `}<inlineCode parentName=\"p\">{`npm install\nawesome-web-framework-1.0.0.tgz`}</inlineCode>{`.  Note that the package names do not include\nany versions, as that information is specified in `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{`.`}</p>\n    <p>{`If this is spelled `}<inlineCode parentName=\"p\">{`\"bundleDependencies\"`}</inlineCode>{`, then that is also honored.`}</p>\n    <h3>{`optionalDependencies`}</h3>\n    <p>{`If a dependency can be used, but you would like npm to proceed if it cannot be\nfound or fails to install, then you may put it in the `}<inlineCode parentName=\"p\">{`optionalDependencies`}</inlineCode>{`\nobject.  This is a map of package name to version or url, just like the\n`}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` object.  The difference is that build failures do not cause\ninstallation to fail.  Running `}<inlineCode parentName=\"p\">{`npm install --no-optional`}</inlineCode>{` will prevent these\ndependencies from being installed.`}</p>\n    <p>{`It is still your program's responsibility to handle the lack of the\ndependency.  For example, something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`try {\n  var foo = require('foo')\n  var fooVersion = require('foo/package.json').version\n} catch (er) {\n  foo = null\n}\nif ( notGoodFooVersion(fooVersion) ) {\n  foo = null\n}\n\n// .. then later in your program ..\n\nif (foo) {\n  foo.doFooThings()\n}\n`}</code></pre>\n    <p>{`Entries in `}<inlineCode parentName=\"p\">{`optionalDependencies`}</inlineCode>{` will override entries of the same name in\n`}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{`, so it's usually best to only put in one place.`}</p>\n    <h3>{`engines`}</h3>\n    <p>{`You can specify the version of node that your stuff works on:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"engines\" : { \"node\" : \">=0.10.3 <0.12\" } }\n`}</code></pre>\n    <p>{`And, like with dependencies, if you don't specify the version (or if you\nspecify \"`}{`*`}{`\" as the version), then any version of node will do.`}</p>\n    <p>{`If you specify an \"engines\" field, then npm will require that \"node\" be\nsomewhere on that list. If \"engines\" is omitted, then npm will just assume\nthat it works on node.`}</p>\n    <p>{`You can also use the \"engines\" field to specify which versions of npm\nare capable of properly installing your program.  For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{ \"engines\" : { \"npm\" : \"~1.0.20\" } }\n`}</code></pre>\n    <p>{`Unless the user has set the `}<inlineCode parentName=\"p\">{`engine-strict`}</inlineCode>{` config flag, this\nfield is advisory only and will only produce warnings when your package is installed as a dependency.`}</p>\n    <h3>{`engineStrict`}</h3>\n    <p><strong parentName=\"p\">{`This feature was removed in npm 3.0.0`}</strong></p>\n    <p>{`Prior to npm 3.0.0, this feature was used to treat this package as if the\nuser had set `}<inlineCode parentName=\"p\">{`engine-strict`}</inlineCode>{`. It is no longer used.`}</p>\n    <h3>{`os`}</h3>\n    <p>{`You can specify which operating systems your\nmodule will run on:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"os\" : [ \"darwin\", \"linux\" ]\n`}</code></pre>\n    <p>{`You can also blacklist instead of whitelist operating systems,\njust prepend the blacklisted os with a '!':`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"os\" : [ \"!win32\" ]\n`}</code></pre>\n    <p>{`The host operating system is determined by `}<inlineCode parentName=\"p\">{`process.platform`}</inlineCode></p>\n    <p>{`It is allowed to both blacklist, and whitelist, although there isn't any\ngood reason to do this.`}</p>\n    <h3>{`cpu`}</h3>\n    <p>{`If your code only runs on certain cpu architectures,\nyou can specify which ones.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"cpu\" : [ \"x64\", \"ia32\" ]\n`}</code></pre>\n    <p>{`Like the `}<inlineCode parentName=\"p\">{`os`}</inlineCode>{` option, you can also blacklist architectures:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"cpu\" : [ \"!arm\", \"!mips\" ]\n`}</code></pre>\n    <p>{`The host architecture is determined by `}<inlineCode parentName=\"p\">{`process.arch`}</inlineCode></p>\n    <h3>{`preferGlobal`}</h3>\n    <p><strong parentName=\"p\">{`DEPRECATED`}</strong></p>\n    <p>{`This option used to trigger an npm warning, but it will no longer warn. It is\npurely there for informational purposes. It is now recommended that you install\nany binaries as local devDependencies wherever possible.`}</p>\n    <h3>{`private`}</h3>\n    <p>{`If you set `}<inlineCode parentName=\"p\">{`\"private\": true`}</inlineCode>{` in your package.json, then npm will refuse\nto publish it.`}</p>\n    <p>{`This is a way to prevent accidental publication of private repositories.  If\nyou would like to ensure that a given package is only ever published to a\nspecific registry (for example, an internal registry), then use the\n`}<inlineCode parentName=\"p\">{`publishConfig`}</inlineCode>{` dictionary described below to override the `}<inlineCode parentName=\"p\">{`registry`}</inlineCode>{` config\nparam at publish-time.`}</p>\n    <h3>{`publishConfig`}</h3>\n    <p>{`This is a set of config values that will be used at publish-time. It's\nespecially handy if you want to set the tag, registry or access, so that\nyou can ensure that a given package is not tagged with \"latest\", published\nto the global public registry or that a scoped module is private by default.`}</p>\n    <p>{`Any config values can be overridden, but only \"tag\", \"registry\" and \"access\"\nprobably matter for the purposes of publishing.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/config\"\n      }}><inlineCode parentName=\"a\">{`config`}</inlineCode></a>{` to see the list of config options that can be\noverridden.`}</p>\n    <h3>{`DEFAULT VALUES`}</h3>\n    <p>{`npm will default some values based on package contents.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`\"scripts\": {\"start\": \"node server.js\"}`}</inlineCode></p>\n        <p parentName=\"li\">{`If there is a `}<inlineCode parentName=\"p\">{`server.js`}</inlineCode>{` file in the root of your package, then npm\nwill default the `}<inlineCode parentName=\"p\">{`start`}</inlineCode>{` command to `}<inlineCode parentName=\"p\">{`node server.js`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`\"scripts\":{\"install\": \"node-gyp rebuild\"}`}</inlineCode></p>\n        <p parentName=\"li\">{`If there is a `}<inlineCode parentName=\"p\">{`binding.gyp`}</inlineCode>{` file in the root of your package and you have not defined an `}<inlineCode parentName=\"p\">{`install`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`preinstall`}</inlineCode>{` script, npm will\ndefault the `}<inlineCode parentName=\"p\">{`install`}</inlineCode>{` command to compile using node-gyp.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`\"contributors\": [...]`}</inlineCode></p>\n        <p parentName=\"li\">{`If there is an `}<inlineCode parentName=\"p\">{`AUTHORS`}</inlineCode>{` file in the root of your package, npm will\ntreat each line as a `}<inlineCode parentName=\"p\">{`Name <email> (url)`}</inlineCode>{` format, where email and url\nare optional.  Lines which start with a `}<inlineCode parentName=\"p\">{`#`}</inlineCode>{` or are blank, will be\nignored.`}</p>\n      </li>\n    </ul>\n    <h3>{`SEE ALSO`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/using-npm/semver\"\n        }}>{`semver`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-init\"\n        }}>{`npm init`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-version\"\n        }}>{`npm version`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-config\"\n        }}>{`npm config`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-help\"\n        }}>{`npm help`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-install\"\n        }}>{`npm install`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-publish\"\n        }}>{`npm publish`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-uninstall\"\n        }}>{`npm uninstall`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}