{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/prompt-reply.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/table-of-contents.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/variant-select.js","webpack:///./node_modules/gatsby-theme-doctornpm/src/components/layout.js","webpack:///./content/cli/v6/commands/npm-install.md"],"names":["Prompt","children","as","mt","mb","p","border","style","color","backgroundColor","overflow","fontFamily","fontSize","PromptReply","listStyle","TableOfContents","items","depth","key","m","map","item","url","pl","title","display","py","href","defaultProps","VariantSelect","props","path","NavHierarchy","getPath","location","pathname","vp","getVariantAndPage","root","variantPages","getVariantsForPage","page","selectedItem","length","forEach","match","push","Item","onClick","window","variant","overlay","Button","Menu","direction","width","menuWidth","styled","Dropdown","zIndex","alignItems","alignSelf","gridArea","Layout","pageContext","frontmatter","description","status","source","additionalContributors","variantRoot","getVariantRoot","components","Index","Note","Screenshot","flexDirection","minHeight","flex","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","borderWidth","borderBottomWidth","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","open","icon","ChevronDownIcon","mr","ChevronRightIcon","pt","editUrl","contributors","concat","login","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---content-cli-v-6-commands-npm-install-md-a4fc92ccdf21ae3151cd.js","sourcesContent":["import React from 'react'\nimport {BorderBox, Text} from '@primer/components'\n\nfunction Prompt({children}) {\n  return (\n      <BorderBox\n       as=\"pre\"\n       mt={0}\n       mb={3}\n       p={3}\n       border={0}\n       style={{color: 'rgb(57, 58, 52)', backgroundColor: 'rgb(246, 248, 250)', overflow: 'auto'}}\n      >\n          <Text fontFamily=\"mono\" fontSize={1}>{children}</Text>\n      </BorderBox>\n  )\n}\n\nexport default Prompt\n","import React from 'react';\n\nfunction PromptReply({children}) {\n    return (<strong>{children}</strong>);\n}\n\nexport default PromptReply;\n","import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box key={items} as=\"ul\" m={0} p={0} css={{listStyle: 'none'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link key={item.title} display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","// VariantSelect: allows a variant to be set up within a document hierarchy\n//\n// For example, given two paths `/docs/v1.0/foo` and `/docs/v2.0/foo`, the\n// second folder acts as a variant.  If you use <VariantSelect root=\"/docs\">\n// then you'll get a selection for the different variants (v1.0, v2.0).\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Dropdown } from '@primer/components';\nimport NavHierarchy from '../nav-hierarchy'\n\nVariantSelect.Menu = styled(Dropdown.Menu)`\n  width: ${props => props.width ? props.width : '160px'};\n`\n\nfunction VariantSelect(props) {\n  const path = NavHierarchy.getPath(props.location.pathname);\n  const vp = NavHierarchy.getVariantAndPage(props.root, path);\n\n  if (!vp) {\n      return null;\n  }\n\n  const variantPages = NavHierarchy.getVariantsForPage(props.root, vp.page);\n  const items = [];\n  let selectedItem = variantPages[0];\n\n  if (variantPages.length === 0) {\n      return null;\n  }\n\n  variantPages.forEach((match) => {\n      if (match.page.url === path) {\n          selectedItem = match;\n      }\n\n      items.push(<Dropdown.Item onClick={() => { window.location.href = match.page.url; }} key={match.variant.title}>{match.variant.title}</Dropdown.Item>);\n  });\n\n  return (\n      <Dropdown overlay={props.overlay}>\n          <Dropdown.Button>{selectedItem.variant.title}</Dropdown.Button>\n          <VariantSelect.Menu direction={props.direction} width={props.menuWidth}>\n              {items}\n          </VariantSelect.Menu>\n      </Dropdown>\n  );\n}\n\nexport default VariantSelect\n","import {\n  BorderBox,\n  Box,\n  Details,\n  Flex,\n  Grid,\n  Heading,\n  Position,\n  StyledOcticon,\n  Text,\n} from '@primer/components'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/octicons-react'\nimport React from 'react'\nimport {MDXProvider} from \"@mdx-js/react\"\nimport Head from './head'\nimport Header, {HEADER_HEIGHT} from './header'\nimport Index from './index'\nimport Note from './note'\nimport PageFooter from './page-footer'\nimport Prompt from './prompt'\nimport PromptReply from './prompt-reply'\nimport Screenshot from './screenshot'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\nimport VariantSelect from './variant-select'\nimport NavHierarchy from '../nav-hierarchy'\n\nfunction Layout({children, pageContext, location}) {\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  const variantRoot = NavHierarchy.getVariantRoot(location.pathname);\n\n  return (\n    <MDXProvider components={{\n      Index,\n      Note,\n      Prompt,\n      PromptReply,\n      Screenshot\n    }}>\n\n      <Flex flexDirection=\"column\" minHeight=\"100vh\">\n        <Head title={title} description={description} />\n        <Header location={location} />\n        <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n          <Box display={['none', null, null, 'block']}>\n            <Sidebar location={location} />\n          </Box>\n          <Grid\n            id=\"skip-nav\"\n            maxWidth=\"100%\"\n            gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n            gridTemplateAreas={[\n              '\"heading\" \"content\"',\n              null,\n              '\"heading table-of-contents\" \"content table-of-contents\"',\n            ]}\n            gridColumnGap={[null, null, 6, 7]}\n            gridRowGap={3}\n            mx=\"auto\"\n            p={[5, 6, null, 7]}\n            css={{alignItems: 'start', alignSelf: 'start'}}\n          >\n            <Box css={{gridArea: 'heading'}}>\n              <BorderBox\n                borderWidth={0}\n                borderBottomWidth={1}\n                borderRadius={0}\n                pb={2}\n              >\n                <Box>\n                  <Box>\n                    <Heading as=\"h1\">{title}</Heading>\n                    {description}\n                  </Box>\n                </Box>\n              </BorderBox>\n              {variantRoot != null ? (\n                <Box css={{'margin-top': '25px'}}>\n                  <VariantSelect overlay={true} direction=\"se\" menuWidth=\"min(30ch, 500px)\" root={variantRoot} location={location} />\n                </Box>\n              ) : null}\n            </Box>\n            {pageContext.tableOfContents.items ? (\n              <Position\n                display={['none', null, 'block']}\n                css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n                position=\"sticky\"\n                top={HEADER_HEIGHT + 24}\n                mt=\"6px\"\n                maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n              >\n                <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                  Table of contents\n                </Text>\n                <TableOfContents items={pageContext.tableOfContents.items} />\n              </Position>\n            ) : null}\n            <Box css={{gridArea: 'content'}}>\n              {status || source ? (\n                <Flex mb={3} alignItems=\"center\">\n                  {status ? <StatusLabel status={status} /> : null}\n                  <Box mx=\"auto\" />\n                  {source ? <SourceLink href={source} /> : null}\n                </Flex>\n              ) : null}\n              {pageContext.tableOfContents.items ? (\n                <Box display={['block', null, 'none']} mb={3}>\n                  <Details>\n                    {({open}) => (\n                      <>\n                        <Text as=\"summary\" fontWeight=\"bold\">\n                          {open ? (\n                            <StyledOcticon icon={ChevronDownIcon} mr={2} />\n                          ) : (\n                            <StyledOcticon icon={ChevronRightIcon} mr={2} />\n                          )}\n                          Table of contents\n                        </Text>\n                        <Box pt={1}>\n                          <TableOfContents\n                            items={pageContext.tableOfContents.items}\n                          />\n                        </Box>\n                      </>\n                    )}\n                  </Details>\n                </Box>\n              ) : null}\n              {children}\n              <PageFooter\n                editUrl={pageContext.editUrl}\n                contributors={pageContext.contributors.concat(\n                  additionalContributors.map((login) => ({login})),\n                )}\n              />\n            </Box>\n          </Grid>\n        </Flex>\n      </Flex>\n    </MDXProvider>\n  )\n}\n\nexport default Layout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/documentation/documentation/node_modules/gatsby-theme-doctornpm/src/components/layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`Synopsis`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install (with no args, in package dir)\nnpm install [<@scope>/]<name>\nnpm install [<@scope>/]<name>@<tag>\nnpm install [<@scope>/]<name>@<version>\nnpm install [<@scope>/]<name>@<version range>\nnpm install <alias>@npm:<name>\nnpm install <git-host>:<git-user>/<repo-name>\nnpm install <git repo url>\nnpm install <tarball file>\nnpm install <tarball url>\nnpm install <folder>\n\naliases: npm i, npm add\ncommon options: [-P|--save-prod|-D|--save-dev|-O|--save-optional] [-E|--save-exact] [-B|--save-bundle] [--no-save] [--dry-run]\n`}</code></pre>\n    <h3>{`Description`}</h3>\n    <p>{`This command installs a package, and any packages that it depends on. If the\npackage has a package-lock or shrinkwrap file, the installation of dependencies\nwill be driven by that, with an `}<inlineCode parentName=\"p\">{`npm-shrinkwrap.json`}</inlineCode>{` taking precedence if both\nfiles exist. See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/configuring-npm/package-lock-json\"\n      }}>{`package-lock.json`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/commands/npm-shrinkwrap\"\n      }}><inlineCode parentName=\"a\">{`npm shrinkwrap`}</inlineCode></a>{`.`}</p>\n    <p>{`A `}<inlineCode parentName=\"p\">{`package`}</inlineCode>{` is:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`a) a folder containing a program described by a `}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/configuring-npm/package-json\"\n        }}><inlineCode parentName=\"a\">{`package.json`}</inlineCode></a>{` file`}</li>\n      <li parentName=\"ul\">{`b) a gzipped tarball containing (a)`}</li>\n      <li parentName=\"ul\">{`c) a url that resolves to (b)`}</li>\n      <li parentName=\"ul\">{`d) a `}<inlineCode parentName=\"li\">{`<name>@<version>`}</inlineCode>{` that is published on the registry (see `}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/using-npm/registry\"\n        }}><inlineCode parentName=\"a\">{`registry`}</inlineCode></a>{`) with (c)`}</li>\n      <li parentName=\"ul\">{`e) a `}<inlineCode parentName=\"li\">{`<name>@<tag>`}</inlineCode>{` (see `}<a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-dist-tag\"\n        }}><inlineCode parentName=\"a\">{`npm dist-tag`}</inlineCode></a>{`) that points to (d)`}</li>\n      <li parentName=\"ul\">{`f) a `}<inlineCode parentName=\"li\">{`<name>`}</inlineCode>{` that has a \"latest\" tag satisfying (e)`}</li>\n      <li parentName=\"ul\">{`g) a `}<inlineCode parentName=\"li\">{`<git remote url>`}</inlineCode>{` that resolves to (a)`}</li>\n    </ul>\n    <p>{`Even if you never publish your package, you can still get a lot of\nbenefits of using npm if you just want to write a node program (a), and\nperhaps if you also want to be able to easily install it elsewhere\nafter packing it up into a tarball (b).`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` (in package directory, no arguments):`}</p>\n        <p parentName=\"li\">{`  Install the dependencies in the local node_modules folder.`}</p>\n        <p parentName=\"li\">{`  In global mode (ie, with `}<inlineCode parentName=\"p\">{`-g`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--global`}</inlineCode>{` appended to the command),\nit installs the current package context (ie, the current working\ndirectory) as a global package.`}</p>\n        <p parentName=\"li\">{`  By default, `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` will install all modules listed as dependencies\nin `}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v6/configuring-npm/package-json\"\n          }}><inlineCode parentName=\"a\">{`package.json`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  With the `}<inlineCode parentName=\"p\">{`--production`}</inlineCode>{` flag (or when the `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{` environment variable\nis set to `}<inlineCode parentName=\"p\">{`production`}</inlineCode>{`), npm will not install modules listed in\n`}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{`. To install all modules listed in both `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{`\nand `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` when `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{` environment variable is set to `}<inlineCode parentName=\"p\">{`production`}</inlineCode>{`,\nyou can use `}<inlineCode parentName=\"p\">{`--production=false`}</inlineCode>{`.`}</p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`NOTE: The `}<inlineCode parentName=\"p\">{`--production`}</inlineCode>{` flag has no particular meaning when adding a\ndependency to a project.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <folder>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package in the directory as a symlink in the current project.\nIts dependencies will be installed before it's linked. If `}<inlineCode parentName=\"p\">{`<folder>`}</inlineCode>{` sits\ninside the root of your project, its dependencies may be hoisted to the\ntoplevel `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` as they would for other types of dependencies.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <tarball file>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install a package that is sitting on the filesystem.  Note: if you just want\nto link a dev directory into your npm root, you can do this more easily by\nusing `}<inlineCode parentName=\"p\">{`npm link`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  Tarball requirements:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`The filename `}<em parentName=\"p\">{`must`}</em>{` use `}<inlineCode parentName=\"p\">{`.tar`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`.tar.gz`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`.tgz`}</inlineCode>{` as\nthe extension.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`The package contents should reside in a subfolder inside the tarball (usually it is called `}<inlineCode parentName=\"p\">{`package/`}</inlineCode>{`). npm strips one directory layer when installing the package (an equivalent of `}<inlineCode parentName=\"p\">{`tar x --strip-components=1`}</inlineCode>{` is run).`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`The package must contain a `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file with `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`version`}</inlineCode>{` properties.`}</p>\n            <p parentName=\"li\">{`Example:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  npm install ./package.tgz\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <tarball url>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Fetch the tarball url, and then install it.  In order to distinguish between\nthis and other options, the argument must start with \"http://\" or \"https://\"`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`    npm install https://github.com/indexzero/forever/tarball/v0.5.6\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Do a `}<inlineCode parentName=\"p\">{`<name>@<tag>`}</inlineCode>{` install, where `}<inlineCode parentName=\"p\">{`<tag>`}</inlineCode>{` is the \"tag\" config. (See\n`}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v6/using-npm/config\"\n          }}><inlineCode parentName=\"a\">{`config`}</inlineCode></a>{`. The config's default value is `}<inlineCode parentName=\"p\">{`latest`}</inlineCode>{`.)`}</p>\n        <p parentName=\"li\">{`  In most cases, this will install the version of the modules tagged as\n`}<inlineCode parentName=\"p\">{`latest`}</inlineCode>{` on the npm registry.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`    npm install sax\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <alias>@npm:<name>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install a package under a custom alias. Allows multiple versions of\na same-name package side-by-side, more convenient import names for\npackages with otherwise long ones and using git forks replacements\nor forked npm packages as replacements. Aliasing works only on your\nproject and does not rename packages in transitive dependencies.\nAliases should follow the naming conventions stated in\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://www.npmjs.com/package/validate-npm-package-name#naming-rules\"\n          }}><inlineCode parentName=\"a\">{`validate-npm-package-name`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  Examples:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`    npm install my-react@npm:react\n    npm install jquery2@npm:jquery@2\n    npm install jquery3@npm:jquery@3\n    npm install npa@npm:npm-package-arg\n`}</code></pre>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`\\`npm install\\` saves any specified packages into \\`dependencies\\` by default.\nAdditionally, you can control where and how they get saved with some\nadditional flags:\n\n* \\`-P, --save-prod\\`: Package will appear in your \\`dependencies\\`. This is the\n                     default unless \\`-D\\` or \\`-O\\` are present.\n\n* \\`-D, --save-dev\\`: Package will appear in your \\`devDependencies\\`.\n\n* \\`-O, --save-optional\\`: Package will appear in your \\`optionalDependencies\\`.\n\n* \\`--no-save\\`: Prevents saving to \\`dependencies\\`.\n\nWhen using any of the above options to save dependencies to your\npackage.json, there are two additional, optional flags:\n\n* \\`-E, --save-exact\\`: Saved dependencies will be configured with an\n  exact version rather than using npm's default semver range\n  operator.\n\n* \\`-B, --save-bundle\\`: Saved dependencies will also be added to your \\`bundleDependencies\\` list.\n\nFurther, if you have an \\`npm-shrinkwrap.json\\` or \\`package-lock.json\\` then it\nwill be updated as well.\n\n\\`<scope>\\` is optional. The package will be downloaded from the registry\nassociated with the specified scope. If no registry is associated with\nthe given scope the default registry is assumed. See [\\`scope\\`](/cli/v6/using-npm/scope).\n\nNote: if you do not include the @-symbol on your scope name, npm will\ninterpret this as a GitHub repository instead, see below. Scopes names\nmust also be followed by a slash.\n\nExamples:\n\n\\`\\`\\`bash\nnpm install sax\nnpm install githubname/reponame\nnpm install @myorg/privatepackage\nnpm install node-tap --save-dev\nnpm install dtrace-provider --save-optional\nnpm install readable-stream --save-exact\nnpm install ansi-regex --save-bundle\n\\`\\`\\`\n\n**Note**: If there is a file or folder named \\`<name>\\` in the current\nworking directory, then it will try to install that, and only try to\nfetch the package by name if it is not valid.\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>@<tag>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the version of the package that is referenced by the specified tag.\nIf the tag does not exist in the registry data for that package, then this\nwill fail.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax@latest\nnpm install @myorg/mypackage@latest\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>@<version>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the specified version of the package.  This will fail if the\nversion has not been published to the registry.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax@0.1.1\nnpm install @myorg/privatepackage@1.5.0\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install [<@scope>/]<name>@<version range>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install a version of the package matching the specified version range.  This\nwill follow the same rules for resolving dependencies described in `}<a parentName=\"p\" {...{\n            \"href\": \"/cli/v6/configuring-npm/package-json\"\n          }}><inlineCode parentName=\"a\">{`package.json`}</inlineCode></a>{`.`}</p>\n        <p parentName=\"li\">{`  Note that most version ranges must be put in quotes so that your shell will\ntreat it as a single argument.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install sax@\">=0.1.0 <0.2.0\"\nnpm install @myorg/privatepackage@\">=0.1.0 <0.2.0\"\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <git remote url>`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Installs the package from the hosted git provider, cloning it with `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.\nFor a full git remote url, only that URL will be attempted.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`  <protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>[#<commit-ish> | #semver:<semver>]\n`}</code></pre>\n        <p parentName=\"li\">{`  `}<inlineCode parentName=\"p\">{`<protocol>`}</inlineCode>{` is one of `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+ssh`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+http`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`git+https`}</inlineCode>{`, or\n`}<inlineCode parentName=\"p\">{`git+file`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{` can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is\nspecified, then the default branch of the repository is used.`}</p>\n        <p parentName=\"li\">{`  If the repository makes use of submodules, those submodules will be cloned\nas well.`}</p>\n        <p parentName=\"li\">{`  If the package being installed contains a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script, its\n`}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will be installed, and the prepare\nscript will be run, before the package is packaged and installed.`}</p>\n        <p parentName=\"li\">{`  The following git environment variables are recognized by npm and will be\nadded to the environment when running git:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_ASKPASS`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_EXEC_PATH`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_PROXY_COMMAND`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSH`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSH_COMMAND`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSL_CAINFO`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`GIT_SSL_NO_VERIFY`}</inlineCode></p>\n            <p parentName=\"li\">{`See the git man page for details.`}</p>\n            <p parentName=\"li\">{`Examples:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`npm install git+ssh://git@github.com:npm/cli.git#v1.0.27\nnpm install git+ssh://git@github.com:npm/cli#semver:^5.0\nnpm install git+https://isaacs@github.com/npm/cli.git\nnpm install git://github.com/npm/cli.git#v1.0.27\nGIT_SSH_COMMAND='ssh -i ~/.ssh/custom_ident' npm install git+ssh://git@github.com:npm/cli.git\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install <githubname>/<githubrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install github:<githubname>/<githubrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://github.com/githubname/githubrepo`}</inlineCode>{` by\nattempting to clone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{` can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is\nspecified, then `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` is used.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will\nbe installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script, before the package is\ndone installing.`}</p>\n        <p parentName=\"li\">{`  Examples:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install mygithubuser/myproject\nnpm install github:mygithubuser/myproject\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install gist:[<githubname>/]<gistID>[#<commit-ish>|#semver:<semver>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://gist.github.com/gistID`}</inlineCode>{` by attempting to\nclone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`. The GitHub username associated with the gist is\noptional and will not be saved in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will\nbe installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script, before the package is\ndone installing.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install gist:101a11beef\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install bitbucket:<bitbucketname>/<bitbucketrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://bitbucket.org/bitbucketname/bitbucketrepo`}</inlineCode>{`\nby attempting to clone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{` can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is\nspecified, then `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` is used.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will\nbe installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script, before the package is\ndone installing.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install bitbucket:mybitbucketuser/myproject\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`npm install gitlab:<gitlabname>/<gitlabrepo>[#<commit-ish>]`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\">{`  Install the package at `}<inlineCode parentName=\"p\">{`https://gitlab.com/gitlabname/gitlabrepo`}</inlineCode>{`\nby attempting to clone it using `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`  If `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` is provided, it will be used to clone exactly that\ncommit. If the commit-ish has the format `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`<semver>`}</inlineCode>{` can\nbe any valid semver range or exact version, and npm will look for any tags\nor refs matching that range in the remote repository, much as it would for a\nregistry dependency. If neither `}<inlineCode parentName=\"p\">{`#<commit-ish>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`#semver:<semver>`}</inlineCode>{` is\nspecified, then `}<inlineCode parentName=\"p\">{`master`}</inlineCode>{` is used.`}</p>\n        <p parentName=\"li\">{`  As with regular git dependencies, `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` will\nbe installed if the package has a `}<inlineCode parentName=\"p\">{`prepare`}</inlineCode>{` script, before the package is\ndone installing.`}</p>\n        <p parentName=\"li\">{`  Example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install gitlab:mygitlabuser/myproject\nnpm install gitlab:myusr/myproj#semver:^5.0\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`You may combine multiple arguments, and even multiple types of arguments.\nFor example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install sax@\">=0.1.0 <0.2.0\" bench supervisor\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--tag`}</inlineCode>{` argument will apply to all of the specified install targets. If a\ntag with the given name exists, the tagged version is preferred over newer\nversions.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--dry-run`}</inlineCode>{` argument will report in the usual way what the install would\nhave done without actually installing anything.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--package-lock-only`}</inlineCode>{` argument will only update the `}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{`,\ninstead of checking `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` and downloading dependencies.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`-f`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--force`}</inlineCode>{` argument will force npm to fetch remote resources even if a\nlocal copy exists on disk.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install sax --force\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--no-fund`}</inlineCode>{` argument will hide the message displayed at the end of each\ninstall that acknowledges the number of dependencies looking for funding.\nSee `}<inlineCode parentName=\"p\">{`npm-fund(1)`}</inlineCode></p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`-g`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--global`}</inlineCode>{` argument will cause npm to install the package globally\nrather than locally.  See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/configuring-npm/folders\"\n      }}>{`folders`}</a>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--global-style`}</inlineCode>{` argument will cause npm to install the package into\nyour local `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` folder with the same layout it uses with the\nglobal `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` folder. Only your direct dependencies will show in\n`}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` and everything they depend on will be flattened in their\n`}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` folders. This obviously will eliminate some deduping.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--ignore-scripts`}</inlineCode>{` argument will cause npm to not execute any\nscripts defined in the package.json. See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/scripts\"\n      }}><inlineCode parentName=\"a\">{`scripts`}</inlineCode></a>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--legacy-bundling`}</inlineCode>{` argument will cause npm to install the package such\nthat versions of npm prior to 1.4, such as the one included with node 0.8,\ncan install the package. This eliminates all automatic deduping.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--link`}</inlineCode>{` argument will cause npm to link global installs into the\nlocal space in some cases.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--no-bin-links`}</inlineCode>{` argument will prevent npm from creating symlinks for\nany binaries the package might contain.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--no-optional`}</inlineCode>{` argument will prevent optional dependencies from\nbeing installed.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--no-shrinkwrap`}</inlineCode>{` argument, which will ignore an available\npackage lock or shrinkwrap file and use the package.json instead.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--no-package-lock`}</inlineCode>{` argument will prevent npm from creating a\n`}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{` file.  When running with package-lock's disabled npm\nwill not automatically prune your node modules when installing.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--nodedir=/path/to/node/source`}</inlineCode>{` argument will allow npm to find the\nnode source code so that npm can compile native modules.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--only={prod[uction]|dev[elopment]}`}</inlineCode>{` argument will cause either only\n`}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` or only non-`}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` to be installed regardless of the `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--no-audit`}</inlineCode>{` argument can be used to disable sending of audit reports to\nthe configured registries.  See `}<a parentName=\"p\" {...{\n        \"href\": \"npm-audit\"\n      }}><inlineCode parentName=\"a\">{`npm-audit`}</inlineCode></a>{` for details on what is sent.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/using-npm/config\"\n      }}><inlineCode parentName=\"a\">{`config`}</inlineCode></a>{`.  Many of the configuration params have some\neffect on installation, since that's most of what npm does.`}</p>\n    <h4>{`Algorithm`}</h4>\n    <p>{`To install a package, npm uses the following algorithm:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`load the existing node_modules tree from disk\nclone the tree\nfetch the package.json and assorted metadata and add it to the clone\nwalk the clone and add any missing dependencies\n  dependencies will be added as close to the top as is possible\n  without breaking any other modules\ncompare the original tree with the cloned tree and make a list of\nactions to take to convert one to the other\nexecute all of the actions, deepest first\n  kinds of actions are install, update, remove and move\n`}</code></pre>\n    <p>{`For this `}<inlineCode parentName=\"p\">{`package{dep}`}</inlineCode>{` structure: `}<inlineCode parentName=\"p\">{`A{B,C}, B{C}, C{D}`}</inlineCode>{`,\nthis algorithm produces:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`A\n+-- B\n+-- C\n+-- D\n`}</code></pre>\n    <p>{`That is, the dependency from B to C is satisfied by the fact that A\nalready caused C to be installed at a higher level. D is still installed\nat the top level because nothing conflicts with it.`}</p>\n    <p>{`For `}<inlineCode parentName=\"p\">{`A{B,C}, B{C,D@1}, C{D@2}`}</inlineCode>{`, this algorithm produces:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`A\n+-- B\n+-- C\n   \\`-- D@2\n+-- D@1\n`}</code></pre>\n    <p>{`Because B's D@1 will be installed in the top level, C now has to install D@2\nprivately for itself. This algorithm is deterministic, but different trees may\nbe produced if two dependencies are requested for installation in a different\norder.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/cli/v6/configuring-npm/folders\"\n      }}>{`folders`}</a>{` for a more detailed description of the specific folder structures that npm creates.`}</p>\n    <h3>{`Limitations of npm's Install Algorithm`}</h3>\n    <p>{`npm will refuse to install any package with an identical name to the\ncurrent package. This can be overridden with the `}<inlineCode parentName=\"p\">{`--force`}</inlineCode>{` flag, but in\nmost cases can simply be addressed by changing the local package name.`}</p>\n    <p>{`There are some very rare and pathological edge-cases where a cycle can\ncause npm to try to install a never-ending tree of packages.  Here is\nthe simplest case:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`A -> B -> A' -> B' -> A -> B -> A' -> B' -> A -> ...\n`}</code></pre>\n    <p>{`where `}<inlineCode parentName=\"p\">{`A`}</inlineCode>{` is some version of a package, and `}<inlineCode parentName=\"p\">{`A'`}</inlineCode>{` is a different version\nof the same package.  Because `}<inlineCode parentName=\"p\">{`B`}</inlineCode>{` depends on a different version of `}<inlineCode parentName=\"p\">{`A`}</inlineCode>{`\nthan the one that is already in the tree, it must install a separate\ncopy.  The same is true of `}<inlineCode parentName=\"p\">{`A'`}</inlineCode>{`, which must install `}<inlineCode parentName=\"p\">{`B'`}</inlineCode>{`.  Because `}<inlineCode parentName=\"p\">{`B'`}</inlineCode>{`\ndepends on the original version of `}<inlineCode parentName=\"p\">{`A`}</inlineCode>{`, which has been overridden, the\ncycle falls into infinite regress.`}</p>\n    <p>{`To avoid this situation, npm flat-out refuses to install any\n`}<inlineCode parentName=\"p\">{`name@version`}</inlineCode>{` that is already present anywhere in the tree of package\nfolder ancestors.  A more correct, but more complex, solution would be\nto symlink the existing version into the new location.  If this ever\naffects a real use-case, it will be investigated.`}</p>\n    <h3>{`See Also`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/configuring-npm/folders\"\n        }}>{`npm folders`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-update\"\n        }}>{`npm update`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-audit\"\n        }}>{`npm audit`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-fund\"\n        }}>{`npm fund`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-link\"\n        }}>{`npm link`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-rebuild\"\n        }}>{`npm rebuild`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/using-npm/scripts\"\n        }}>{`npm scripts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-build\"\n        }}>{`npm build`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-config\"\n        }}>{`npm config`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/configuring-npm/npmrc\"\n        }}>{`npmrc`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/using-npm/registry\"\n        }}>{`npm registry`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-dist-tag\"\n        }}>{`npm dist-tag`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-uninstall\"\n        }}>{`npm uninstall`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/commands/npm-shrinkwrap\"\n        }}>{`npm shrinkwrap`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/cli/v6/configuring-npm/package-json\"\n        }}>{`package.json`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}