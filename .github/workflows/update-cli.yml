name: Update CLI

on:
  schedule:
  - cron: "14 2 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Check out the content (source branch).  Use a deploy key so that
    # when we push changes, it will trigger the documentation update
    # workflow run that runs on: push.  (Using the GitHub token would
    # not run the workflow to prevent infinite recursion.)
    - name: Check out source
      uses: actions/checkout@v2
      with:
        ssh-key: ${{ secrets.CLI_DEPLOY_KEY }}

    # Make sure that the new content didn't break the build.  We don't
    # want to promote anything that would breaks.
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    # Update npm to v7
    - name: Update npm v7
      run: npm install -g npm@latest

    # Update the submodules to get the latest documentation updates from
    # the CLI project itself.
    - name: Update submodules
      run: |
        git submodule update --init
        ( cd cli/v6 && git fetch --all && git reset --hard origin/v6-docs )
        git add cli/v6
        ( cd cli/v7 && git fetch --all && git reset --hard origin/latest )
        git add cli/v7

    # Add the CLI documentation to the content directory.
    - name: Install npm packages
      run: npm install
    - name: Update documentation
      run: node cli/cli_import.js

    # Check for changes; this avoids publishing a new change to the
    # dist branch when we made a change to (for example) a unit test.
    # If there were changes made in the publish step above, then this
    # will set the variable `has_changes` to `1` for subsequent steps.
    - name: Check for changes
      id: status
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "::set-output name=has_changes::1"
        fi

    # Commit the changes to the dist branch and push the changes up to
    # GitHub.  (Replace the name and email address with your own.)
    # This step only runs if the previous step set `has_changes` to `1`.
    - name: Check in documentation
      run: |
        git add --verbose .
        git config user.name 'CI User'
        git config user.email 'noreply@npmjs.com'
        git commit -m 'CLI documentation update from CI'
      if: steps.status.outputs.has_changes == '1'

    # Before we publish the changes, ensure the site builds so that we
    # don't break the main branch.
    - name: Build documentation
      run: npm run build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Publish the documentation updates.
    - name: Publish documentation
      run: git push origin main
      if: steps.status.outputs.has_changes == '1'
